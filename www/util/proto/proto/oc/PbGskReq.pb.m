// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PbGskReq.pb.h"
// @@protoc_insertion_point(imports)

@implementation PbGskReqRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PbGskReqRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PbReqAttach ()
@property (strong) NSString* attachName;
@property SInt32 attachType;
@property (strong) NSString* attachUrl;
@property SInt32 attachSize;
@property SInt32 attachPlaytime;
@property SInt32 attachUploadtime;
@property (strong) NSString* attachId;
@end

@implementation PbReqAttach

- (BOOL) hasAttachName {
  return !!hasAttachName_;
}
- (void) setHasAttachName:(BOOL) _value_ {
  hasAttachName_ = !!_value_;
}
@synthesize attachName;
- (BOOL) hasAttachType {
  return !!hasAttachType_;
}
- (void) setHasAttachType:(BOOL) _value_ {
  hasAttachType_ = !!_value_;
}
@synthesize attachType;
- (BOOL) hasAttachUrl {
  return !!hasAttachUrl_;
}
- (void) setHasAttachUrl:(BOOL) _value_ {
  hasAttachUrl_ = !!_value_;
}
@synthesize attachUrl;
- (BOOL) hasAttachSize {
  return !!hasAttachSize_;
}
- (void) setHasAttachSize:(BOOL) _value_ {
  hasAttachSize_ = !!_value_;
}
@synthesize attachSize;
- (BOOL) hasAttachPlaytime {
  return !!hasAttachPlaytime_;
}
- (void) setHasAttachPlaytime:(BOOL) _value_ {
  hasAttachPlaytime_ = !!_value_;
}
@synthesize attachPlaytime;
- (BOOL) hasAttachUploadtime {
  return !!hasAttachUploadtime_;
}
- (void) setHasAttachUploadtime:(BOOL) _value_ {
  hasAttachUploadtime_ = !!_value_;
}
@synthesize attachUploadtime;
- (BOOL) hasAttachId {
  return !!hasAttachId_;
}
- (void) setHasAttachId:(BOOL) _value_ {
  hasAttachId_ = !!_value_;
}
@synthesize attachId;
- (instancetype) init {
  if ((self = [super init])) {
    self.attachName = @"";
    self.attachType = 0;
    self.attachUrl = @"";
    self.attachSize = 0;
    self.attachPlaytime = 0;
    self.attachUploadtime = 0;
    self.attachId = @"";
  }
  return self;
}
static PbReqAttach* defaultPbReqAttachInstance = nil;
+ (void) initialize {
  if (self == [PbReqAttach class]) {
    defaultPbReqAttachInstance = [[PbReqAttach alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqAttachInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqAttachInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAttachName) {
    [output writeString:1 value:self.attachName];
  }
  if (self.hasAttachType) {
    [output writeInt32:2 value:self.attachType];
  }
  if (self.hasAttachUrl) {
    [output writeString:3 value:self.attachUrl];
  }
  if (self.hasAttachSize) {
    [output writeInt32:4 value:self.attachSize];
  }
  if (self.hasAttachPlaytime) {
    [output writeInt32:5 value:self.attachPlaytime];
  }
  if (self.hasAttachUploadtime) {
    [output writeInt32:6 value:self.attachUploadtime];
  }
  if (self.hasAttachId) {
    [output writeString:7 value:self.attachId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAttachName) {
    size_ += computeStringSize(1, self.attachName);
  }
  if (self.hasAttachType) {
    size_ += computeInt32Size(2, self.attachType);
  }
  if (self.hasAttachUrl) {
    size_ += computeStringSize(3, self.attachUrl);
  }
  if (self.hasAttachSize) {
    size_ += computeInt32Size(4, self.attachSize);
  }
  if (self.hasAttachPlaytime) {
    size_ += computeInt32Size(5, self.attachPlaytime);
  }
  if (self.hasAttachUploadtime) {
    size_ += computeInt32Size(6, self.attachUploadtime);
  }
  if (self.hasAttachId) {
    size_ += computeStringSize(7, self.attachId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqAttach*) parseFromData:(NSData*) data {
  return (PbReqAttach*)[[[PbReqAttach builder] mergeFromData:data] build];
}
+ (PbReqAttach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqAttach*)[[[PbReqAttach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqAttach*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqAttach*)[[[PbReqAttach builder] mergeFromInputStream:input] build];
}
+ (PbReqAttach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqAttach*)[[[PbReqAttach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqAttach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqAttach*)[[[PbReqAttach builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqAttach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqAttach*)[[[PbReqAttach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqAttachBuilder*) builder {
  return [[PbReqAttachBuilder alloc] init];
}
+ (PbReqAttachBuilder*) builderWithPrototype:(PbReqAttach*) prototype {
  return [[PbReqAttach builder] mergeFrom:prototype];
}
- (PbReqAttachBuilder*) builder {
  return [PbReqAttach builder];
}
- (PbReqAttachBuilder*) toBuilder {
  return [PbReqAttach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAttachName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachName", self.attachName];
  }
  if (self.hasAttachType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachType", [NSNumber numberWithInteger:self.attachType]];
  }
  if (self.hasAttachUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachUrl", self.attachUrl];
  }
  if (self.hasAttachSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachSize", [NSNumber numberWithInteger:self.attachSize]];
  }
  if (self.hasAttachPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachPlaytime", [NSNumber numberWithInteger:self.attachPlaytime]];
  }
  if (self.hasAttachUploadtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachUploadtime", [NSNumber numberWithInteger:self.attachUploadtime]];
  }
  if (self.hasAttachId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachId", self.attachId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAttachName) {
    [dictionary setObject: self.attachName forKey: @"attachName"];
  }
  if (self.hasAttachType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachType] forKey: @"attachType"];
  }
  if (self.hasAttachUrl) {
    [dictionary setObject: self.attachUrl forKey: @"attachUrl"];
  }
  if (self.hasAttachSize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachSize] forKey: @"attachSize"];
  }
  if (self.hasAttachPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachPlaytime] forKey: @"attachPlaytime"];
  }
  if (self.hasAttachUploadtime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachUploadtime] forKey: @"attachUploadtime"];
  }
  if (self.hasAttachId) {
    [dictionary setObject: self.attachId forKey: @"attachId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqAttach class]]) {
    return NO;
  }
  PbReqAttach *otherMessage = other;
  return
      self.hasAttachName == otherMessage.hasAttachName &&
      (!self.hasAttachName || [self.attachName isEqual:otherMessage.attachName]) &&
      self.hasAttachType == otherMessage.hasAttachType &&
      (!self.hasAttachType || self.attachType == otherMessage.attachType) &&
      self.hasAttachUrl == otherMessage.hasAttachUrl &&
      (!self.hasAttachUrl || [self.attachUrl isEqual:otherMessage.attachUrl]) &&
      self.hasAttachSize == otherMessage.hasAttachSize &&
      (!self.hasAttachSize || self.attachSize == otherMessage.attachSize) &&
      self.hasAttachPlaytime == otherMessage.hasAttachPlaytime &&
      (!self.hasAttachPlaytime || self.attachPlaytime == otherMessage.attachPlaytime) &&
      self.hasAttachUploadtime == otherMessage.hasAttachUploadtime &&
      (!self.hasAttachUploadtime || self.attachUploadtime == otherMessage.attachUploadtime) &&
      self.hasAttachId == otherMessage.hasAttachId &&
      (!self.hasAttachId || [self.attachId isEqual:otherMessage.attachId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAttachName) {
    hashCode = hashCode * 31 + [self.attachName hash];
  }
  if (self.hasAttachType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachType] hash];
  }
  if (self.hasAttachUrl) {
    hashCode = hashCode * 31 + [self.attachUrl hash];
  }
  if (self.hasAttachSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachSize] hash];
  }
  if (self.hasAttachPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachPlaytime] hash];
  }
  if (self.hasAttachUploadtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachUploadtime] hash];
  }
  if (self.hasAttachId) {
    hashCode = hashCode * 31 + [self.attachId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqAttachBuilder()
@property (strong) PbReqAttach* resultPbReqAttach;
@end

@implementation PbReqAttachBuilder
@synthesize resultPbReqAttach;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqAttach = [[PbReqAttach alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqAttach;
}
- (PbReqAttachBuilder*) clear {
  self.resultPbReqAttach = [[PbReqAttach alloc] init];
  return self;
}
- (PbReqAttachBuilder*) clone {
  return [PbReqAttach builderWithPrototype:resultPbReqAttach];
}
- (PbReqAttach*) defaultInstance {
  return [PbReqAttach defaultInstance];
}
- (PbReqAttach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqAttach*) buildPartial {
  PbReqAttach* returnMe = resultPbReqAttach;
  self.resultPbReqAttach = nil;
  return returnMe;
}
- (PbReqAttachBuilder*) mergeFrom:(PbReqAttach*) other {
  if (other == [PbReqAttach defaultInstance]) {
    return self;
  }
  if (other.hasAttachName) {
    [self setAttachName:other.attachName];
  }
  if (other.hasAttachType) {
    [self setAttachType:other.attachType];
  }
  if (other.hasAttachUrl) {
    [self setAttachUrl:other.attachUrl];
  }
  if (other.hasAttachSize) {
    [self setAttachSize:other.attachSize];
  }
  if (other.hasAttachPlaytime) {
    [self setAttachPlaytime:other.attachPlaytime];
  }
  if (other.hasAttachUploadtime) {
    [self setAttachUploadtime:other.attachUploadtime];
  }
  if (other.hasAttachId) {
    [self setAttachId:other.attachId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqAttachBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqAttachBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAttachName:[input readString]];
        break;
      }
      case 16: {
        [self setAttachType:[input readInt32]];
        break;
      }
      case 26: {
        [self setAttachUrl:[input readString]];
        break;
      }
      case 32: {
        [self setAttachSize:[input readInt32]];
        break;
      }
      case 40: {
        [self setAttachPlaytime:[input readInt32]];
        break;
      }
      case 48: {
        [self setAttachUploadtime:[input readInt32]];
        break;
      }
      case 58: {
        [self setAttachId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAttachName {
  return resultPbReqAttach.hasAttachName;
}
- (NSString*) attachName {
  return resultPbReqAttach.attachName;
}
- (PbReqAttachBuilder*) setAttachName:(NSString*) value {
  resultPbReqAttach.hasAttachName = YES;
  resultPbReqAttach.attachName = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachName {
  resultPbReqAttach.hasAttachName = NO;
  resultPbReqAttach.attachName = @"";
  return self;
}
- (BOOL) hasAttachType {
  return resultPbReqAttach.hasAttachType;
}
- (SInt32) attachType {
  return resultPbReqAttach.attachType;
}
- (PbReqAttachBuilder*) setAttachType:(SInt32) value {
  resultPbReqAttach.hasAttachType = YES;
  resultPbReqAttach.attachType = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachType {
  resultPbReqAttach.hasAttachType = NO;
  resultPbReqAttach.attachType = 0;
  return self;
}
- (BOOL) hasAttachUrl {
  return resultPbReqAttach.hasAttachUrl;
}
- (NSString*) attachUrl {
  return resultPbReqAttach.attachUrl;
}
- (PbReqAttachBuilder*) setAttachUrl:(NSString*) value {
  resultPbReqAttach.hasAttachUrl = YES;
  resultPbReqAttach.attachUrl = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachUrl {
  resultPbReqAttach.hasAttachUrl = NO;
  resultPbReqAttach.attachUrl = @"";
  return self;
}
- (BOOL) hasAttachSize {
  return resultPbReqAttach.hasAttachSize;
}
- (SInt32) attachSize {
  return resultPbReqAttach.attachSize;
}
- (PbReqAttachBuilder*) setAttachSize:(SInt32) value {
  resultPbReqAttach.hasAttachSize = YES;
  resultPbReqAttach.attachSize = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachSize {
  resultPbReqAttach.hasAttachSize = NO;
  resultPbReqAttach.attachSize = 0;
  return self;
}
- (BOOL) hasAttachPlaytime {
  return resultPbReqAttach.hasAttachPlaytime;
}
- (SInt32) attachPlaytime {
  return resultPbReqAttach.attachPlaytime;
}
- (PbReqAttachBuilder*) setAttachPlaytime:(SInt32) value {
  resultPbReqAttach.hasAttachPlaytime = YES;
  resultPbReqAttach.attachPlaytime = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachPlaytime {
  resultPbReqAttach.hasAttachPlaytime = NO;
  resultPbReqAttach.attachPlaytime = 0;
  return self;
}
- (BOOL) hasAttachUploadtime {
  return resultPbReqAttach.hasAttachUploadtime;
}
- (SInt32) attachUploadtime {
  return resultPbReqAttach.attachUploadtime;
}
- (PbReqAttachBuilder*) setAttachUploadtime:(SInt32) value {
  resultPbReqAttach.hasAttachUploadtime = YES;
  resultPbReqAttach.attachUploadtime = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachUploadtime {
  resultPbReqAttach.hasAttachUploadtime = NO;
  resultPbReqAttach.attachUploadtime = 0;
  return self;
}
- (BOOL) hasAttachId {
  return resultPbReqAttach.hasAttachId;
}
- (NSString*) attachId {
  return resultPbReqAttach.attachId;
}
- (PbReqAttachBuilder*) setAttachId:(NSString*) value {
  resultPbReqAttach.hasAttachId = YES;
  resultPbReqAttach.attachId = value;
  return self;
}
- (PbReqAttachBuilder*) clearAttachId {
  resultPbReqAttach.hasAttachId = NO;
  resultPbReqAttach.attachId = @"";
  return self;
}
@end

@interface PbReqBaseFile ()
@property (strong) PbReqAttach* baseinfo;
@property SInt32 creUin;
@property (strong) NSString* creName;
@property (strong) NSString* jobType;
@property (strong) NSString* tag;
@property (strong) NSString* fid;
@property (strong) NSString* fpid;
@end

@implementation PbReqBaseFile

- (BOOL) hasBaseinfo {
  return !!hasBaseinfo_;
}
- (void) setHasBaseinfo:(BOOL) _value_ {
  hasBaseinfo_ = !!_value_;
}
@synthesize baseinfo;
- (BOOL) hasCreUin {
  return !!hasCreUin_;
}
- (void) setHasCreUin:(BOOL) _value_ {
  hasCreUin_ = !!_value_;
}
@synthesize creUin;
- (BOOL) hasCreName {
  return !!hasCreName_;
}
- (void) setHasCreName:(BOOL) _value_ {
  hasCreName_ = !!_value_;
}
@synthesize creName;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) _value_ {
  hasTag_ = !!_value_;
}
@synthesize tag;
- (BOOL) hasFid {
  return !!hasFid_;
}
- (void) setHasFid:(BOOL) _value_ {
  hasFid_ = !!_value_;
}
@synthesize fid;
- (BOOL) hasFpid {
  return !!hasFpid_;
}
- (void) setHasFpid:(BOOL) _value_ {
  hasFpid_ = !!_value_;
}
@synthesize fpid;
- (instancetype) init {
  if ((self = [super init])) {
    self.baseinfo = [PbReqAttach defaultInstance];
    self.creUin = 0;
    self.creName = @"";
    self.jobType = @"";
    self.tag = @"";
    self.fid = @"";
    self.fpid = @"";
  }
  return self;
}
static PbReqBaseFile* defaultPbReqBaseFileInstance = nil;
+ (void) initialize {
  if (self == [PbReqBaseFile class]) {
    defaultPbReqBaseFileInstance = [[PbReqBaseFile alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqBaseFileInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqBaseFileInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBaseinfo) {
    [output writeMessage:1 value:self.baseinfo];
  }
  if (self.hasCreUin) {
    [output writeInt32:2 value:self.creUin];
  }
  if (self.hasCreName) {
    [output writeString:3 value:self.creName];
  }
  if (self.hasJobType) {
    [output writeString:4 value:self.jobType];
  }
  if (self.hasTag) {
    [output writeString:5 value:self.tag];
  }
  if (self.hasFid) {
    [output writeString:6 value:self.fid];
  }
  if (self.hasFpid) {
    [output writeString:7 value:self.fpid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBaseinfo) {
    size_ += computeMessageSize(1, self.baseinfo);
  }
  if (self.hasCreUin) {
    size_ += computeInt32Size(2, self.creUin);
  }
  if (self.hasCreName) {
    size_ += computeStringSize(3, self.creName);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(4, self.jobType);
  }
  if (self.hasTag) {
    size_ += computeStringSize(5, self.tag);
  }
  if (self.hasFid) {
    size_ += computeStringSize(6, self.fid);
  }
  if (self.hasFpid) {
    size_ += computeStringSize(7, self.fpid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqBaseFile*) parseFromData:(NSData*) data {
  return (PbReqBaseFile*)[[[PbReqBaseFile builder] mergeFromData:data] build];
}
+ (PbReqBaseFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqBaseFile*)[[[PbReqBaseFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqBaseFile*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqBaseFile*)[[[PbReqBaseFile builder] mergeFromInputStream:input] build];
}
+ (PbReqBaseFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqBaseFile*)[[[PbReqBaseFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqBaseFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqBaseFile*)[[[PbReqBaseFile builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqBaseFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqBaseFile*)[[[PbReqBaseFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqBaseFileBuilder*) builder {
  return [[PbReqBaseFileBuilder alloc] init];
}
+ (PbReqBaseFileBuilder*) builderWithPrototype:(PbReqBaseFile*) prototype {
  return [[PbReqBaseFile builder] mergeFrom:prototype];
}
- (PbReqBaseFileBuilder*) builder {
  return [PbReqBaseFile builder];
}
- (PbReqBaseFileBuilder*) toBuilder {
  return [PbReqBaseFile builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBaseinfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"baseinfo"];
    [self.baseinfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCreUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"creUin", [NSNumber numberWithInteger:self.creUin]];
  }
  if (self.hasCreName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"creName", self.creName];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasTag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tag", self.tag];
  }
  if (self.hasFid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fid", self.fid];
  }
  if (self.hasFpid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fpid", self.fpid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBaseinfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.baseinfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"baseinfo"];
  }
  if (self.hasCreUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.creUin] forKey: @"creUin"];
  }
  if (self.hasCreName) {
    [dictionary setObject: self.creName forKey: @"creName"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasTag) {
    [dictionary setObject: self.tag forKey: @"tag"];
  }
  if (self.hasFid) {
    [dictionary setObject: self.fid forKey: @"fid"];
  }
  if (self.hasFpid) {
    [dictionary setObject: self.fpid forKey: @"fpid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqBaseFile class]]) {
    return NO;
  }
  PbReqBaseFile *otherMessage = other;
  return
      self.hasBaseinfo == otherMessage.hasBaseinfo &&
      (!self.hasBaseinfo || [self.baseinfo isEqual:otherMessage.baseinfo]) &&
      self.hasCreUin == otherMessage.hasCreUin &&
      (!self.hasCreUin || self.creUin == otherMessage.creUin) &&
      self.hasCreName == otherMessage.hasCreName &&
      (!self.hasCreName || [self.creName isEqual:otherMessage.creName]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasTag == otherMessage.hasTag &&
      (!self.hasTag || [self.tag isEqual:otherMessage.tag]) &&
      self.hasFid == otherMessage.hasFid &&
      (!self.hasFid || [self.fid isEqual:otherMessage.fid]) &&
      self.hasFpid == otherMessage.hasFpid &&
      (!self.hasFpid || [self.fpid isEqual:otherMessage.fpid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBaseinfo) {
    hashCode = hashCode * 31 + [self.baseinfo hash];
  }
  if (self.hasCreUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.creUin] hash];
  }
  if (self.hasCreName) {
    hashCode = hashCode * 31 + [self.creName hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasTag) {
    hashCode = hashCode * 31 + [self.tag hash];
  }
  if (self.hasFid) {
    hashCode = hashCode * 31 + [self.fid hash];
  }
  if (self.hasFpid) {
    hashCode = hashCode * 31 + [self.fpid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqBaseFileBuilder()
@property (strong) PbReqBaseFile* resultPbReqBaseFile;
@end

@implementation PbReqBaseFileBuilder
@synthesize resultPbReqBaseFile;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqBaseFile = [[PbReqBaseFile alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqBaseFile;
}
- (PbReqBaseFileBuilder*) clear {
  self.resultPbReqBaseFile = [[PbReqBaseFile alloc] init];
  return self;
}
- (PbReqBaseFileBuilder*) clone {
  return [PbReqBaseFile builderWithPrototype:resultPbReqBaseFile];
}
- (PbReqBaseFile*) defaultInstance {
  return [PbReqBaseFile defaultInstance];
}
- (PbReqBaseFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqBaseFile*) buildPartial {
  PbReqBaseFile* returnMe = resultPbReqBaseFile;
  self.resultPbReqBaseFile = nil;
  return returnMe;
}
- (PbReqBaseFileBuilder*) mergeFrom:(PbReqBaseFile*) other {
  if (other == [PbReqBaseFile defaultInstance]) {
    return self;
  }
  if (other.hasBaseinfo) {
    [self mergeBaseinfo:other.baseinfo];
  }
  if (other.hasCreUin) {
    [self setCreUin:other.creUin];
  }
  if (other.hasCreName) {
    [self setCreName:other.creName];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasFid) {
    [self setFid:other.fid];
  }
  if (other.hasFpid) {
    [self setFpid:other.fpid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqBaseFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqBaseFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbReqAttachBuilder* subBuilder = [PbReqAttach builder];
        if (self.hasBaseinfo) {
          [subBuilder mergeFrom:self.baseinfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBaseinfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCreUin:[input readInt32]];
        break;
      }
      case 26: {
        [self setCreName:[input readString]];
        break;
      }
      case 34: {
        [self setJobType:[input readString]];
        break;
      }
      case 42: {
        [self setTag:[input readString]];
        break;
      }
      case 50: {
        [self setFid:[input readString]];
        break;
      }
      case 58: {
        [self setFpid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasBaseinfo {
  return resultPbReqBaseFile.hasBaseinfo;
}
- (PbReqAttach*) baseinfo {
  return resultPbReqBaseFile.baseinfo;
}
- (PbReqBaseFileBuilder*) setBaseinfo:(PbReqAttach*) value {
  resultPbReqBaseFile.hasBaseinfo = YES;
  resultPbReqBaseFile.baseinfo = value;
  return self;
}
- (PbReqBaseFileBuilder*) setBaseinfoBuilder:(PbReqAttachBuilder*) builderForValue {
  return [self setBaseinfo:[builderForValue build]];
}
- (PbReqBaseFileBuilder*) mergeBaseinfo:(PbReqAttach*) value {
  if (resultPbReqBaseFile.hasBaseinfo &&
      resultPbReqBaseFile.baseinfo != [PbReqAttach defaultInstance]) {
    resultPbReqBaseFile.baseinfo =
      [[[PbReqAttach builderWithPrototype:resultPbReqBaseFile.baseinfo] mergeFrom:value] buildPartial];
  } else {
    resultPbReqBaseFile.baseinfo = value;
  }
  resultPbReqBaseFile.hasBaseinfo = YES;
  return self;
}
- (PbReqBaseFileBuilder*) clearBaseinfo {
  resultPbReqBaseFile.hasBaseinfo = NO;
  resultPbReqBaseFile.baseinfo = [PbReqAttach defaultInstance];
  return self;
}
- (BOOL) hasCreUin {
  return resultPbReqBaseFile.hasCreUin;
}
- (SInt32) creUin {
  return resultPbReqBaseFile.creUin;
}
- (PbReqBaseFileBuilder*) setCreUin:(SInt32) value {
  resultPbReqBaseFile.hasCreUin = YES;
  resultPbReqBaseFile.creUin = value;
  return self;
}
- (PbReqBaseFileBuilder*) clearCreUin {
  resultPbReqBaseFile.hasCreUin = NO;
  resultPbReqBaseFile.creUin = 0;
  return self;
}
- (BOOL) hasCreName {
  return resultPbReqBaseFile.hasCreName;
}
- (NSString*) creName {
  return resultPbReqBaseFile.creName;
}
- (PbReqBaseFileBuilder*) setCreName:(NSString*) value {
  resultPbReqBaseFile.hasCreName = YES;
  resultPbReqBaseFile.creName = value;
  return self;
}
- (PbReqBaseFileBuilder*) clearCreName {
  resultPbReqBaseFile.hasCreName = NO;
  resultPbReqBaseFile.creName = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbReqBaseFile.hasJobType;
}
- (NSString*) jobType {
  return resultPbReqBaseFile.jobType;
}
- (PbReqBaseFileBuilder*) setJobType:(NSString*) value {
  resultPbReqBaseFile.hasJobType = YES;
  resultPbReqBaseFile.jobType = value;
  return self;
}
- (PbReqBaseFileBuilder*) clearJobType {
  resultPbReqBaseFile.hasJobType = NO;
  resultPbReqBaseFile.jobType = @"";
  return self;
}
- (BOOL) hasTag {
  return resultPbReqBaseFile.hasTag;
}
- (NSString*) tag {
  return resultPbReqBaseFile.tag;
}
- (PbReqBaseFileBuilder*) setTag:(NSString*) value {
  resultPbReqBaseFile.hasTag = YES;
  resultPbReqBaseFile.tag = value;
  return self;
}
- (PbReqBaseFileBuilder*) clearTag {
  resultPbReqBaseFile.hasTag = NO;
  resultPbReqBaseFile.tag = @"";
  return self;
}
- (BOOL) hasFid {
  return resultPbReqBaseFile.hasFid;
}
- (NSString*) fid {
  return resultPbReqBaseFile.fid;
}
- (PbReqBaseFileBuilder*) setFid:(NSString*) value {
  resultPbReqBaseFile.hasFid = YES;
  resultPbReqBaseFile.fid = value;
  return self;
}
- (PbReqBaseFileBuilder*) clearFid {
  resultPbReqBaseFile.hasFid = NO;
  resultPbReqBaseFile.fid = @"";
  return self;
}
- (BOOL) hasFpid {
  return resultPbReqBaseFile.hasFpid;
}
- (NSString*) fpid {
  return resultPbReqBaseFile.fpid;
}
- (PbReqBaseFileBuilder*) setFpid:(NSString*) value {
  resultPbReqBaseFile.hasFpid = YES;
  resultPbReqBaseFile.fpid = value;
  return self;
}
- (PbReqBaseFileBuilder*) clearFpid {
  resultPbReqBaseFile.hasFpid = NO;
  resultPbReqBaseFile.fpid = @"";
  return self;
}
@end

@interface PbReqMsgBook ()
@property SInt32 bookType;
@property (strong) NSString* bookId;
@property (strong) NSString* bookName;
@property (strong) NSString* bookCataId;
@property (strong) NSString* bookCataInfo;
@property (strong) NSString* bookSubcataId;
@property (strong) NSString* bookSubcataInfo;
@property (strong) NSString* bookInfoId;
@property (strong) NSString* bookInfo;
@end

@implementation PbReqMsgBook

- (BOOL) hasBookType {
  return !!hasBookType_;
}
- (void) setHasBookType:(BOOL) _value_ {
  hasBookType_ = !!_value_;
}
@synthesize bookType;
- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (BOOL) hasBookName {
  return !!hasBookName_;
}
- (void) setHasBookName:(BOOL) _value_ {
  hasBookName_ = !!_value_;
}
@synthesize bookName;
- (BOOL) hasBookCataId {
  return !!hasBookCataId_;
}
- (void) setHasBookCataId:(BOOL) _value_ {
  hasBookCataId_ = !!_value_;
}
@synthesize bookCataId;
- (BOOL) hasBookCataInfo {
  return !!hasBookCataInfo_;
}
- (void) setHasBookCataInfo:(BOOL) _value_ {
  hasBookCataInfo_ = !!_value_;
}
@synthesize bookCataInfo;
- (BOOL) hasBookSubcataId {
  return !!hasBookSubcataId_;
}
- (void) setHasBookSubcataId:(BOOL) _value_ {
  hasBookSubcataId_ = !!_value_;
}
@synthesize bookSubcataId;
- (BOOL) hasBookSubcataInfo {
  return !!hasBookSubcataInfo_;
}
- (void) setHasBookSubcataInfo:(BOOL) _value_ {
  hasBookSubcataInfo_ = !!_value_;
}
@synthesize bookSubcataInfo;
- (BOOL) hasBookInfoId {
  return !!hasBookInfoId_;
}
- (void) setHasBookInfoId:(BOOL) _value_ {
  hasBookInfoId_ = !!_value_;
}
@synthesize bookInfoId;
- (BOOL) hasBookInfo {
  return !!hasBookInfo_;
}
- (void) setHasBookInfo:(BOOL) _value_ {
  hasBookInfo_ = !!_value_;
}
@synthesize bookInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.bookType = 0;
    self.bookId = @"";
    self.bookName = @"";
    self.bookCataId = @"";
    self.bookCataInfo = @"";
    self.bookSubcataId = @"";
    self.bookSubcataInfo = @"";
    self.bookInfoId = @"";
    self.bookInfo = @"";
  }
  return self;
}
static PbReqMsgBook* defaultPbReqMsgBookInstance = nil;
+ (void) initialize {
  if (self == [PbReqMsgBook class]) {
    defaultPbReqMsgBookInstance = [[PbReqMsgBook alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqMsgBookInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqMsgBookInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookType) {
    [output writeInt32:1 value:self.bookType];
  }
  if (self.hasBookId) {
    [output writeString:2 value:self.bookId];
  }
  if (self.hasBookName) {
    [output writeString:3 value:self.bookName];
  }
  if (self.hasBookCataId) {
    [output writeString:4 value:self.bookCataId];
  }
  if (self.hasBookCataInfo) {
    [output writeString:5 value:self.bookCataInfo];
  }
  if (self.hasBookSubcataId) {
    [output writeString:6 value:self.bookSubcataId];
  }
  if (self.hasBookSubcataInfo) {
    [output writeString:7 value:self.bookSubcataInfo];
  }
  if (self.hasBookInfoId) {
    [output writeString:8 value:self.bookInfoId];
  }
  if (self.hasBookInfo) {
    [output writeString:9 value:self.bookInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBookType) {
    size_ += computeInt32Size(1, self.bookType);
  }
  if (self.hasBookId) {
    size_ += computeStringSize(2, self.bookId);
  }
  if (self.hasBookName) {
    size_ += computeStringSize(3, self.bookName);
  }
  if (self.hasBookCataId) {
    size_ += computeStringSize(4, self.bookCataId);
  }
  if (self.hasBookCataInfo) {
    size_ += computeStringSize(5, self.bookCataInfo);
  }
  if (self.hasBookSubcataId) {
    size_ += computeStringSize(6, self.bookSubcataId);
  }
  if (self.hasBookSubcataInfo) {
    size_ += computeStringSize(7, self.bookSubcataInfo);
  }
  if (self.hasBookInfoId) {
    size_ += computeStringSize(8, self.bookInfoId);
  }
  if (self.hasBookInfo) {
    size_ += computeStringSize(9, self.bookInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqMsgBook*) parseFromData:(NSData*) data {
  return (PbReqMsgBook*)[[[PbReqMsgBook builder] mergeFromData:data] build];
}
+ (PbReqMsgBook*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMsgBook*)[[[PbReqMsgBook builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqMsgBook*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqMsgBook*)[[[PbReqMsgBook builder] mergeFromInputStream:input] build];
}
+ (PbReqMsgBook*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMsgBook*)[[[PbReqMsgBook builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqMsgBook*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqMsgBook*)[[[PbReqMsgBook builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqMsgBook*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMsgBook*)[[[PbReqMsgBook builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqMsgBookBuilder*) builder {
  return [[PbReqMsgBookBuilder alloc] init];
}
+ (PbReqMsgBookBuilder*) builderWithPrototype:(PbReqMsgBook*) prototype {
  return [[PbReqMsgBook builder] mergeFrom:prototype];
}
- (PbReqMsgBookBuilder*) builder {
  return [PbReqMsgBook builder];
}
- (PbReqMsgBookBuilder*) toBuilder {
  return [PbReqMsgBook builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBookType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookType", [NSNumber numberWithInteger:self.bookType]];
  }
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", self.bookId];
  }
  if (self.hasBookName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookName", self.bookName];
  }
  if (self.hasBookCataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookCataId", self.bookCataId];
  }
  if (self.hasBookCataInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookCataInfo", self.bookCataInfo];
  }
  if (self.hasBookSubcataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookSubcataId", self.bookSubcataId];
  }
  if (self.hasBookSubcataInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookSubcataInfo", self.bookSubcataInfo];
  }
  if (self.hasBookInfoId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookInfoId", self.bookInfoId];
  }
  if (self.hasBookInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookInfo", self.bookInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBookType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookType] forKey: @"bookType"];
  }
  if (self.hasBookId) {
    [dictionary setObject: self.bookId forKey: @"bookId"];
  }
  if (self.hasBookName) {
    [dictionary setObject: self.bookName forKey: @"bookName"];
  }
  if (self.hasBookCataId) {
    [dictionary setObject: self.bookCataId forKey: @"bookCataId"];
  }
  if (self.hasBookCataInfo) {
    [dictionary setObject: self.bookCataInfo forKey: @"bookCataInfo"];
  }
  if (self.hasBookSubcataId) {
    [dictionary setObject: self.bookSubcataId forKey: @"bookSubcataId"];
  }
  if (self.hasBookSubcataInfo) {
    [dictionary setObject: self.bookSubcataInfo forKey: @"bookSubcataInfo"];
  }
  if (self.hasBookInfoId) {
    [dictionary setObject: self.bookInfoId forKey: @"bookInfoId"];
  }
  if (self.hasBookInfo) {
    [dictionary setObject: self.bookInfo forKey: @"bookInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqMsgBook class]]) {
    return NO;
  }
  PbReqMsgBook *otherMessage = other;
  return
      self.hasBookType == otherMessage.hasBookType &&
      (!self.hasBookType || self.bookType == otherMessage.bookType) &&
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || [self.bookId isEqual:otherMessage.bookId]) &&
      self.hasBookName == otherMessage.hasBookName &&
      (!self.hasBookName || [self.bookName isEqual:otherMessage.bookName]) &&
      self.hasBookCataId == otherMessage.hasBookCataId &&
      (!self.hasBookCataId || [self.bookCataId isEqual:otherMessage.bookCataId]) &&
      self.hasBookCataInfo == otherMessage.hasBookCataInfo &&
      (!self.hasBookCataInfo || [self.bookCataInfo isEqual:otherMessage.bookCataInfo]) &&
      self.hasBookSubcataId == otherMessage.hasBookSubcataId &&
      (!self.hasBookSubcataId || [self.bookSubcataId isEqual:otherMessage.bookSubcataId]) &&
      self.hasBookSubcataInfo == otherMessage.hasBookSubcataInfo &&
      (!self.hasBookSubcataInfo || [self.bookSubcataInfo isEqual:otherMessage.bookSubcataInfo]) &&
      self.hasBookInfoId == otherMessage.hasBookInfoId &&
      (!self.hasBookInfoId || [self.bookInfoId isEqual:otherMessage.bookInfoId]) &&
      self.hasBookInfo == otherMessage.hasBookInfo &&
      (!self.hasBookInfo || [self.bookInfo isEqual:otherMessage.bookInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBookType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookType] hash];
  }
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [self.bookId hash];
  }
  if (self.hasBookName) {
    hashCode = hashCode * 31 + [self.bookName hash];
  }
  if (self.hasBookCataId) {
    hashCode = hashCode * 31 + [self.bookCataId hash];
  }
  if (self.hasBookCataInfo) {
    hashCode = hashCode * 31 + [self.bookCataInfo hash];
  }
  if (self.hasBookSubcataId) {
    hashCode = hashCode * 31 + [self.bookSubcataId hash];
  }
  if (self.hasBookSubcataInfo) {
    hashCode = hashCode * 31 + [self.bookSubcataInfo hash];
  }
  if (self.hasBookInfoId) {
    hashCode = hashCode * 31 + [self.bookInfoId hash];
  }
  if (self.hasBookInfo) {
    hashCode = hashCode * 31 + [self.bookInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqMsgBookBuilder()
@property (strong) PbReqMsgBook* resultPbReqMsgBook;
@end

@implementation PbReqMsgBookBuilder
@synthesize resultPbReqMsgBook;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqMsgBook = [[PbReqMsgBook alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqMsgBook;
}
- (PbReqMsgBookBuilder*) clear {
  self.resultPbReqMsgBook = [[PbReqMsgBook alloc] init];
  return self;
}
- (PbReqMsgBookBuilder*) clone {
  return [PbReqMsgBook builderWithPrototype:resultPbReqMsgBook];
}
- (PbReqMsgBook*) defaultInstance {
  return [PbReqMsgBook defaultInstance];
}
- (PbReqMsgBook*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqMsgBook*) buildPartial {
  PbReqMsgBook* returnMe = resultPbReqMsgBook;
  self.resultPbReqMsgBook = nil;
  return returnMe;
}
- (PbReqMsgBookBuilder*) mergeFrom:(PbReqMsgBook*) other {
  if (other == [PbReqMsgBook defaultInstance]) {
    return self;
  }
  if (other.hasBookType) {
    [self setBookType:other.bookType];
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  if (other.hasBookName) {
    [self setBookName:other.bookName];
  }
  if (other.hasBookCataId) {
    [self setBookCataId:other.bookCataId];
  }
  if (other.hasBookCataInfo) {
    [self setBookCataInfo:other.bookCataInfo];
  }
  if (other.hasBookSubcataId) {
    [self setBookSubcataId:other.bookSubcataId];
  }
  if (other.hasBookSubcataInfo) {
    [self setBookSubcataInfo:other.bookSubcataInfo];
  }
  if (other.hasBookInfoId) {
    [self setBookInfoId:other.bookInfoId];
  }
  if (other.hasBookInfo) {
    [self setBookInfo:other.bookInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqMsgBookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqMsgBookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBookType:[input readInt32]];
        break;
      }
      case 18: {
        [self setBookId:[input readString]];
        break;
      }
      case 26: {
        [self setBookName:[input readString]];
        break;
      }
      case 34: {
        [self setBookCataId:[input readString]];
        break;
      }
      case 42: {
        [self setBookCataInfo:[input readString]];
        break;
      }
      case 50: {
        [self setBookSubcataId:[input readString]];
        break;
      }
      case 58: {
        [self setBookSubcataInfo:[input readString]];
        break;
      }
      case 66: {
        [self setBookInfoId:[input readString]];
        break;
      }
      case 74: {
        [self setBookInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasBookType {
  return resultPbReqMsgBook.hasBookType;
}
- (SInt32) bookType {
  return resultPbReqMsgBook.bookType;
}
- (PbReqMsgBookBuilder*) setBookType:(SInt32) value {
  resultPbReqMsgBook.hasBookType = YES;
  resultPbReqMsgBook.bookType = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookType {
  resultPbReqMsgBook.hasBookType = NO;
  resultPbReqMsgBook.bookType = 0;
  return self;
}
- (BOOL) hasBookId {
  return resultPbReqMsgBook.hasBookId;
}
- (NSString*) bookId {
  return resultPbReqMsgBook.bookId;
}
- (PbReqMsgBookBuilder*) setBookId:(NSString*) value {
  resultPbReqMsgBook.hasBookId = YES;
  resultPbReqMsgBook.bookId = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookId {
  resultPbReqMsgBook.hasBookId = NO;
  resultPbReqMsgBook.bookId = @"";
  return self;
}
- (BOOL) hasBookName {
  return resultPbReqMsgBook.hasBookName;
}
- (NSString*) bookName {
  return resultPbReqMsgBook.bookName;
}
- (PbReqMsgBookBuilder*) setBookName:(NSString*) value {
  resultPbReqMsgBook.hasBookName = YES;
  resultPbReqMsgBook.bookName = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookName {
  resultPbReqMsgBook.hasBookName = NO;
  resultPbReqMsgBook.bookName = @"";
  return self;
}
- (BOOL) hasBookCataId {
  return resultPbReqMsgBook.hasBookCataId;
}
- (NSString*) bookCataId {
  return resultPbReqMsgBook.bookCataId;
}
- (PbReqMsgBookBuilder*) setBookCataId:(NSString*) value {
  resultPbReqMsgBook.hasBookCataId = YES;
  resultPbReqMsgBook.bookCataId = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookCataId {
  resultPbReqMsgBook.hasBookCataId = NO;
  resultPbReqMsgBook.bookCataId = @"";
  return self;
}
- (BOOL) hasBookCataInfo {
  return resultPbReqMsgBook.hasBookCataInfo;
}
- (NSString*) bookCataInfo {
  return resultPbReqMsgBook.bookCataInfo;
}
- (PbReqMsgBookBuilder*) setBookCataInfo:(NSString*) value {
  resultPbReqMsgBook.hasBookCataInfo = YES;
  resultPbReqMsgBook.bookCataInfo = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookCataInfo {
  resultPbReqMsgBook.hasBookCataInfo = NO;
  resultPbReqMsgBook.bookCataInfo = @"";
  return self;
}
- (BOOL) hasBookSubcataId {
  return resultPbReqMsgBook.hasBookSubcataId;
}
- (NSString*) bookSubcataId {
  return resultPbReqMsgBook.bookSubcataId;
}
- (PbReqMsgBookBuilder*) setBookSubcataId:(NSString*) value {
  resultPbReqMsgBook.hasBookSubcataId = YES;
  resultPbReqMsgBook.bookSubcataId = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookSubcataId {
  resultPbReqMsgBook.hasBookSubcataId = NO;
  resultPbReqMsgBook.bookSubcataId = @"";
  return self;
}
- (BOOL) hasBookSubcataInfo {
  return resultPbReqMsgBook.hasBookSubcataInfo;
}
- (NSString*) bookSubcataInfo {
  return resultPbReqMsgBook.bookSubcataInfo;
}
- (PbReqMsgBookBuilder*) setBookSubcataInfo:(NSString*) value {
  resultPbReqMsgBook.hasBookSubcataInfo = YES;
  resultPbReqMsgBook.bookSubcataInfo = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookSubcataInfo {
  resultPbReqMsgBook.hasBookSubcataInfo = NO;
  resultPbReqMsgBook.bookSubcataInfo = @"";
  return self;
}
- (BOOL) hasBookInfoId {
  return resultPbReqMsgBook.hasBookInfoId;
}
- (NSString*) bookInfoId {
  return resultPbReqMsgBook.bookInfoId;
}
- (PbReqMsgBookBuilder*) setBookInfoId:(NSString*) value {
  resultPbReqMsgBook.hasBookInfoId = YES;
  resultPbReqMsgBook.bookInfoId = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookInfoId {
  resultPbReqMsgBook.hasBookInfoId = NO;
  resultPbReqMsgBook.bookInfoId = @"";
  return self;
}
- (BOOL) hasBookInfo {
  return resultPbReqMsgBook.hasBookInfo;
}
- (NSString*) bookInfo {
  return resultPbReqMsgBook.bookInfo;
}
- (PbReqMsgBookBuilder*) setBookInfo:(NSString*) value {
  resultPbReqMsgBook.hasBookInfo = YES;
  resultPbReqMsgBook.bookInfo = value;
  return self;
}
- (PbReqMsgBookBuilder*) clearBookInfo {
  resultPbReqMsgBook.hasBookInfo = NO;
  resultPbReqMsgBook.bookInfo = @"";
  return self;
}
@end

@interface PbReqMsgHotspot ()
@property (strong) NSString* hotspotId;
@property (strong) NSString* hotspotTitle;
@property (strong) NSString* hotspotFirstImage;
@property (strong) NSString* hotspotSourceSite;
@end

@implementation PbReqMsgHotspot

- (BOOL) hasHotspotId {
  return !!hasHotspotId_;
}
- (void) setHasHotspotId:(BOOL) _value_ {
  hasHotspotId_ = !!_value_;
}
@synthesize hotspotId;
- (BOOL) hasHotspotTitle {
  return !!hasHotspotTitle_;
}
- (void) setHasHotspotTitle:(BOOL) _value_ {
  hasHotspotTitle_ = !!_value_;
}
@synthesize hotspotTitle;
- (BOOL) hasHotspotFirstImage {
  return !!hasHotspotFirstImage_;
}
- (void) setHasHotspotFirstImage:(BOOL) _value_ {
  hasHotspotFirstImage_ = !!_value_;
}
@synthesize hotspotFirstImage;
- (BOOL) hasHotspotSourceSite {
  return !!hasHotspotSourceSite_;
}
- (void) setHasHotspotSourceSite:(BOOL) _value_ {
  hasHotspotSourceSite_ = !!_value_;
}
@synthesize hotspotSourceSite;
- (instancetype) init {
  if ((self = [super init])) {
    self.hotspotId = @"";
    self.hotspotTitle = @"";
    self.hotspotFirstImage = @"";
    self.hotspotSourceSite = @"";
  }
  return self;
}
static PbReqMsgHotspot* defaultPbReqMsgHotspotInstance = nil;
+ (void) initialize {
  if (self == [PbReqMsgHotspot class]) {
    defaultPbReqMsgHotspotInstance = [[PbReqMsgHotspot alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqMsgHotspotInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqMsgHotspotInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHotspotId) {
    [output writeString:1 value:self.hotspotId];
  }
  if (self.hasHotspotTitle) {
    [output writeString:2 value:self.hotspotTitle];
  }
  if (self.hasHotspotFirstImage) {
    [output writeString:3 value:self.hotspotFirstImage];
  }
  if (self.hasHotspotSourceSite) {
    [output writeString:4 value:self.hotspotSourceSite];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHotspotId) {
    size_ += computeStringSize(1, self.hotspotId);
  }
  if (self.hasHotspotTitle) {
    size_ += computeStringSize(2, self.hotspotTitle);
  }
  if (self.hasHotspotFirstImage) {
    size_ += computeStringSize(3, self.hotspotFirstImage);
  }
  if (self.hasHotspotSourceSite) {
    size_ += computeStringSize(4, self.hotspotSourceSite);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqMsgHotspot*) parseFromData:(NSData*) data {
  return (PbReqMsgHotspot*)[[[PbReqMsgHotspot builder] mergeFromData:data] build];
}
+ (PbReqMsgHotspot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMsgHotspot*)[[[PbReqMsgHotspot builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqMsgHotspot*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqMsgHotspot*)[[[PbReqMsgHotspot builder] mergeFromInputStream:input] build];
}
+ (PbReqMsgHotspot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMsgHotspot*)[[[PbReqMsgHotspot builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqMsgHotspot*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqMsgHotspot*)[[[PbReqMsgHotspot builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqMsgHotspot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMsgHotspot*)[[[PbReqMsgHotspot builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqMsgHotspotBuilder*) builder {
  return [[PbReqMsgHotspotBuilder alloc] init];
}
+ (PbReqMsgHotspotBuilder*) builderWithPrototype:(PbReqMsgHotspot*) prototype {
  return [[PbReqMsgHotspot builder] mergeFrom:prototype];
}
- (PbReqMsgHotspotBuilder*) builder {
  return [PbReqMsgHotspot builder];
}
- (PbReqMsgHotspotBuilder*) toBuilder {
  return [PbReqMsgHotspot builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHotspotId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotId", self.hotspotId];
  }
  if (self.hasHotspotTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotTitle", self.hotspotTitle];
  }
  if (self.hasHotspotFirstImage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotFirstImage", self.hotspotFirstImage];
  }
  if (self.hasHotspotSourceSite) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotSourceSite", self.hotspotSourceSite];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHotspotId) {
    [dictionary setObject: self.hotspotId forKey: @"hotspotId"];
  }
  if (self.hasHotspotTitle) {
    [dictionary setObject: self.hotspotTitle forKey: @"hotspotTitle"];
  }
  if (self.hasHotspotFirstImage) {
    [dictionary setObject: self.hotspotFirstImage forKey: @"hotspotFirstImage"];
  }
  if (self.hasHotspotSourceSite) {
    [dictionary setObject: self.hotspotSourceSite forKey: @"hotspotSourceSite"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqMsgHotspot class]]) {
    return NO;
  }
  PbReqMsgHotspot *otherMessage = other;
  return
      self.hasHotspotId == otherMessage.hasHotspotId &&
      (!self.hasHotspotId || [self.hotspotId isEqual:otherMessage.hotspotId]) &&
      self.hasHotspotTitle == otherMessage.hasHotspotTitle &&
      (!self.hasHotspotTitle || [self.hotspotTitle isEqual:otherMessage.hotspotTitle]) &&
      self.hasHotspotFirstImage == otherMessage.hasHotspotFirstImage &&
      (!self.hasHotspotFirstImage || [self.hotspotFirstImage isEqual:otherMessage.hotspotFirstImage]) &&
      self.hasHotspotSourceSite == otherMessage.hasHotspotSourceSite &&
      (!self.hasHotspotSourceSite || [self.hotspotSourceSite isEqual:otherMessage.hotspotSourceSite]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHotspotId) {
    hashCode = hashCode * 31 + [self.hotspotId hash];
  }
  if (self.hasHotspotTitle) {
    hashCode = hashCode * 31 + [self.hotspotTitle hash];
  }
  if (self.hasHotspotFirstImage) {
    hashCode = hashCode * 31 + [self.hotspotFirstImage hash];
  }
  if (self.hasHotspotSourceSite) {
    hashCode = hashCode * 31 + [self.hotspotSourceSite hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqMsgHotspotBuilder()
@property (strong) PbReqMsgHotspot* resultPbReqMsgHotspot;
@end

@implementation PbReqMsgHotspotBuilder
@synthesize resultPbReqMsgHotspot;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqMsgHotspot = [[PbReqMsgHotspot alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqMsgHotspot;
}
- (PbReqMsgHotspotBuilder*) clear {
  self.resultPbReqMsgHotspot = [[PbReqMsgHotspot alloc] init];
  return self;
}
- (PbReqMsgHotspotBuilder*) clone {
  return [PbReqMsgHotspot builderWithPrototype:resultPbReqMsgHotspot];
}
- (PbReqMsgHotspot*) defaultInstance {
  return [PbReqMsgHotspot defaultInstance];
}
- (PbReqMsgHotspot*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqMsgHotspot*) buildPartial {
  PbReqMsgHotspot* returnMe = resultPbReqMsgHotspot;
  self.resultPbReqMsgHotspot = nil;
  return returnMe;
}
- (PbReqMsgHotspotBuilder*) mergeFrom:(PbReqMsgHotspot*) other {
  if (other == [PbReqMsgHotspot defaultInstance]) {
    return self;
  }
  if (other.hasHotspotId) {
    [self setHotspotId:other.hotspotId];
  }
  if (other.hasHotspotTitle) {
    [self setHotspotTitle:other.hotspotTitle];
  }
  if (other.hasHotspotFirstImage) {
    [self setHotspotFirstImage:other.hotspotFirstImage];
  }
  if (other.hasHotspotSourceSite) {
    [self setHotspotSourceSite:other.hotspotSourceSite];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqMsgHotspotBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqMsgHotspotBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setHotspotId:[input readString]];
        break;
      }
      case 18: {
        [self setHotspotTitle:[input readString]];
        break;
      }
      case 26: {
        [self setHotspotFirstImage:[input readString]];
        break;
      }
      case 34: {
        [self setHotspotSourceSite:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasHotspotId {
  return resultPbReqMsgHotspot.hasHotspotId;
}
- (NSString*) hotspotId {
  return resultPbReqMsgHotspot.hotspotId;
}
- (PbReqMsgHotspotBuilder*) setHotspotId:(NSString*) value {
  resultPbReqMsgHotspot.hasHotspotId = YES;
  resultPbReqMsgHotspot.hotspotId = value;
  return self;
}
- (PbReqMsgHotspotBuilder*) clearHotspotId {
  resultPbReqMsgHotspot.hasHotspotId = NO;
  resultPbReqMsgHotspot.hotspotId = @"";
  return self;
}
- (BOOL) hasHotspotTitle {
  return resultPbReqMsgHotspot.hasHotspotTitle;
}
- (NSString*) hotspotTitle {
  return resultPbReqMsgHotspot.hotspotTitle;
}
- (PbReqMsgHotspotBuilder*) setHotspotTitle:(NSString*) value {
  resultPbReqMsgHotspot.hasHotspotTitle = YES;
  resultPbReqMsgHotspot.hotspotTitle = value;
  return self;
}
- (PbReqMsgHotspotBuilder*) clearHotspotTitle {
  resultPbReqMsgHotspot.hasHotspotTitle = NO;
  resultPbReqMsgHotspot.hotspotTitle = @"";
  return self;
}
- (BOOL) hasHotspotFirstImage {
  return resultPbReqMsgHotspot.hasHotspotFirstImage;
}
- (NSString*) hotspotFirstImage {
  return resultPbReqMsgHotspot.hotspotFirstImage;
}
- (PbReqMsgHotspotBuilder*) setHotspotFirstImage:(NSString*) value {
  resultPbReqMsgHotspot.hasHotspotFirstImage = YES;
  resultPbReqMsgHotspot.hotspotFirstImage = value;
  return self;
}
- (PbReqMsgHotspotBuilder*) clearHotspotFirstImage {
  resultPbReqMsgHotspot.hasHotspotFirstImage = NO;
  resultPbReqMsgHotspot.hotspotFirstImage = @"";
  return self;
}
- (BOOL) hasHotspotSourceSite {
  return resultPbReqMsgHotspot.hasHotspotSourceSite;
}
- (NSString*) hotspotSourceSite {
  return resultPbReqMsgHotspot.hotspotSourceSite;
}
- (PbReqMsgHotspotBuilder*) setHotspotSourceSite:(NSString*) value {
  resultPbReqMsgHotspot.hasHotspotSourceSite = YES;
  resultPbReqMsgHotspot.hotspotSourceSite = value;
  return self;
}
- (PbReqMsgHotspotBuilder*) clearHotspotSourceSite {
  resultPbReqMsgHotspot.hasHotspotSourceSite = NO;
  resultPbReqMsgHotspot.hotspotSourceSite = @"";
  return self;
}
@end

@interface PbReqUser ()
@property UInt32 uin;
@property (strong) NSString* name;
@property (strong) NSString* phone;
@property (strong) NSString* jobType;
@property (strong) NSString* joinContent;
@property (strong) NSString* depId;
@end

@implementation PbReqUser

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasJoinContent {
  return !!hasJoinContent_;
}
- (void) setHasJoinContent:(BOOL) _value_ {
  hasJoinContent_ = !!_value_;
}
@synthesize joinContent;
- (BOOL) hasDepId {
  return !!hasDepId_;
}
- (void) setHasDepId:(BOOL) _value_ {
  hasDepId_ = !!_value_;
}
@synthesize depId;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.name = @"";
    self.phone = @"";
    self.jobType = @"";
    self.joinContent = @"";
    self.depId = @"";
  }
  return self;
}
static PbReqUser* defaultPbReqUserInstance = nil;
+ (void) initialize {
  if (self == [PbReqUser class]) {
    defaultPbReqUserInstance = [[PbReqUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasPhone) {
    [output writeString:3 value:self.phone];
  }
  if (self.hasJobType) {
    [output writeString:4 value:self.jobType];
  }
  if (self.hasJoinContent) {
    [output writeString:5 value:self.joinContent];
  }
  if (self.hasDepId) {
    [output writeString:6 value:self.depId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(3, self.phone);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(4, self.jobType);
  }
  if (self.hasJoinContent) {
    size_ += computeStringSize(5, self.joinContent);
  }
  if (self.hasDepId) {
    size_ += computeStringSize(6, self.depId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqUser*) parseFromData:(NSData*) data {
  return (PbReqUser*)[[[PbReqUser builder] mergeFromData:data] build];
}
+ (PbReqUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqUser*)[[[PbReqUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqUser*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqUser*)[[[PbReqUser builder] mergeFromInputStream:input] build];
}
+ (PbReqUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqUser*)[[[PbReqUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqUser*)[[[PbReqUser builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqUser*)[[[PbReqUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqUserBuilder*) builder {
  return [[PbReqUserBuilder alloc] init];
}
+ (PbReqUserBuilder*) builderWithPrototype:(PbReqUser*) prototype {
  return [[PbReqUser builder] mergeFrom:prototype];
}
- (PbReqUserBuilder*) builder {
  return [PbReqUser builder];
}
- (PbReqUserBuilder*) toBuilder {
  return [PbReqUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasJoinContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"joinContent", self.joinContent];
  }
  if (self.hasDepId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"depId", self.depId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasPhone) {
    [dictionary setObject: self.phone forKey: @"phone"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasJoinContent) {
    [dictionary setObject: self.joinContent forKey: @"joinContent"];
  }
  if (self.hasDepId) {
    [dictionary setObject: self.depId forKey: @"depId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqUser class]]) {
    return NO;
  }
  PbReqUser *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasJoinContent == otherMessage.hasJoinContent &&
      (!self.hasJoinContent || [self.joinContent isEqual:otherMessage.joinContent]) &&
      self.hasDepId == otherMessage.hasDepId &&
      (!self.hasDepId || [self.depId isEqual:otherMessage.depId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasJoinContent) {
    hashCode = hashCode * 31 + [self.joinContent hash];
  }
  if (self.hasDepId) {
    hashCode = hashCode * 31 + [self.depId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqUserBuilder()
@property (strong) PbReqUser* resultPbReqUser;
@end

@implementation PbReqUserBuilder
@synthesize resultPbReqUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqUser = [[PbReqUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqUser;
}
- (PbReqUserBuilder*) clear {
  self.resultPbReqUser = [[PbReqUser alloc] init];
  return self;
}
- (PbReqUserBuilder*) clone {
  return [PbReqUser builderWithPrototype:resultPbReqUser];
}
- (PbReqUser*) defaultInstance {
  return [PbReqUser defaultInstance];
}
- (PbReqUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqUser*) buildPartial {
  PbReqUser* returnMe = resultPbReqUser;
  self.resultPbReqUser = nil;
  return returnMe;
}
- (PbReqUserBuilder*) mergeFrom:(PbReqUser*) other {
  if (other == [PbReqUser defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasJoinContent) {
    [self setJoinContent:other.joinContent];
  }
  if (other.hasDepId) {
    [self setDepId:other.depId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setPhone:[input readString]];
        break;
      }
      case 34: {
        [self setJobType:[input readString]];
        break;
      }
      case 42: {
        [self setJoinContent:[input readString]];
        break;
      }
      case 50: {
        [self setDepId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbReqUser.hasUin;
}
- (UInt32) uin {
  return resultPbReqUser.uin;
}
- (PbReqUserBuilder*) setUin:(UInt32) value {
  resultPbReqUser.hasUin = YES;
  resultPbReqUser.uin = value;
  return self;
}
- (PbReqUserBuilder*) clearUin {
  resultPbReqUser.hasUin = NO;
  resultPbReqUser.uin = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbReqUser.hasName;
}
- (NSString*) name {
  return resultPbReqUser.name;
}
- (PbReqUserBuilder*) setName:(NSString*) value {
  resultPbReqUser.hasName = YES;
  resultPbReqUser.name = value;
  return self;
}
- (PbReqUserBuilder*) clearName {
  resultPbReqUser.hasName = NO;
  resultPbReqUser.name = @"";
  return self;
}
- (BOOL) hasPhone {
  return resultPbReqUser.hasPhone;
}
- (NSString*) phone {
  return resultPbReqUser.phone;
}
- (PbReqUserBuilder*) setPhone:(NSString*) value {
  resultPbReqUser.hasPhone = YES;
  resultPbReqUser.phone = value;
  return self;
}
- (PbReqUserBuilder*) clearPhone {
  resultPbReqUser.hasPhone = NO;
  resultPbReqUser.phone = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbReqUser.hasJobType;
}
- (NSString*) jobType {
  return resultPbReqUser.jobType;
}
- (PbReqUserBuilder*) setJobType:(NSString*) value {
  resultPbReqUser.hasJobType = YES;
  resultPbReqUser.jobType = value;
  return self;
}
- (PbReqUserBuilder*) clearJobType {
  resultPbReqUser.hasJobType = NO;
  resultPbReqUser.jobType = @"";
  return self;
}
- (BOOL) hasJoinContent {
  return resultPbReqUser.hasJoinContent;
}
- (NSString*) joinContent {
  return resultPbReqUser.joinContent;
}
- (PbReqUserBuilder*) setJoinContent:(NSString*) value {
  resultPbReqUser.hasJoinContent = YES;
  resultPbReqUser.joinContent = value;
  return self;
}
- (PbReqUserBuilder*) clearJoinContent {
  resultPbReqUser.hasJoinContent = NO;
  resultPbReqUser.joinContent = @"";
  return self;
}
- (BOOL) hasDepId {
  return resultPbReqUser.hasDepId;
}
- (NSString*) depId {
  return resultPbReqUser.depId;
}
- (PbReqUserBuilder*) setDepId:(NSString*) value {
  resultPbReqUser.hasDepId = YES;
  resultPbReqUser.depId = value;
  return self;
}
- (PbReqUserBuilder*) clearDepId {
  resultPbReqUser.hasDepId = NO;
  resultPbReqUser.depId = @"";
  return self;
}
@end

@interface PbReqProject ()
@property (strong) NSString* prjName;
@property SInt32 prjType;
@property (strong) NSString* prjImage;
@property (strong) NSString* province;
@property (strong) NSString* city;
@property (strong) NSString* prjAddress;
@property SInt32 floorArea;
@property SInt32 prjBegin;
@property SInt32 prjEnd;
@property (strong) NSString* jianzhuDanwei;
@property (strong) NSString* shigongDanwei;
@property (strong) NSString* jianliDanwei;
@property (strong) NSString* fenbaoDanwei;
@property Float64 lat;
@property Float64 lon;
@property Float32 floatFloorArea;
@end

@implementation PbReqProject

- (BOOL) hasPrjName {
  return !!hasPrjName_;
}
- (void) setHasPrjName:(BOOL) _value_ {
  hasPrjName_ = !!_value_;
}
@synthesize prjName;
- (BOOL) hasPrjType {
  return !!hasPrjType_;
}
- (void) setHasPrjType:(BOOL) _value_ {
  hasPrjType_ = !!_value_;
}
@synthesize prjType;
- (BOOL) hasPrjImage {
  return !!hasPrjImage_;
}
- (void) setHasPrjImage:(BOOL) _value_ {
  hasPrjImage_ = !!_value_;
}
@synthesize prjImage;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) _value_ {
  hasProvince_ = !!_value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (BOOL) hasPrjAddress {
  return !!hasPrjAddress_;
}
- (void) setHasPrjAddress:(BOOL) _value_ {
  hasPrjAddress_ = !!_value_;
}
@synthesize prjAddress;
- (BOOL) hasFloorArea {
  return !!hasFloorArea_;
}
- (void) setHasFloorArea:(BOOL) _value_ {
  hasFloorArea_ = !!_value_;
}
@synthesize floorArea;
- (BOOL) hasPrjBegin {
  return !!hasPrjBegin_;
}
- (void) setHasPrjBegin:(BOOL) _value_ {
  hasPrjBegin_ = !!_value_;
}
@synthesize prjBegin;
- (BOOL) hasPrjEnd {
  return !!hasPrjEnd_;
}
- (void) setHasPrjEnd:(BOOL) _value_ {
  hasPrjEnd_ = !!_value_;
}
@synthesize prjEnd;
- (BOOL) hasJianzhuDanwei {
  return !!hasJianzhuDanwei_;
}
- (void) setHasJianzhuDanwei:(BOOL) _value_ {
  hasJianzhuDanwei_ = !!_value_;
}
@synthesize jianzhuDanwei;
- (BOOL) hasShigongDanwei {
  return !!hasShigongDanwei_;
}
- (void) setHasShigongDanwei:(BOOL) _value_ {
  hasShigongDanwei_ = !!_value_;
}
@synthesize shigongDanwei;
- (BOOL) hasJianliDanwei {
  return !!hasJianliDanwei_;
}
- (void) setHasJianliDanwei:(BOOL) _value_ {
  hasJianliDanwei_ = !!_value_;
}
@synthesize jianliDanwei;
- (BOOL) hasFenbaoDanwei {
  return !!hasFenbaoDanwei_;
}
- (void) setHasFenbaoDanwei:(BOOL) _value_ {
  hasFenbaoDanwei_ = !!_value_;
}
@synthesize fenbaoDanwei;
- (BOOL) hasLat {
  return !!hasLat_;
}
- (void) setHasLat:(BOOL) _value_ {
  hasLat_ = !!_value_;
}
@synthesize lat;
- (BOOL) hasLon {
  return !!hasLon_;
}
- (void) setHasLon:(BOOL) _value_ {
  hasLon_ = !!_value_;
}
@synthesize lon;
- (BOOL) hasFloatFloorArea {
  return !!hasFloatFloorArea_;
}
- (void) setHasFloatFloorArea:(BOOL) _value_ {
  hasFloatFloorArea_ = !!_value_;
}
@synthesize floatFloorArea;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjName = @"";
    self.prjType = 0;
    self.prjImage = @"";
    self.province = @"";
    self.city = @"";
    self.prjAddress = @"";
    self.floorArea = 0;
    self.prjBegin = 0;
    self.prjEnd = 0;
    self.jianzhuDanwei = @"";
    self.shigongDanwei = @"";
    self.jianliDanwei = @"";
    self.fenbaoDanwei = @"";
    self.lat = 0;
    self.lon = 0;
    self.floatFloorArea = 0;
  }
  return self;
}
static PbReqProject* defaultPbReqProjectInstance = nil;
+ (void) initialize {
  if (self == [PbReqProject class]) {
    defaultPbReqProjectInstance = [[PbReqProject alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqProjectInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqProjectInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjName) {
    [output writeString:1 value:self.prjName];
  }
  if (self.hasPrjType) {
    [output writeInt32:2 value:self.prjType];
  }
  if (self.hasPrjImage) {
    [output writeString:3 value:self.prjImage];
  }
  if (self.hasProvince) {
    [output writeString:4 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:5 value:self.city];
  }
  if (self.hasPrjAddress) {
    [output writeString:6 value:self.prjAddress];
  }
  if (self.hasFloorArea) {
    [output writeInt32:7 value:self.floorArea];
  }
  if (self.hasPrjBegin) {
    [output writeInt32:8 value:self.prjBegin];
  }
  if (self.hasPrjEnd) {
    [output writeInt32:9 value:self.prjEnd];
  }
  if (self.hasJianzhuDanwei) {
    [output writeString:10 value:self.jianzhuDanwei];
  }
  if (self.hasShigongDanwei) {
    [output writeString:11 value:self.shigongDanwei];
  }
  if (self.hasJianliDanwei) {
    [output writeString:12 value:self.jianliDanwei];
  }
  if (self.hasFenbaoDanwei) {
    [output writeString:13 value:self.fenbaoDanwei];
  }
  if (self.hasLat) {
    [output writeDouble:14 value:self.lat];
  }
  if (self.hasLon) {
    [output writeDouble:15 value:self.lon];
  }
  if (self.hasFloatFloorArea) {
    [output writeFloat:16 value:self.floatFloorArea];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjName) {
    size_ += computeStringSize(1, self.prjName);
  }
  if (self.hasPrjType) {
    size_ += computeInt32Size(2, self.prjType);
  }
  if (self.hasPrjImage) {
    size_ += computeStringSize(3, self.prjImage);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(4, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(5, self.city);
  }
  if (self.hasPrjAddress) {
    size_ += computeStringSize(6, self.prjAddress);
  }
  if (self.hasFloorArea) {
    size_ += computeInt32Size(7, self.floorArea);
  }
  if (self.hasPrjBegin) {
    size_ += computeInt32Size(8, self.prjBegin);
  }
  if (self.hasPrjEnd) {
    size_ += computeInt32Size(9, self.prjEnd);
  }
  if (self.hasJianzhuDanwei) {
    size_ += computeStringSize(10, self.jianzhuDanwei);
  }
  if (self.hasShigongDanwei) {
    size_ += computeStringSize(11, self.shigongDanwei);
  }
  if (self.hasJianliDanwei) {
    size_ += computeStringSize(12, self.jianliDanwei);
  }
  if (self.hasFenbaoDanwei) {
    size_ += computeStringSize(13, self.fenbaoDanwei);
  }
  if (self.hasLat) {
    size_ += computeDoubleSize(14, self.lat);
  }
  if (self.hasLon) {
    size_ += computeDoubleSize(15, self.lon);
  }
  if (self.hasFloatFloorArea) {
    size_ += computeFloatSize(16, self.floatFloorArea);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqProject*) parseFromData:(NSData*) data {
  return (PbReqProject*)[[[PbReqProject builder] mergeFromData:data] build];
}
+ (PbReqProject*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqProject*)[[[PbReqProject builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqProject*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqProject*)[[[PbReqProject builder] mergeFromInputStream:input] build];
}
+ (PbReqProject*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqProject*)[[[PbReqProject builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqProject*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqProject*)[[[PbReqProject builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqProject*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqProject*)[[[PbReqProject builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqProjectBuilder*) builder {
  return [[PbReqProjectBuilder alloc] init];
}
+ (PbReqProjectBuilder*) builderWithPrototype:(PbReqProject*) prototype {
  return [[PbReqProject builder] mergeFrom:prototype];
}
- (PbReqProjectBuilder*) builder {
  return [PbReqProject builder];
}
- (PbReqProjectBuilder*) toBuilder {
  return [PbReqProject builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjName", self.prjName];
  }
  if (self.hasPrjType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjType", [NSNumber numberWithInteger:self.prjType]];
  }
  if (self.hasPrjImage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjImage", self.prjImage];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  if (self.hasPrjAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjAddress", self.prjAddress];
  }
  if (self.hasFloorArea) {
    [output appendFormat:@"%@%@: %@\n", indent, @"floorArea", [NSNumber numberWithInteger:self.floorArea]];
  }
  if (self.hasPrjBegin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjBegin", [NSNumber numberWithInteger:self.prjBegin]];
  }
  if (self.hasPrjEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjEnd", [NSNumber numberWithInteger:self.prjEnd]];
  }
  if (self.hasJianzhuDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jianzhuDanwei", self.jianzhuDanwei];
  }
  if (self.hasShigongDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shigongDanwei", self.shigongDanwei];
  }
  if (self.hasJianliDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jianliDanwei", self.jianliDanwei];
  }
  if (self.hasFenbaoDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fenbaoDanwei", self.fenbaoDanwei];
  }
  if (self.hasLat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lat", [NSNumber numberWithDouble:self.lat]];
  }
  if (self.hasLon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lon", [NSNumber numberWithDouble:self.lon]];
  }
  if (self.hasFloatFloorArea) {
    [output appendFormat:@"%@%@: %@\n", indent, @"floatFloorArea", [NSNumber numberWithFloat:self.floatFloorArea]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjName) {
    [dictionary setObject: self.prjName forKey: @"prjName"];
  }
  if (self.hasPrjType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjType] forKey: @"prjType"];
  }
  if (self.hasPrjImage) {
    [dictionary setObject: self.prjImage forKey: @"prjImage"];
  }
  if (self.hasProvince) {
    [dictionary setObject: self.province forKey: @"province"];
  }
  if (self.hasCity) {
    [dictionary setObject: self.city forKey: @"city"];
  }
  if (self.hasPrjAddress) {
    [dictionary setObject: self.prjAddress forKey: @"prjAddress"];
  }
  if (self.hasFloorArea) {
    [dictionary setObject: [NSNumber numberWithInteger:self.floorArea] forKey: @"floorArea"];
  }
  if (self.hasPrjBegin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjBegin] forKey: @"prjBegin"];
  }
  if (self.hasPrjEnd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjEnd] forKey: @"prjEnd"];
  }
  if (self.hasJianzhuDanwei) {
    [dictionary setObject: self.jianzhuDanwei forKey: @"jianzhuDanwei"];
  }
  if (self.hasShigongDanwei) {
    [dictionary setObject: self.shigongDanwei forKey: @"shigongDanwei"];
  }
  if (self.hasJianliDanwei) {
    [dictionary setObject: self.jianliDanwei forKey: @"jianliDanwei"];
  }
  if (self.hasFenbaoDanwei) {
    [dictionary setObject: self.fenbaoDanwei forKey: @"fenbaoDanwei"];
  }
  if (self.hasLat) {
    [dictionary setObject: [NSNumber numberWithDouble:self.lat] forKey: @"lat"];
  }
  if (self.hasLon) {
    [dictionary setObject: [NSNumber numberWithDouble:self.lon] forKey: @"lon"];
  }
  if (self.hasFloatFloorArea) {
    [dictionary setObject: [NSNumber numberWithFloat:self.floatFloorArea] forKey: @"floatFloorArea"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqProject class]]) {
    return NO;
  }
  PbReqProject *otherMessage = other;
  return
      self.hasPrjName == otherMessage.hasPrjName &&
      (!self.hasPrjName || [self.prjName isEqual:otherMessage.prjName]) &&
      self.hasPrjType == otherMessage.hasPrjType &&
      (!self.hasPrjType || self.prjType == otherMessage.prjType) &&
      self.hasPrjImage == otherMessage.hasPrjImage &&
      (!self.hasPrjImage || [self.prjImage isEqual:otherMessage.prjImage]) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      self.hasPrjAddress == otherMessage.hasPrjAddress &&
      (!self.hasPrjAddress || [self.prjAddress isEqual:otherMessage.prjAddress]) &&
      self.hasFloorArea == otherMessage.hasFloorArea &&
      (!self.hasFloorArea || self.floorArea == otherMessage.floorArea) &&
      self.hasPrjBegin == otherMessage.hasPrjBegin &&
      (!self.hasPrjBegin || self.prjBegin == otherMessage.prjBegin) &&
      self.hasPrjEnd == otherMessage.hasPrjEnd &&
      (!self.hasPrjEnd || self.prjEnd == otherMessage.prjEnd) &&
      self.hasJianzhuDanwei == otherMessage.hasJianzhuDanwei &&
      (!self.hasJianzhuDanwei || [self.jianzhuDanwei isEqual:otherMessage.jianzhuDanwei]) &&
      self.hasShigongDanwei == otherMessage.hasShigongDanwei &&
      (!self.hasShigongDanwei || [self.shigongDanwei isEqual:otherMessage.shigongDanwei]) &&
      self.hasJianliDanwei == otherMessage.hasJianliDanwei &&
      (!self.hasJianliDanwei || [self.jianliDanwei isEqual:otherMessage.jianliDanwei]) &&
      self.hasFenbaoDanwei == otherMessage.hasFenbaoDanwei &&
      (!self.hasFenbaoDanwei || [self.fenbaoDanwei isEqual:otherMessage.fenbaoDanwei]) &&
      self.hasLat == otherMessage.hasLat &&
      (!self.hasLat || self.lat == otherMessage.lat) &&
      self.hasLon == otherMessage.hasLon &&
      (!self.hasLon || self.lon == otherMessage.lon) &&
      self.hasFloatFloorArea == otherMessage.hasFloatFloorArea &&
      (!self.hasFloatFloorArea || self.floatFloorArea == otherMessage.floatFloorArea) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjName) {
    hashCode = hashCode * 31 + [self.prjName hash];
  }
  if (self.hasPrjType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjType] hash];
  }
  if (self.hasPrjImage) {
    hashCode = hashCode * 31 + [self.prjImage hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  if (self.hasPrjAddress) {
    hashCode = hashCode * 31 + [self.prjAddress hash];
  }
  if (self.hasFloorArea) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.floorArea] hash];
  }
  if (self.hasPrjBegin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjBegin] hash];
  }
  if (self.hasPrjEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjEnd] hash];
  }
  if (self.hasJianzhuDanwei) {
    hashCode = hashCode * 31 + [self.jianzhuDanwei hash];
  }
  if (self.hasShigongDanwei) {
    hashCode = hashCode * 31 + [self.shigongDanwei hash];
  }
  if (self.hasJianliDanwei) {
    hashCode = hashCode * 31 + [self.jianliDanwei hash];
  }
  if (self.hasFenbaoDanwei) {
    hashCode = hashCode * 31 + [self.fenbaoDanwei hash];
  }
  if (self.hasLat) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.lat] hash];
  }
  if (self.hasLon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.lon] hash];
  }
  if (self.hasFloatFloorArea) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.floatFloorArea] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqProjectBuilder()
@property (strong) PbReqProject* resultPbReqProject;
@end

@implementation PbReqProjectBuilder
@synthesize resultPbReqProject;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqProject = [[PbReqProject alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqProject;
}
- (PbReqProjectBuilder*) clear {
  self.resultPbReqProject = [[PbReqProject alloc] init];
  return self;
}
- (PbReqProjectBuilder*) clone {
  return [PbReqProject builderWithPrototype:resultPbReqProject];
}
- (PbReqProject*) defaultInstance {
  return [PbReqProject defaultInstance];
}
- (PbReqProject*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqProject*) buildPartial {
  PbReqProject* returnMe = resultPbReqProject;
  self.resultPbReqProject = nil;
  return returnMe;
}
- (PbReqProjectBuilder*) mergeFrom:(PbReqProject*) other {
  if (other == [PbReqProject defaultInstance]) {
    return self;
  }
  if (other.hasPrjName) {
    [self setPrjName:other.prjName];
  }
  if (other.hasPrjType) {
    [self setPrjType:other.prjType];
  }
  if (other.hasPrjImage) {
    [self setPrjImage:other.prjImage];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasPrjAddress) {
    [self setPrjAddress:other.prjAddress];
  }
  if (other.hasFloorArea) {
    [self setFloorArea:other.floorArea];
  }
  if (other.hasPrjBegin) {
    [self setPrjBegin:other.prjBegin];
  }
  if (other.hasPrjEnd) {
    [self setPrjEnd:other.prjEnd];
  }
  if (other.hasJianzhuDanwei) {
    [self setJianzhuDanwei:other.jianzhuDanwei];
  }
  if (other.hasShigongDanwei) {
    [self setShigongDanwei:other.shigongDanwei];
  }
  if (other.hasJianliDanwei) {
    [self setJianliDanwei:other.jianliDanwei];
  }
  if (other.hasFenbaoDanwei) {
    [self setFenbaoDanwei:other.fenbaoDanwei];
  }
  if (other.hasLat) {
    [self setLat:other.lat];
  }
  if (other.hasLon) {
    [self setLon:other.lon];
  }
  if (other.hasFloatFloorArea) {
    [self setFloatFloorArea:other.floatFloorArea];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqProjectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqProjectBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjName:[input readString]];
        break;
      }
      case 16: {
        [self setPrjType:[input readInt32]];
        break;
      }
      case 26: {
        [self setPrjImage:[input readString]];
        break;
      }
      case 34: {
        [self setProvince:[input readString]];
        break;
      }
      case 42: {
        [self setCity:[input readString]];
        break;
      }
      case 50: {
        [self setPrjAddress:[input readString]];
        break;
      }
      case 56: {
        [self setFloorArea:[input readInt32]];
        break;
      }
      case 64: {
        [self setPrjBegin:[input readInt32]];
        break;
      }
      case 72: {
        [self setPrjEnd:[input readInt32]];
        break;
      }
      case 82: {
        [self setJianzhuDanwei:[input readString]];
        break;
      }
      case 90: {
        [self setShigongDanwei:[input readString]];
        break;
      }
      case 98: {
        [self setJianliDanwei:[input readString]];
        break;
      }
      case 106: {
        [self setFenbaoDanwei:[input readString]];
        break;
      }
      case 113: {
        [self setLat:[input readDouble]];
        break;
      }
      case 121: {
        [self setLon:[input readDouble]];
        break;
      }
      case 133: {
        [self setFloatFloorArea:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjName {
  return resultPbReqProject.hasPrjName;
}
- (NSString*) prjName {
  return resultPbReqProject.prjName;
}
- (PbReqProjectBuilder*) setPrjName:(NSString*) value {
  resultPbReqProject.hasPrjName = YES;
  resultPbReqProject.prjName = value;
  return self;
}
- (PbReqProjectBuilder*) clearPrjName {
  resultPbReqProject.hasPrjName = NO;
  resultPbReqProject.prjName = @"";
  return self;
}
- (BOOL) hasPrjType {
  return resultPbReqProject.hasPrjType;
}
- (SInt32) prjType {
  return resultPbReqProject.prjType;
}
- (PbReqProjectBuilder*) setPrjType:(SInt32) value {
  resultPbReqProject.hasPrjType = YES;
  resultPbReqProject.prjType = value;
  return self;
}
- (PbReqProjectBuilder*) clearPrjType {
  resultPbReqProject.hasPrjType = NO;
  resultPbReqProject.prjType = 0;
  return self;
}
- (BOOL) hasPrjImage {
  return resultPbReqProject.hasPrjImage;
}
- (NSString*) prjImage {
  return resultPbReqProject.prjImage;
}
- (PbReqProjectBuilder*) setPrjImage:(NSString*) value {
  resultPbReqProject.hasPrjImage = YES;
  resultPbReqProject.prjImage = value;
  return self;
}
- (PbReqProjectBuilder*) clearPrjImage {
  resultPbReqProject.hasPrjImage = NO;
  resultPbReqProject.prjImage = @"";
  return self;
}
- (BOOL) hasProvince {
  return resultPbReqProject.hasProvince;
}
- (NSString*) province {
  return resultPbReqProject.province;
}
- (PbReqProjectBuilder*) setProvince:(NSString*) value {
  resultPbReqProject.hasProvince = YES;
  resultPbReqProject.province = value;
  return self;
}
- (PbReqProjectBuilder*) clearProvince {
  resultPbReqProject.hasProvince = NO;
  resultPbReqProject.province = @"";
  return self;
}
- (BOOL) hasCity {
  return resultPbReqProject.hasCity;
}
- (NSString*) city {
  return resultPbReqProject.city;
}
- (PbReqProjectBuilder*) setCity:(NSString*) value {
  resultPbReqProject.hasCity = YES;
  resultPbReqProject.city = value;
  return self;
}
- (PbReqProjectBuilder*) clearCity {
  resultPbReqProject.hasCity = NO;
  resultPbReqProject.city = @"";
  return self;
}
- (BOOL) hasPrjAddress {
  return resultPbReqProject.hasPrjAddress;
}
- (NSString*) prjAddress {
  return resultPbReqProject.prjAddress;
}
- (PbReqProjectBuilder*) setPrjAddress:(NSString*) value {
  resultPbReqProject.hasPrjAddress = YES;
  resultPbReqProject.prjAddress = value;
  return self;
}
- (PbReqProjectBuilder*) clearPrjAddress {
  resultPbReqProject.hasPrjAddress = NO;
  resultPbReqProject.prjAddress = @"";
  return self;
}
- (BOOL) hasFloorArea {
  return resultPbReqProject.hasFloorArea;
}
- (SInt32) floorArea {
  return resultPbReqProject.floorArea;
}
- (PbReqProjectBuilder*) setFloorArea:(SInt32) value {
  resultPbReqProject.hasFloorArea = YES;
  resultPbReqProject.floorArea = value;
  return self;
}
- (PbReqProjectBuilder*) clearFloorArea {
  resultPbReqProject.hasFloorArea = NO;
  resultPbReqProject.floorArea = 0;
  return self;
}
- (BOOL) hasPrjBegin {
  return resultPbReqProject.hasPrjBegin;
}
- (SInt32) prjBegin {
  return resultPbReqProject.prjBegin;
}
- (PbReqProjectBuilder*) setPrjBegin:(SInt32) value {
  resultPbReqProject.hasPrjBegin = YES;
  resultPbReqProject.prjBegin = value;
  return self;
}
- (PbReqProjectBuilder*) clearPrjBegin {
  resultPbReqProject.hasPrjBegin = NO;
  resultPbReqProject.prjBegin = 0;
  return self;
}
- (BOOL) hasPrjEnd {
  return resultPbReqProject.hasPrjEnd;
}
- (SInt32) prjEnd {
  return resultPbReqProject.prjEnd;
}
- (PbReqProjectBuilder*) setPrjEnd:(SInt32) value {
  resultPbReqProject.hasPrjEnd = YES;
  resultPbReqProject.prjEnd = value;
  return self;
}
- (PbReqProjectBuilder*) clearPrjEnd {
  resultPbReqProject.hasPrjEnd = NO;
  resultPbReqProject.prjEnd = 0;
  return self;
}
- (BOOL) hasJianzhuDanwei {
  return resultPbReqProject.hasJianzhuDanwei;
}
- (NSString*) jianzhuDanwei {
  return resultPbReqProject.jianzhuDanwei;
}
- (PbReqProjectBuilder*) setJianzhuDanwei:(NSString*) value {
  resultPbReqProject.hasJianzhuDanwei = YES;
  resultPbReqProject.jianzhuDanwei = value;
  return self;
}
- (PbReqProjectBuilder*) clearJianzhuDanwei {
  resultPbReqProject.hasJianzhuDanwei = NO;
  resultPbReqProject.jianzhuDanwei = @"";
  return self;
}
- (BOOL) hasShigongDanwei {
  return resultPbReqProject.hasShigongDanwei;
}
- (NSString*) shigongDanwei {
  return resultPbReqProject.shigongDanwei;
}
- (PbReqProjectBuilder*) setShigongDanwei:(NSString*) value {
  resultPbReqProject.hasShigongDanwei = YES;
  resultPbReqProject.shigongDanwei = value;
  return self;
}
- (PbReqProjectBuilder*) clearShigongDanwei {
  resultPbReqProject.hasShigongDanwei = NO;
  resultPbReqProject.shigongDanwei = @"";
  return self;
}
- (BOOL) hasJianliDanwei {
  return resultPbReqProject.hasJianliDanwei;
}
- (NSString*) jianliDanwei {
  return resultPbReqProject.jianliDanwei;
}
- (PbReqProjectBuilder*) setJianliDanwei:(NSString*) value {
  resultPbReqProject.hasJianliDanwei = YES;
  resultPbReqProject.jianliDanwei = value;
  return self;
}
- (PbReqProjectBuilder*) clearJianliDanwei {
  resultPbReqProject.hasJianliDanwei = NO;
  resultPbReqProject.jianliDanwei = @"";
  return self;
}
- (BOOL) hasFenbaoDanwei {
  return resultPbReqProject.hasFenbaoDanwei;
}
- (NSString*) fenbaoDanwei {
  return resultPbReqProject.fenbaoDanwei;
}
- (PbReqProjectBuilder*) setFenbaoDanwei:(NSString*) value {
  resultPbReqProject.hasFenbaoDanwei = YES;
  resultPbReqProject.fenbaoDanwei = value;
  return self;
}
- (PbReqProjectBuilder*) clearFenbaoDanwei {
  resultPbReqProject.hasFenbaoDanwei = NO;
  resultPbReqProject.fenbaoDanwei = @"";
  return self;
}
- (BOOL) hasLat {
  return resultPbReqProject.hasLat;
}
- (Float64) lat {
  return resultPbReqProject.lat;
}
- (PbReqProjectBuilder*) setLat:(Float64) value {
  resultPbReqProject.hasLat = YES;
  resultPbReqProject.lat = value;
  return self;
}
- (PbReqProjectBuilder*) clearLat {
  resultPbReqProject.hasLat = NO;
  resultPbReqProject.lat = 0;
  return self;
}
- (BOOL) hasLon {
  return resultPbReqProject.hasLon;
}
- (Float64) lon {
  return resultPbReqProject.lon;
}
- (PbReqProjectBuilder*) setLon:(Float64) value {
  resultPbReqProject.hasLon = YES;
  resultPbReqProject.lon = value;
  return self;
}
- (PbReqProjectBuilder*) clearLon {
  resultPbReqProject.hasLon = NO;
  resultPbReqProject.lon = 0;
  return self;
}
- (BOOL) hasFloatFloorArea {
  return resultPbReqProject.hasFloatFloorArea;
}
- (Float32) floatFloorArea {
  return resultPbReqProject.floatFloorArea;
}
- (PbReqProjectBuilder*) setFloatFloorArea:(Float32) value {
  resultPbReqProject.hasFloatFloorArea = YES;
  resultPbReqProject.floatFloorArea = value;
  return self;
}
- (PbReqProjectBuilder*) clearFloatFloorArea {
  resultPbReqProject.hasFloatFloorArea = NO;
  resultPbReqProject.floatFloorArea = 0;
  return self;
}
@end

@interface PbReqTaskReport ()
@property (strong) NSString* reportId;
@property (strong) PbReqUser* sponsor;
@property (strong) PbReqUser* replyTo;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property SInt32 contentType;
@property SInt32 playtime;
@property (strong) NSMutableArray * attachListArray;
@property SInt32 reportTime;
@end

@implementation PbReqTaskReport

- (BOOL) hasReportId {
  return !!hasReportId_;
}
- (void) setHasReportId:(BOOL) _value_ {
  hasReportId_ = !!_value_;
}
@synthesize reportId;
- (BOOL) hasSponsor {
  return !!hasSponsor_;
}
- (void) setHasSponsor:(BOOL) _value_ {
  hasSponsor_ = !!_value_;
}
@synthesize sponsor;
- (BOOL) hasReplyTo {
  return !!hasReplyTo_;
}
- (void) setHasReplyTo:(BOOL) _value_ {
  hasReplyTo_ = !!_value_;
}
@synthesize replyTo;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasContentType {
  return !!hasContentType_;
}
- (void) setHasContentType:(BOOL) _value_ {
  hasContentType_ = !!_value_;
}
@synthesize contentType;
- (BOOL) hasPlaytime {
  return !!hasPlaytime_;
}
- (void) setHasPlaytime:(BOOL) _value_ {
  hasPlaytime_ = !!_value_;
}
@synthesize playtime;
@synthesize attachListArray;
@dynamic attachList;
- (BOOL) hasReportTime {
  return !!hasReportTime_;
}
- (void) setHasReportTime:(BOOL) _value_ {
  hasReportTime_ = !!_value_;
}
@synthesize reportTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.reportId = @"";
    self.sponsor = [PbReqUser defaultInstance];
    self.replyTo = [PbReqUser defaultInstance];
    self.title = @"";
    self.content = @"";
    self.contentType = 0;
    self.playtime = 0;
    self.reportTime = 0;
  }
  return self;
}
static PbReqTaskReport* defaultPbReqTaskReportInstance = nil;
+ (void) initialize {
  if (self == [PbReqTaskReport class]) {
    defaultPbReqTaskReportInstance = [[PbReqTaskReport alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqTaskReportInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqTaskReportInstance;
}
- (NSArray *)attachList {
  return attachListArray;
}
- (PbReqBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [attachListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReportId) {
    [output writeString:1 value:self.reportId];
  }
  if (self.hasSponsor) {
    [output writeMessage:2 value:self.sponsor];
  }
  if (self.hasReplyTo) {
    [output writeMessage:3 value:self.replyTo];
  }
  if (self.hasTitle) {
    [output writeString:4 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasContentType) {
    [output writeInt32:6 value:self.contentType];
  }
  if (self.hasPlaytime) {
    [output writeInt32:7 value:self.playtime];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  if (self.hasReportTime) {
    [output writeInt32:9 value:self.reportTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReportId) {
    size_ += computeStringSize(1, self.reportId);
  }
  if (self.hasSponsor) {
    size_ += computeMessageSize(2, self.sponsor);
  }
  if (self.hasReplyTo) {
    size_ += computeMessageSize(3, self.replyTo);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(4, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasContentType) {
    size_ += computeInt32Size(6, self.contentType);
  }
  if (self.hasPlaytime) {
    size_ += computeInt32Size(7, self.playtime);
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  if (self.hasReportTime) {
    size_ += computeInt32Size(9, self.reportTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqTaskReport*) parseFromData:(NSData*) data {
  return (PbReqTaskReport*)[[[PbReqTaskReport builder] mergeFromData:data] build];
}
+ (PbReqTaskReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqTaskReport*)[[[PbReqTaskReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqTaskReport*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqTaskReport*)[[[PbReqTaskReport builder] mergeFromInputStream:input] build];
}
+ (PbReqTaskReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqTaskReport*)[[[PbReqTaskReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqTaskReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqTaskReport*)[[[PbReqTaskReport builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqTaskReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqTaskReport*)[[[PbReqTaskReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqTaskReportBuilder*) builder {
  return [[PbReqTaskReportBuilder alloc] init];
}
+ (PbReqTaskReportBuilder*) builderWithPrototype:(PbReqTaskReport*) prototype {
  return [[PbReqTaskReport builder] mergeFrom:prototype];
}
- (PbReqTaskReportBuilder*) builder {
  return [PbReqTaskReport builder];
}
- (PbReqTaskReportBuilder*) toBuilder {
  return [PbReqTaskReport builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reportId", self.reportId];
  }
  if (self.hasSponsor) {
    [output appendFormat:@"%@%@ {\n", indent, @"sponsor"];
    [self.sponsor writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasReplyTo) {
    [output appendFormat:@"%@%@ {\n", indent, @"replyTo"];
    [self.replyTo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasContentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contentType", [NSNumber numberWithInteger:self.contentType]];
  }
  if (self.hasPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playtime", [NSNumber numberWithInteger:self.playtime]];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attachList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasReportTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reportTime", [NSNumber numberWithInteger:self.reportTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReportId) {
    [dictionary setObject: self.reportId forKey: @"reportId"];
  }
  if (self.hasSponsor) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.sponsor storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"sponsor"];
  }
  if (self.hasReplyTo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.replyTo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"replyTo"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasContentType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.contentType] forKey: @"contentType"];
  }
  if (self.hasPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.playtime] forKey: @"playtime"];
  }
  for (PbReqBaseFile* element in self.attachListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attachList"];
  }
  if (self.hasReportTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.reportTime] forKey: @"reportTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqTaskReport class]]) {
    return NO;
  }
  PbReqTaskReport *otherMessage = other;
  return
      self.hasReportId == otherMessage.hasReportId &&
      (!self.hasReportId || [self.reportId isEqual:otherMessage.reportId]) &&
      self.hasSponsor == otherMessage.hasSponsor &&
      (!self.hasSponsor || [self.sponsor isEqual:otherMessage.sponsor]) &&
      self.hasReplyTo == otherMessage.hasReplyTo &&
      (!self.hasReplyTo || [self.replyTo isEqual:otherMessage.replyTo]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasContentType == otherMessage.hasContentType &&
      (!self.hasContentType || self.contentType == otherMessage.contentType) &&
      self.hasPlaytime == otherMessage.hasPlaytime &&
      (!self.hasPlaytime || self.playtime == otherMessage.playtime) &&
      [self.attachListArray isEqualToArray:otherMessage.attachListArray] &&
      self.hasReportTime == otherMessage.hasReportTime &&
      (!self.hasReportTime || self.reportTime == otherMessage.reportTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReportId) {
    hashCode = hashCode * 31 + [self.reportId hash];
  }
  if (self.hasSponsor) {
    hashCode = hashCode * 31 + [self.sponsor hash];
  }
  if (self.hasReplyTo) {
    hashCode = hashCode * 31 + [self.replyTo hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasContentType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.contentType] hash];
  }
  if (self.hasPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.playtime] hash];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasReportTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reportTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqTaskReportBuilder()
@property (strong) PbReqTaskReport* resultPbReqTaskReport;
@end

@implementation PbReqTaskReportBuilder
@synthesize resultPbReqTaskReport;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqTaskReport = [[PbReqTaskReport alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqTaskReport;
}
- (PbReqTaskReportBuilder*) clear {
  self.resultPbReqTaskReport = [[PbReqTaskReport alloc] init];
  return self;
}
- (PbReqTaskReportBuilder*) clone {
  return [PbReqTaskReport builderWithPrototype:resultPbReqTaskReport];
}
- (PbReqTaskReport*) defaultInstance {
  return [PbReqTaskReport defaultInstance];
}
- (PbReqTaskReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqTaskReport*) buildPartial {
  PbReqTaskReport* returnMe = resultPbReqTaskReport;
  self.resultPbReqTaskReport = nil;
  return returnMe;
}
- (PbReqTaskReportBuilder*) mergeFrom:(PbReqTaskReport*) other {
  if (other == [PbReqTaskReport defaultInstance]) {
    return self;
  }
  if (other.hasReportId) {
    [self setReportId:other.reportId];
  }
  if (other.hasSponsor) {
    [self mergeSponsor:other.sponsor];
  }
  if (other.hasReplyTo) {
    [self mergeReplyTo:other.replyTo];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasContentType) {
    [self setContentType:other.contentType];
  }
  if (other.hasPlaytime) {
    [self setPlaytime:other.playtime];
  }
  if (other.attachListArray.count > 0) {
    if (resultPbReqTaskReport.attachListArray == nil) {
      resultPbReqTaskReport.attachListArray = [[NSMutableArray alloc] initWithArray:other.attachListArray];
    } else {
      [resultPbReqTaskReport.attachListArray addObjectsFromArray:other.attachListArray];
    }
  }
  if (other.hasReportTime) {
    [self setReportTime:other.reportTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqTaskReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqTaskReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setReportId:[input readString]];
        break;
      }
      case 18: {
        PbReqUserBuilder* subBuilder = [PbReqUser builder];
        if (self.hasSponsor) {
          [subBuilder mergeFrom:self.sponsor];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSponsor:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PbReqUserBuilder* subBuilder = [PbReqUser builder];
        if (self.hasReplyTo) {
          [subBuilder mergeFrom:self.replyTo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReplyTo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setTitle:[input readString]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 48: {
        [self setContentType:[input readInt32]];
        break;
      }
      case 56: {
        [self setPlaytime:[input readInt32]];
        break;
      }
      case 66: {
        PbReqBaseFileBuilder* subBuilder = [PbReqBaseFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttachList:[subBuilder buildPartial]];
        break;
      }
      case 72: {
        [self setReportTime:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReportId {
  return resultPbReqTaskReport.hasReportId;
}
- (NSString*) reportId {
  return resultPbReqTaskReport.reportId;
}
- (PbReqTaskReportBuilder*) setReportId:(NSString*) value {
  resultPbReqTaskReport.hasReportId = YES;
  resultPbReqTaskReport.reportId = value;
  return self;
}
- (PbReqTaskReportBuilder*) clearReportId {
  resultPbReqTaskReport.hasReportId = NO;
  resultPbReqTaskReport.reportId = @"";
  return self;
}
- (BOOL) hasSponsor {
  return resultPbReqTaskReport.hasSponsor;
}
- (PbReqUser*) sponsor {
  return resultPbReqTaskReport.sponsor;
}
- (PbReqTaskReportBuilder*) setSponsor:(PbReqUser*) value {
  resultPbReqTaskReport.hasSponsor = YES;
  resultPbReqTaskReport.sponsor = value;
  return self;
}
- (PbReqTaskReportBuilder*) setSponsorBuilder:(PbReqUserBuilder*) builderForValue {
  return [self setSponsor:[builderForValue build]];
}
- (PbReqTaskReportBuilder*) mergeSponsor:(PbReqUser*) value {
  if (resultPbReqTaskReport.hasSponsor &&
      resultPbReqTaskReport.sponsor != [PbReqUser defaultInstance]) {
    resultPbReqTaskReport.sponsor =
      [[[PbReqUser builderWithPrototype:resultPbReqTaskReport.sponsor] mergeFrom:value] buildPartial];
  } else {
    resultPbReqTaskReport.sponsor = value;
  }
  resultPbReqTaskReport.hasSponsor = YES;
  return self;
}
- (PbReqTaskReportBuilder*) clearSponsor {
  resultPbReqTaskReport.hasSponsor = NO;
  resultPbReqTaskReport.sponsor = [PbReqUser defaultInstance];
  return self;
}
- (BOOL) hasReplyTo {
  return resultPbReqTaskReport.hasReplyTo;
}
- (PbReqUser*) replyTo {
  return resultPbReqTaskReport.replyTo;
}
- (PbReqTaskReportBuilder*) setReplyTo:(PbReqUser*) value {
  resultPbReqTaskReport.hasReplyTo = YES;
  resultPbReqTaskReport.replyTo = value;
  return self;
}
- (PbReqTaskReportBuilder*) setReplyToBuilder:(PbReqUserBuilder*) builderForValue {
  return [self setReplyTo:[builderForValue build]];
}
- (PbReqTaskReportBuilder*) mergeReplyTo:(PbReqUser*) value {
  if (resultPbReqTaskReport.hasReplyTo &&
      resultPbReqTaskReport.replyTo != [PbReqUser defaultInstance]) {
    resultPbReqTaskReport.replyTo =
      [[[PbReqUser builderWithPrototype:resultPbReqTaskReport.replyTo] mergeFrom:value] buildPartial];
  } else {
    resultPbReqTaskReport.replyTo = value;
  }
  resultPbReqTaskReport.hasReplyTo = YES;
  return self;
}
- (PbReqTaskReportBuilder*) clearReplyTo {
  resultPbReqTaskReport.hasReplyTo = NO;
  resultPbReqTaskReport.replyTo = [PbReqUser defaultInstance];
  return self;
}
- (BOOL) hasTitle {
  return resultPbReqTaskReport.hasTitle;
}
- (NSString*) title {
  return resultPbReqTaskReport.title;
}
- (PbReqTaskReportBuilder*) setTitle:(NSString*) value {
  resultPbReqTaskReport.hasTitle = YES;
  resultPbReqTaskReport.title = value;
  return self;
}
- (PbReqTaskReportBuilder*) clearTitle {
  resultPbReqTaskReport.hasTitle = NO;
  resultPbReqTaskReport.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultPbReqTaskReport.hasContent;
}
- (NSString*) content {
  return resultPbReqTaskReport.content;
}
- (PbReqTaskReportBuilder*) setContent:(NSString*) value {
  resultPbReqTaskReport.hasContent = YES;
  resultPbReqTaskReport.content = value;
  return self;
}
- (PbReqTaskReportBuilder*) clearContent {
  resultPbReqTaskReport.hasContent = NO;
  resultPbReqTaskReport.content = @"";
  return self;
}
- (BOOL) hasContentType {
  return resultPbReqTaskReport.hasContentType;
}
- (SInt32) contentType {
  return resultPbReqTaskReport.contentType;
}
- (PbReqTaskReportBuilder*) setContentType:(SInt32) value {
  resultPbReqTaskReport.hasContentType = YES;
  resultPbReqTaskReport.contentType = value;
  return self;
}
- (PbReqTaskReportBuilder*) clearContentType {
  resultPbReqTaskReport.hasContentType = NO;
  resultPbReqTaskReport.contentType = 0;
  return self;
}
- (BOOL) hasPlaytime {
  return resultPbReqTaskReport.hasPlaytime;
}
- (SInt32) playtime {
  return resultPbReqTaskReport.playtime;
}
- (PbReqTaskReportBuilder*) setPlaytime:(SInt32) value {
  resultPbReqTaskReport.hasPlaytime = YES;
  resultPbReqTaskReport.playtime = value;
  return self;
}
- (PbReqTaskReportBuilder*) clearPlaytime {
  resultPbReqTaskReport.hasPlaytime = NO;
  resultPbReqTaskReport.playtime = 0;
  return self;
}
- (NSMutableArray *)attachList {
  return resultPbReqTaskReport.attachListArray;
}
- (PbReqBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [resultPbReqTaskReport attachListAtIndex:index];
}
- (PbReqTaskReportBuilder *)addAttachList:(PbReqBaseFile*)value {
  if (resultPbReqTaskReport.attachListArray == nil) {
    resultPbReqTaskReport.attachListArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqTaskReport.attachListArray addObject:value];
  return self;
}
- (PbReqTaskReportBuilder *)setAttachListArray:(NSArray *)array {
  resultPbReqTaskReport.attachListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqTaskReportBuilder *)clearAttachList {
  resultPbReqTaskReport.attachListArray = nil;
  return self;
}
- (BOOL) hasReportTime {
  return resultPbReqTaskReport.hasReportTime;
}
- (SInt32) reportTime {
  return resultPbReqTaskReport.reportTime;
}
- (PbReqTaskReportBuilder*) setReportTime:(SInt32) value {
  resultPbReqTaskReport.hasReportTime = YES;
  resultPbReqTaskReport.reportTime = value;
  return self;
}
- (PbReqTaskReportBuilder*) clearReportTime {
  resultPbReqTaskReport.hasReportTime = NO;
  resultPbReqTaskReport.reportTime = 0;
  return self;
}
@end

@interface PbReqTask ()
@property (strong) NSString* taskId;
@property SInt32 taskType;
@property (strong) NSString* prjId;
@property (strong) NSString* taskDesc;
@property SInt32 taskDescType;
@property SInt32 playtime;
@property (strong) PbReqUser* sponsor;
@property (strong) NSMutableArray * membersArray;
@property (strong) NSString* position;
@property SInt32 taskStatus;
@property (strong) NSMutableArray * attachListArray;
@property (strong) NSMutableArray * reportListArray;
@property SInt32 taskBegin;
@property SInt32 taskEnd;
@end

@implementation PbReqTask

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) _value_ {
  hasTaskId_ = !!_value_;
}
@synthesize taskId;
- (BOOL) hasTaskType {
  return !!hasTaskType_;
}
- (void) setHasTaskType:(BOOL) _value_ {
  hasTaskType_ = !!_value_;
}
@synthesize taskType;
- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasTaskDesc {
  return !!hasTaskDesc_;
}
- (void) setHasTaskDesc:(BOOL) _value_ {
  hasTaskDesc_ = !!_value_;
}
@synthesize taskDesc;
- (BOOL) hasTaskDescType {
  return !!hasTaskDescType_;
}
- (void) setHasTaskDescType:(BOOL) _value_ {
  hasTaskDescType_ = !!_value_;
}
@synthesize taskDescType;
- (BOOL) hasPlaytime {
  return !!hasPlaytime_;
}
- (void) setHasPlaytime:(BOOL) _value_ {
  hasPlaytime_ = !!_value_;
}
@synthesize playtime;
- (BOOL) hasSponsor {
  return !!hasSponsor_;
}
- (void) setHasSponsor:(BOOL) _value_ {
  hasSponsor_ = !!_value_;
}
@synthesize sponsor;
@synthesize membersArray;
@dynamic members;
- (BOOL) hasPosition {
  return !!hasPosition_;
}
- (void) setHasPosition:(BOOL) _value_ {
  hasPosition_ = !!_value_;
}
@synthesize position;
- (BOOL) hasTaskStatus {
  return !!hasTaskStatus_;
}
- (void) setHasTaskStatus:(BOOL) _value_ {
  hasTaskStatus_ = !!_value_;
}
@synthesize taskStatus;
@synthesize attachListArray;
@dynamic attachList;
@synthesize reportListArray;
@dynamic reportList;
- (BOOL) hasTaskBegin {
  return !!hasTaskBegin_;
}
- (void) setHasTaskBegin:(BOOL) _value_ {
  hasTaskBegin_ = !!_value_;
}
@synthesize taskBegin;
- (BOOL) hasTaskEnd {
  return !!hasTaskEnd_;
}
- (void) setHasTaskEnd:(BOOL) _value_ {
  hasTaskEnd_ = !!_value_;
}
@synthesize taskEnd;
- (instancetype) init {
  if ((self = [super init])) {
    self.taskId = @"";
    self.taskType = 0;
    self.prjId = @"";
    self.taskDesc = @"";
    self.taskDescType = 0;
    self.playtime = 0;
    self.sponsor = [PbReqUser defaultInstance];
    self.position = @"";
    self.taskStatus = 0;
    self.taskBegin = 0;
    self.taskEnd = 0;
  }
  return self;
}
static PbReqTask* defaultPbReqTaskInstance = nil;
+ (void) initialize {
  if (self == [PbReqTask class]) {
    defaultPbReqTaskInstance = [[PbReqTask alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqTaskInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqTaskInstance;
}
- (NSArray *)members {
  return membersArray;
}
- (PbReqUser*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (NSArray *)attachList {
  return attachListArray;
}
- (PbReqBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [attachListArray objectAtIndex:index];
}
- (NSArray *)reportList {
  return reportListArray;
}
- (PbReqTaskReport*)reportListAtIndex:(NSUInteger)index {
  return [reportListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeString:1 value:self.taskId];
  }
  if (self.hasTaskType) {
    [output writeInt32:2 value:self.taskType];
  }
  if (self.hasPrjId) {
    [output writeString:3 value:self.prjId];
  }
  if (self.hasTaskDesc) {
    [output writeString:4 value:self.taskDesc];
  }
  if (self.hasTaskDescType) {
    [output writeInt32:5 value:self.taskDescType];
  }
  if (self.hasPlaytime) {
    [output writeInt32:6 value:self.playtime];
  }
  if (self.hasSponsor) {
    [output writeMessage:7 value:self.sponsor];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  if (self.hasPosition) {
    [output writeString:9 value:self.position];
  }
  if (self.hasTaskStatus) {
    [output writeInt32:10 value:self.taskStatus];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:11 value:element];
  }];
  [self.reportListArray enumerateObjectsUsingBlock:^(PbReqTaskReport *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:12 value:element];
  }];
  if (self.hasTaskBegin) {
    [output writeInt32:13 value:self.taskBegin];
  }
  if (self.hasTaskEnd) {
    [output writeInt32:14 value:self.taskEnd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTaskId) {
    size_ += computeStringSize(1, self.taskId);
  }
  if (self.hasTaskType) {
    size_ += computeInt32Size(2, self.taskType);
  }
  if (self.hasPrjId) {
    size_ += computeStringSize(3, self.prjId);
  }
  if (self.hasTaskDesc) {
    size_ += computeStringSize(4, self.taskDesc);
  }
  if (self.hasTaskDescType) {
    size_ += computeInt32Size(5, self.taskDescType);
  }
  if (self.hasPlaytime) {
    size_ += computeInt32Size(6, self.playtime);
  }
  if (self.hasSponsor) {
    size_ += computeMessageSize(7, self.sponsor);
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  if (self.hasPosition) {
    size_ += computeStringSize(9, self.position);
  }
  if (self.hasTaskStatus) {
    size_ += computeInt32Size(10, self.taskStatus);
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(11, element);
  }];
  [self.reportListArray enumerateObjectsUsingBlock:^(PbReqTaskReport *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(12, element);
  }];
  if (self.hasTaskBegin) {
    size_ += computeInt32Size(13, self.taskBegin);
  }
  if (self.hasTaskEnd) {
    size_ += computeInt32Size(14, self.taskEnd);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqTask*) parseFromData:(NSData*) data {
  return (PbReqTask*)[[[PbReqTask builder] mergeFromData:data] build];
}
+ (PbReqTask*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqTask*)[[[PbReqTask builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqTask*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqTask*)[[[PbReqTask builder] mergeFromInputStream:input] build];
}
+ (PbReqTask*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqTask*)[[[PbReqTask builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqTask*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqTask*)[[[PbReqTask builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqTask*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqTask*)[[[PbReqTask builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqTaskBuilder*) builder {
  return [[PbReqTaskBuilder alloc] init];
}
+ (PbReqTaskBuilder*) builderWithPrototype:(PbReqTask*) prototype {
  return [[PbReqTask builder] mergeFrom:prototype];
}
- (PbReqTaskBuilder*) builder {
  return [PbReqTask builder];
}
- (PbReqTaskBuilder*) toBuilder {
  return [PbReqTask builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", self.taskId];
  }
  if (self.hasTaskType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskType", [NSNumber numberWithInteger:self.taskType]];
  }
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasTaskDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDesc", self.taskDesc];
  }
  if (self.hasTaskDescType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDescType", [NSNumber numberWithInteger:self.taskDescType]];
  }
  if (self.hasPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playtime", [NSNumber numberWithInteger:self.playtime]];
  }
  if (self.hasSponsor) {
    [output appendFormat:@"%@%@ {\n", indent, @"sponsor"];
    [self.sponsor writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"position", self.position];
  }
  if (self.hasTaskStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskStatus", [NSNumber numberWithInteger:self.taskStatus]];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attachList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.reportListArray enumerateObjectsUsingBlock:^(PbReqTaskReport *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"reportList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTaskBegin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskBegin", [NSNumber numberWithInteger:self.taskBegin]];
  }
  if (self.hasTaskEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskEnd", [NSNumber numberWithInteger:self.taskEnd]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTaskId) {
    [dictionary setObject: self.taskId forKey: @"taskId"];
  }
  if (self.hasTaskType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskType] forKey: @"taskType"];
  }
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasTaskDesc) {
    [dictionary setObject: self.taskDesc forKey: @"taskDesc"];
  }
  if (self.hasTaskDescType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskDescType] forKey: @"taskDescType"];
  }
  if (self.hasPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.playtime] forKey: @"playtime"];
  }
  if (self.hasSponsor) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.sponsor storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"sponsor"];
  }
  for (PbReqUser* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  if (self.hasPosition) {
    [dictionary setObject: self.position forKey: @"position"];
  }
  if (self.hasTaskStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskStatus] forKey: @"taskStatus"];
  }
  for (PbReqBaseFile* element in self.attachListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attachList"];
  }
  for (PbReqTaskReport* element in self.reportListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"reportList"];
  }
  if (self.hasTaskBegin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskBegin] forKey: @"taskBegin"];
  }
  if (self.hasTaskEnd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskEnd] forKey: @"taskEnd"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqTask class]]) {
    return NO;
  }
  PbReqTask *otherMessage = other;
  return
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || [self.taskId isEqual:otherMessage.taskId]) &&
      self.hasTaskType == otherMessage.hasTaskType &&
      (!self.hasTaskType || self.taskType == otherMessage.taskType) &&
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasTaskDesc == otherMessage.hasTaskDesc &&
      (!self.hasTaskDesc || [self.taskDesc isEqual:otherMessage.taskDesc]) &&
      self.hasTaskDescType == otherMessage.hasTaskDescType &&
      (!self.hasTaskDescType || self.taskDescType == otherMessage.taskDescType) &&
      self.hasPlaytime == otherMessage.hasPlaytime &&
      (!self.hasPlaytime || self.playtime == otherMessage.playtime) &&
      self.hasSponsor == otherMessage.hasSponsor &&
      (!self.hasSponsor || [self.sponsor isEqual:otherMessage.sponsor]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasPosition == otherMessage.hasPosition &&
      (!self.hasPosition || [self.position isEqual:otherMessage.position]) &&
      self.hasTaskStatus == otherMessage.hasTaskStatus &&
      (!self.hasTaskStatus || self.taskStatus == otherMessage.taskStatus) &&
      [self.attachListArray isEqualToArray:otherMessage.attachListArray] &&
      [self.reportListArray isEqualToArray:otherMessage.reportListArray] &&
      self.hasTaskBegin == otherMessage.hasTaskBegin &&
      (!self.hasTaskBegin || self.taskBegin == otherMessage.taskBegin) &&
      self.hasTaskEnd == otherMessage.hasTaskEnd &&
      (!self.hasTaskEnd || self.taskEnd == otherMessage.taskEnd) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [self.taskId hash];
  }
  if (self.hasTaskType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskType] hash];
  }
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasTaskDesc) {
    hashCode = hashCode * 31 + [self.taskDesc hash];
  }
  if (self.hasTaskDescType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskDescType] hash];
  }
  if (self.hasPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.playtime] hash];
  }
  if (self.hasSponsor) {
    hashCode = hashCode * 31 + [self.sponsor hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPosition) {
    hashCode = hashCode * 31 + [self.position hash];
  }
  if (self.hasTaskStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskStatus] hash];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbReqBaseFile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.reportListArray enumerateObjectsUsingBlock:^(PbReqTaskReport *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTaskBegin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskBegin] hash];
  }
  if (self.hasTaskEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskEnd] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqTaskBuilder()
@property (strong) PbReqTask* resultPbReqTask;
@end

@implementation PbReqTaskBuilder
@synthesize resultPbReqTask;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqTask = [[PbReqTask alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqTask;
}
- (PbReqTaskBuilder*) clear {
  self.resultPbReqTask = [[PbReqTask alloc] init];
  return self;
}
- (PbReqTaskBuilder*) clone {
  return [PbReqTask builderWithPrototype:resultPbReqTask];
}
- (PbReqTask*) defaultInstance {
  return [PbReqTask defaultInstance];
}
- (PbReqTask*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqTask*) buildPartial {
  PbReqTask* returnMe = resultPbReqTask;
  self.resultPbReqTask = nil;
  return returnMe;
}
- (PbReqTaskBuilder*) mergeFrom:(PbReqTask*) other {
  if (other == [PbReqTask defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasTaskType) {
    [self setTaskType:other.taskType];
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasTaskDesc) {
    [self setTaskDesc:other.taskDesc];
  }
  if (other.hasTaskDescType) {
    [self setTaskDescType:other.taskDescType];
  }
  if (other.hasPlaytime) {
    [self setPlaytime:other.playtime];
  }
  if (other.hasSponsor) {
    [self mergeSponsor:other.sponsor];
  }
  if (other.membersArray.count > 0) {
    if (resultPbReqTask.membersArray == nil) {
      resultPbReqTask.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultPbReqTask.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  if (other.hasPosition) {
    [self setPosition:other.position];
  }
  if (other.hasTaskStatus) {
    [self setTaskStatus:other.taskStatus];
  }
  if (other.attachListArray.count > 0) {
    if (resultPbReqTask.attachListArray == nil) {
      resultPbReqTask.attachListArray = [[NSMutableArray alloc] initWithArray:other.attachListArray];
    } else {
      [resultPbReqTask.attachListArray addObjectsFromArray:other.attachListArray];
    }
  }
  if (other.reportListArray.count > 0) {
    if (resultPbReqTask.reportListArray == nil) {
      resultPbReqTask.reportListArray = [[NSMutableArray alloc] initWithArray:other.reportListArray];
    } else {
      [resultPbReqTask.reportListArray addObjectsFromArray:other.reportListArray];
    }
  }
  if (other.hasTaskBegin) {
    [self setTaskBegin:other.taskBegin];
  }
  if (other.hasTaskEnd) {
    [self setTaskEnd:other.taskEnd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTaskId:[input readString]];
        break;
      }
      case 16: {
        [self setTaskType:[input readInt32]];
        break;
      }
      case 26: {
        [self setPrjId:[input readString]];
        break;
      }
      case 34: {
        [self setTaskDesc:[input readString]];
        break;
      }
      case 40: {
        [self setTaskDescType:[input readInt32]];
        break;
      }
      case 48: {
        [self setPlaytime:[input readInt32]];
        break;
      }
      case 58: {
        PbReqUserBuilder* subBuilder = [PbReqUser builder];
        if (self.hasSponsor) {
          [subBuilder mergeFrom:self.sponsor];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSponsor:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PbReqUserBuilder* subBuilder = [PbReqUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        [self setPosition:[input readString]];
        break;
      }
      case 80: {
        [self setTaskStatus:[input readInt32]];
        break;
      }
      case 90: {
        PbReqBaseFileBuilder* subBuilder = [PbReqBaseFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttachList:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        PbReqTaskReportBuilder* subBuilder = [PbReqTaskReport builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReportList:[subBuilder buildPartial]];
        break;
      }
      case 104: {
        [self setTaskBegin:[input readInt32]];
        break;
      }
      case 112: {
        [self setTaskEnd:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return resultPbReqTask.hasTaskId;
}
- (NSString*) taskId {
  return resultPbReqTask.taskId;
}
- (PbReqTaskBuilder*) setTaskId:(NSString*) value {
  resultPbReqTask.hasTaskId = YES;
  resultPbReqTask.taskId = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskId {
  resultPbReqTask.hasTaskId = NO;
  resultPbReqTask.taskId = @"";
  return self;
}
- (BOOL) hasTaskType {
  return resultPbReqTask.hasTaskType;
}
- (SInt32) taskType {
  return resultPbReqTask.taskType;
}
- (PbReqTaskBuilder*) setTaskType:(SInt32) value {
  resultPbReqTask.hasTaskType = YES;
  resultPbReqTask.taskType = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskType {
  resultPbReqTask.hasTaskType = NO;
  resultPbReqTask.taskType = 0;
  return self;
}
- (BOOL) hasPrjId {
  return resultPbReqTask.hasPrjId;
}
- (NSString*) prjId {
  return resultPbReqTask.prjId;
}
- (PbReqTaskBuilder*) setPrjId:(NSString*) value {
  resultPbReqTask.hasPrjId = YES;
  resultPbReqTask.prjId = value;
  return self;
}
- (PbReqTaskBuilder*) clearPrjId {
  resultPbReqTask.hasPrjId = NO;
  resultPbReqTask.prjId = @"";
  return self;
}
- (BOOL) hasTaskDesc {
  return resultPbReqTask.hasTaskDesc;
}
- (NSString*) taskDesc {
  return resultPbReqTask.taskDesc;
}
- (PbReqTaskBuilder*) setTaskDesc:(NSString*) value {
  resultPbReqTask.hasTaskDesc = YES;
  resultPbReqTask.taskDesc = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskDesc {
  resultPbReqTask.hasTaskDesc = NO;
  resultPbReqTask.taskDesc = @"";
  return self;
}
- (BOOL) hasTaskDescType {
  return resultPbReqTask.hasTaskDescType;
}
- (SInt32) taskDescType {
  return resultPbReqTask.taskDescType;
}
- (PbReqTaskBuilder*) setTaskDescType:(SInt32) value {
  resultPbReqTask.hasTaskDescType = YES;
  resultPbReqTask.taskDescType = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskDescType {
  resultPbReqTask.hasTaskDescType = NO;
  resultPbReqTask.taskDescType = 0;
  return self;
}
- (BOOL) hasPlaytime {
  return resultPbReqTask.hasPlaytime;
}
- (SInt32) playtime {
  return resultPbReqTask.playtime;
}
- (PbReqTaskBuilder*) setPlaytime:(SInt32) value {
  resultPbReqTask.hasPlaytime = YES;
  resultPbReqTask.playtime = value;
  return self;
}
- (PbReqTaskBuilder*) clearPlaytime {
  resultPbReqTask.hasPlaytime = NO;
  resultPbReqTask.playtime = 0;
  return self;
}
- (BOOL) hasSponsor {
  return resultPbReqTask.hasSponsor;
}
- (PbReqUser*) sponsor {
  return resultPbReqTask.sponsor;
}
- (PbReqTaskBuilder*) setSponsor:(PbReqUser*) value {
  resultPbReqTask.hasSponsor = YES;
  resultPbReqTask.sponsor = value;
  return self;
}
- (PbReqTaskBuilder*) setSponsorBuilder:(PbReqUserBuilder*) builderForValue {
  return [self setSponsor:[builderForValue build]];
}
- (PbReqTaskBuilder*) mergeSponsor:(PbReqUser*) value {
  if (resultPbReqTask.hasSponsor &&
      resultPbReqTask.sponsor != [PbReqUser defaultInstance]) {
    resultPbReqTask.sponsor =
      [[[PbReqUser builderWithPrototype:resultPbReqTask.sponsor] mergeFrom:value] buildPartial];
  } else {
    resultPbReqTask.sponsor = value;
  }
  resultPbReqTask.hasSponsor = YES;
  return self;
}
- (PbReqTaskBuilder*) clearSponsor {
  resultPbReqTask.hasSponsor = NO;
  resultPbReqTask.sponsor = [PbReqUser defaultInstance];
  return self;
}
- (NSMutableArray *)members {
  return resultPbReqTask.membersArray;
}
- (PbReqUser*)membersAtIndex:(NSUInteger)index {
  return [resultPbReqTask membersAtIndex:index];
}
- (PbReqTaskBuilder *)addMembers:(PbReqUser*)value {
  if (resultPbReqTask.membersArray == nil) {
    resultPbReqTask.membersArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqTask.membersArray addObject:value];
  return self;
}
- (PbReqTaskBuilder *)setMembersArray:(NSArray *)array {
  resultPbReqTask.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqTaskBuilder *)clearMembers {
  resultPbReqTask.membersArray = nil;
  return self;
}
- (BOOL) hasPosition {
  return resultPbReqTask.hasPosition;
}
- (NSString*) position {
  return resultPbReqTask.position;
}
- (PbReqTaskBuilder*) setPosition:(NSString*) value {
  resultPbReqTask.hasPosition = YES;
  resultPbReqTask.position = value;
  return self;
}
- (PbReqTaskBuilder*) clearPosition {
  resultPbReqTask.hasPosition = NO;
  resultPbReqTask.position = @"";
  return self;
}
- (BOOL) hasTaskStatus {
  return resultPbReqTask.hasTaskStatus;
}
- (SInt32) taskStatus {
  return resultPbReqTask.taskStatus;
}
- (PbReqTaskBuilder*) setTaskStatus:(SInt32) value {
  resultPbReqTask.hasTaskStatus = YES;
  resultPbReqTask.taskStatus = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskStatus {
  resultPbReqTask.hasTaskStatus = NO;
  resultPbReqTask.taskStatus = 0;
  return self;
}
- (NSMutableArray *)attachList {
  return resultPbReqTask.attachListArray;
}
- (PbReqBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [resultPbReqTask attachListAtIndex:index];
}
- (PbReqTaskBuilder *)addAttachList:(PbReqBaseFile*)value {
  if (resultPbReqTask.attachListArray == nil) {
    resultPbReqTask.attachListArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqTask.attachListArray addObject:value];
  return self;
}
- (PbReqTaskBuilder *)setAttachListArray:(NSArray *)array {
  resultPbReqTask.attachListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqTaskBuilder *)clearAttachList {
  resultPbReqTask.attachListArray = nil;
  return self;
}
- (NSMutableArray *)reportList {
  return resultPbReqTask.reportListArray;
}
- (PbReqTaskReport*)reportListAtIndex:(NSUInteger)index {
  return [resultPbReqTask reportListAtIndex:index];
}
- (PbReqTaskBuilder *)addReportList:(PbReqTaskReport*)value {
  if (resultPbReqTask.reportListArray == nil) {
    resultPbReqTask.reportListArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqTask.reportListArray addObject:value];
  return self;
}
- (PbReqTaskBuilder *)setReportListArray:(NSArray *)array {
  resultPbReqTask.reportListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqTaskBuilder *)clearReportList {
  resultPbReqTask.reportListArray = nil;
  return self;
}
- (BOOL) hasTaskBegin {
  return resultPbReqTask.hasTaskBegin;
}
- (SInt32) taskBegin {
  return resultPbReqTask.taskBegin;
}
- (PbReqTaskBuilder*) setTaskBegin:(SInt32) value {
  resultPbReqTask.hasTaskBegin = YES;
  resultPbReqTask.taskBegin = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskBegin {
  resultPbReqTask.hasTaskBegin = NO;
  resultPbReqTask.taskBegin = 0;
  return self;
}
- (BOOL) hasTaskEnd {
  return resultPbReqTask.hasTaskEnd;
}
- (SInt32) taskEnd {
  return resultPbReqTask.taskEnd;
}
- (PbReqTaskBuilder*) setTaskEnd:(SInt32) value {
  resultPbReqTask.hasTaskEnd = YES;
  resultPbReqTask.taskEnd = value;
  return self;
}
- (PbReqTaskBuilder*) clearTaskEnd {
  resultPbReqTask.hasTaskEnd = NO;
  resultPbReqTask.taskEnd = 0;
  return self;
}
@end

@interface PbReqReport ()
@property (strong) NSString* phoneInfo;
@property (strong) NSString* os;
@property (strong) NSString* sp;
@property (strong) NSString* network;
@end

@implementation PbReqReport

- (BOOL) hasPhoneInfo {
  return !!hasPhoneInfo_;
}
- (void) setHasPhoneInfo:(BOOL) _value_ {
  hasPhoneInfo_ = !!_value_;
}
@synthesize phoneInfo;
- (BOOL) hasOs {
  return !!hasOs_;
}
- (void) setHasOs:(BOOL) _value_ {
  hasOs_ = !!_value_;
}
@synthesize os;
- (BOOL) hasSp {
  return !!hasSp_;
}
- (void) setHasSp:(BOOL) _value_ {
  hasSp_ = !!_value_;
}
@synthesize sp;
- (BOOL) hasNetwork {
  return !!hasNetwork_;
}
- (void) setHasNetwork:(BOOL) _value_ {
  hasNetwork_ = !!_value_;
}
@synthesize network;
- (instancetype) init {
  if ((self = [super init])) {
    self.phoneInfo = @"";
    self.os = @"";
    self.sp = @"";
    self.network = @"";
  }
  return self;
}
static PbReqReport* defaultPbReqReportInstance = nil;
+ (void) initialize {
  if (self == [PbReqReport class]) {
    defaultPbReqReportInstance = [[PbReqReport alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqReportInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqReportInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneInfo) {
    [output writeString:1 value:self.phoneInfo];
  }
  if (self.hasOs) {
    [output writeString:2 value:self.os];
  }
  if (self.hasSp) {
    [output writeString:3 value:self.sp];
  }
  if (self.hasNetwork) {
    [output writeString:4 value:self.network];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPhoneInfo) {
    size_ += computeStringSize(1, self.phoneInfo);
  }
  if (self.hasOs) {
    size_ += computeStringSize(2, self.os);
  }
  if (self.hasSp) {
    size_ += computeStringSize(3, self.sp);
  }
  if (self.hasNetwork) {
    size_ += computeStringSize(4, self.network);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqReport*) parseFromData:(NSData*) data {
  return (PbReqReport*)[[[PbReqReport builder] mergeFromData:data] build];
}
+ (PbReqReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqReport*)[[[PbReqReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqReport*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqReport*)[[[PbReqReport builder] mergeFromInputStream:input] build];
}
+ (PbReqReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqReport*)[[[PbReqReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqReport*)[[[PbReqReport builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqReport*)[[[PbReqReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqReportBuilder*) builder {
  return [[PbReqReportBuilder alloc] init];
}
+ (PbReqReportBuilder*) builderWithPrototype:(PbReqReport*) prototype {
  return [[PbReqReport builder] mergeFrom:prototype];
}
- (PbReqReportBuilder*) builder {
  return [PbReqReport builder];
}
- (PbReqReportBuilder*) toBuilder {
  return [PbReqReport builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPhoneInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneInfo", self.phoneInfo];
  }
  if (self.hasOs) {
    [output appendFormat:@"%@%@: %@\n", indent, @"os", self.os];
  }
  if (self.hasSp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sp", self.sp];
  }
  if (self.hasNetwork) {
    [output appendFormat:@"%@%@: %@\n", indent, @"network", self.network];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPhoneInfo) {
    [dictionary setObject: self.phoneInfo forKey: @"phoneInfo"];
  }
  if (self.hasOs) {
    [dictionary setObject: self.os forKey: @"os"];
  }
  if (self.hasSp) {
    [dictionary setObject: self.sp forKey: @"sp"];
  }
  if (self.hasNetwork) {
    [dictionary setObject: self.network forKey: @"network"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqReport class]]) {
    return NO;
  }
  PbReqReport *otherMessage = other;
  return
      self.hasPhoneInfo == otherMessage.hasPhoneInfo &&
      (!self.hasPhoneInfo || [self.phoneInfo isEqual:otherMessage.phoneInfo]) &&
      self.hasOs == otherMessage.hasOs &&
      (!self.hasOs || [self.os isEqual:otherMessage.os]) &&
      self.hasSp == otherMessage.hasSp &&
      (!self.hasSp || [self.sp isEqual:otherMessage.sp]) &&
      self.hasNetwork == otherMessage.hasNetwork &&
      (!self.hasNetwork || [self.network isEqual:otherMessage.network]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPhoneInfo) {
    hashCode = hashCode * 31 + [self.phoneInfo hash];
  }
  if (self.hasOs) {
    hashCode = hashCode * 31 + [self.os hash];
  }
  if (self.hasSp) {
    hashCode = hashCode * 31 + [self.sp hash];
  }
  if (self.hasNetwork) {
    hashCode = hashCode * 31 + [self.network hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqReportBuilder()
@property (strong) PbReqReport* resultPbReqReport;
@end

@implementation PbReqReportBuilder
@synthesize resultPbReqReport;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqReport = [[PbReqReport alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqReport;
}
- (PbReqReportBuilder*) clear {
  self.resultPbReqReport = [[PbReqReport alloc] init];
  return self;
}
- (PbReqReportBuilder*) clone {
  return [PbReqReport builderWithPrototype:resultPbReqReport];
}
- (PbReqReport*) defaultInstance {
  return [PbReqReport defaultInstance];
}
- (PbReqReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqReport*) buildPartial {
  PbReqReport* returnMe = resultPbReqReport;
  self.resultPbReqReport = nil;
  return returnMe;
}
- (PbReqReportBuilder*) mergeFrom:(PbReqReport*) other {
  if (other == [PbReqReport defaultInstance]) {
    return self;
  }
  if (other.hasPhoneInfo) {
    [self setPhoneInfo:other.phoneInfo];
  }
  if (other.hasOs) {
    [self setOs:other.os];
  }
  if (other.hasSp) {
    [self setSp:other.sp];
  }
  if (other.hasNetwork) {
    [self setNetwork:other.network];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneInfo:[input readString]];
        break;
      }
      case 18: {
        [self setOs:[input readString]];
        break;
      }
      case 26: {
        [self setSp:[input readString]];
        break;
      }
      case 34: {
        [self setNetwork:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPhoneInfo {
  return resultPbReqReport.hasPhoneInfo;
}
- (NSString*) phoneInfo {
  return resultPbReqReport.phoneInfo;
}
- (PbReqReportBuilder*) setPhoneInfo:(NSString*) value {
  resultPbReqReport.hasPhoneInfo = YES;
  resultPbReqReport.phoneInfo = value;
  return self;
}
- (PbReqReportBuilder*) clearPhoneInfo {
  resultPbReqReport.hasPhoneInfo = NO;
  resultPbReqReport.phoneInfo = @"";
  return self;
}
- (BOOL) hasOs {
  return resultPbReqReport.hasOs;
}
- (NSString*) os {
  return resultPbReqReport.os;
}
- (PbReqReportBuilder*) setOs:(NSString*) value {
  resultPbReqReport.hasOs = YES;
  resultPbReqReport.os = value;
  return self;
}
- (PbReqReportBuilder*) clearOs {
  resultPbReqReport.hasOs = NO;
  resultPbReqReport.os = @"";
  return self;
}
- (BOOL) hasSp {
  return resultPbReqReport.hasSp;
}
- (NSString*) sp {
  return resultPbReqReport.sp;
}
- (PbReqReportBuilder*) setSp:(NSString*) value {
  resultPbReqReport.hasSp = YES;
  resultPbReqReport.sp = value;
  return self;
}
- (PbReqReportBuilder*) clearSp {
  resultPbReqReport.hasSp = NO;
  resultPbReqReport.sp = @"";
  return self;
}
- (BOOL) hasNetwork {
  return resultPbReqReport.hasNetwork;
}
- (NSString*) network {
  return resultPbReqReport.network;
}
- (PbReqReportBuilder*) setNetwork:(NSString*) value {
  resultPbReqReport.hasNetwork = YES;
  resultPbReqReport.network = value;
  return self;
}
- (PbReqReportBuilder*) clearNetwork {
  resultPbReqReport.hasNetwork = NO;
  resultPbReqReport.network = @"";
  return self;
}
@end

@interface PbReqUserDataReq ()
@property SInt32 flag;
@property (strong) NSMutableArray * sargsArray;
@property SInt32 pageNo;
@property (strong) NSString* pageSize;
@end

@implementation PbReqUserDataReq

- (BOOL) hasFlag {
  return !!hasFlag_;
}
- (void) setHasFlag:(BOOL) _value_ {
  hasFlag_ = !!_value_;
}
@synthesize flag;
@synthesize sargsArray;
@dynamic sargs;
- (BOOL) hasPageNo {
  return !!hasPageNo_;
}
- (void) setHasPageNo:(BOOL) _value_ {
  hasPageNo_ = !!_value_;
}
@synthesize pageNo;
- (BOOL) hasPageSize {
  return !!hasPageSize_;
}
- (void) setHasPageSize:(BOOL) _value_ {
  hasPageSize_ = !!_value_;
}
@synthesize pageSize;
- (instancetype) init {
  if ((self = [super init])) {
    self.flag = 0;
    self.pageNo = 0;
    self.pageSize = @"";
  }
  return self;
}
static PbReqUserDataReq* defaultPbReqUserDataReqInstance = nil;
+ (void) initialize {
  if (self == [PbReqUserDataReq class]) {
    defaultPbReqUserDataReqInstance = [[PbReqUserDataReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqUserDataReqInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqUserDataReqInstance;
}
- (NSArray *)sargs {
  return sargsArray;
}
- (NSString*)sargsAtIndex:(NSUInteger)index {
  return [sargsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFlag) {
    [output writeInt32:1 value:self.flag];
  }
  [self.sargsArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  if (self.hasPageNo) {
    [output writeInt32:3 value:self.pageNo];
  }
  if (self.hasPageSize) {
    [output writeString:4 value:self.pageSize];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFlag) {
    size_ += computeInt32Size(1, self.flag);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.sargsArray.count;
    [self.sargsArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasPageNo) {
    size_ += computeInt32Size(3, self.pageNo);
  }
  if (self.hasPageSize) {
    size_ += computeStringSize(4, self.pageSize);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqUserDataReq*) parseFromData:(NSData*) data {
  return (PbReqUserDataReq*)[[[PbReqUserDataReq builder] mergeFromData:data] build];
}
+ (PbReqUserDataReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqUserDataReq*)[[[PbReqUserDataReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqUserDataReq*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqUserDataReq*)[[[PbReqUserDataReq builder] mergeFromInputStream:input] build];
}
+ (PbReqUserDataReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqUserDataReq*)[[[PbReqUserDataReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqUserDataReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqUserDataReq*)[[[PbReqUserDataReq builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqUserDataReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqUserDataReq*)[[[PbReqUserDataReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqUserDataReqBuilder*) builder {
  return [[PbReqUserDataReqBuilder alloc] init];
}
+ (PbReqUserDataReqBuilder*) builderWithPrototype:(PbReqUserDataReq*) prototype {
  return [[PbReqUserDataReq builder] mergeFrom:prototype];
}
- (PbReqUserDataReqBuilder*) builder {
  return [PbReqUserDataReq builder];
}
- (PbReqUserDataReqBuilder*) toBuilder {
  return [PbReqUserDataReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFlag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"flag", [NSNumber numberWithInteger:self.flag]];
  }
  [self.sargsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sargs", obj];
  }];
  if (self.hasPageNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageNo", [NSNumber numberWithInteger:self.pageNo]];
  }
  if (self.hasPageSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageSize", self.pageSize];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFlag) {
    [dictionary setObject: [NSNumber numberWithInteger:self.flag] forKey: @"flag"];
  }
  [dictionary setObject:self.sargs forKey: @"sargs"];
  if (self.hasPageNo) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageNo] forKey: @"pageNo"];
  }
  if (self.hasPageSize) {
    [dictionary setObject: self.pageSize forKey: @"pageSize"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqUserDataReq class]]) {
    return NO;
  }
  PbReqUserDataReq *otherMessage = other;
  return
      self.hasFlag == otherMessage.hasFlag &&
      (!self.hasFlag || self.flag == otherMessage.flag) &&
      [self.sargsArray isEqualToArray:otherMessage.sargsArray] &&
      self.hasPageNo == otherMessage.hasPageNo &&
      (!self.hasPageNo || self.pageNo == otherMessage.pageNo) &&
      self.hasPageSize == otherMessage.hasPageSize &&
      (!self.hasPageSize || [self.pageSize isEqual:otherMessage.pageSize]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFlag) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.flag] hash];
  }
  [self.sargsArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPageNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageNo] hash];
  }
  if (self.hasPageSize) {
    hashCode = hashCode * 31 + [self.pageSize hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqUserDataReqBuilder()
@property (strong) PbReqUserDataReq* resultPbReqUserDataReq;
@end

@implementation PbReqUserDataReqBuilder
@synthesize resultPbReqUserDataReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqUserDataReq = [[PbReqUserDataReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqUserDataReq;
}
- (PbReqUserDataReqBuilder*) clear {
  self.resultPbReqUserDataReq = [[PbReqUserDataReq alloc] init];
  return self;
}
- (PbReqUserDataReqBuilder*) clone {
  return [PbReqUserDataReq builderWithPrototype:resultPbReqUserDataReq];
}
- (PbReqUserDataReq*) defaultInstance {
  return [PbReqUserDataReq defaultInstance];
}
- (PbReqUserDataReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqUserDataReq*) buildPartial {
  PbReqUserDataReq* returnMe = resultPbReqUserDataReq;
  self.resultPbReqUserDataReq = nil;
  return returnMe;
}
- (PbReqUserDataReqBuilder*) mergeFrom:(PbReqUserDataReq*) other {
  if (other == [PbReqUserDataReq defaultInstance]) {
    return self;
  }
  if (other.hasFlag) {
    [self setFlag:other.flag];
  }
  if (other.sargsArray.count > 0) {
    if (resultPbReqUserDataReq.sargsArray == nil) {
      resultPbReqUserDataReq.sargsArray = [[NSMutableArray alloc] initWithArray:other.sargsArray];
    } else {
      [resultPbReqUserDataReq.sargsArray addObjectsFromArray:other.sargsArray];
    }
  }
  if (other.hasPageNo) {
    [self setPageNo:other.pageNo];
  }
  if (other.hasPageSize) {
    [self setPageSize:other.pageSize];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqUserDataReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqUserDataReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFlag:[input readInt32]];
        break;
      }
      case 18: {
        [self addSargs:[input readString]];
        break;
      }
      case 24: {
        [self setPageNo:[input readInt32]];
        break;
      }
      case 34: {
        [self setPageSize:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFlag {
  return resultPbReqUserDataReq.hasFlag;
}
- (SInt32) flag {
  return resultPbReqUserDataReq.flag;
}
- (PbReqUserDataReqBuilder*) setFlag:(SInt32) value {
  resultPbReqUserDataReq.hasFlag = YES;
  resultPbReqUserDataReq.flag = value;
  return self;
}
- (PbReqUserDataReqBuilder*) clearFlag {
  resultPbReqUserDataReq.hasFlag = NO;
  resultPbReqUserDataReq.flag = 0;
  return self;
}
- (NSMutableArray *)sargs {
  return resultPbReqUserDataReq.sargsArray;
}
- (NSString*)sargsAtIndex:(NSUInteger)index {
  return [resultPbReqUserDataReq sargsAtIndex:index];
}
- (PbReqUserDataReqBuilder *)addSargs:(NSString*)value {
  if (resultPbReqUserDataReq.sargsArray == nil) {
    resultPbReqUserDataReq.sargsArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqUserDataReq.sargsArray addObject:value];
  return self;
}
- (PbReqUserDataReqBuilder *)setSargsArray:(NSArray *)array {
  resultPbReqUserDataReq.sargsArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PbReqUserDataReqBuilder *)clearSargs {
  resultPbReqUserDataReq.sargsArray = nil;
  return self;
}
- (BOOL) hasPageNo {
  return resultPbReqUserDataReq.hasPageNo;
}
- (SInt32) pageNo {
  return resultPbReqUserDataReq.pageNo;
}
- (PbReqUserDataReqBuilder*) setPageNo:(SInt32) value {
  resultPbReqUserDataReq.hasPageNo = YES;
  resultPbReqUserDataReq.pageNo = value;
  return self;
}
- (PbReqUserDataReqBuilder*) clearPageNo {
  resultPbReqUserDataReq.hasPageNo = NO;
  resultPbReqUserDataReq.pageNo = 0;
  return self;
}
- (BOOL) hasPageSize {
  return resultPbReqUserDataReq.hasPageSize;
}
- (NSString*) pageSize {
  return resultPbReqUserDataReq.pageSize;
}
- (PbReqUserDataReqBuilder*) setPageSize:(NSString*) value {
  resultPbReqUserDataReq.hasPageSize = YES;
  resultPbReqUserDataReq.pageSize = value;
  return self;
}
- (PbReqUserDataReqBuilder*) clearPageSize {
  resultPbReqUserDataReq.hasPageSize = NO;
  resultPbReqUserDataReq.pageSize = @"";
  return self;
}
@end

@interface PbReqMilestore ()
@property SInt32 time;
@property (strong) NSString* event;
@end

@implementation PbReqMilestore

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasEvent {
  return !!hasEvent_;
}
- (void) setHasEvent:(BOOL) _value_ {
  hasEvent_ = !!_value_;
}
@synthesize event;
- (instancetype) init {
  if ((self = [super init])) {
    self.time = 0;
    self.event = @"";
  }
  return self;
}
static PbReqMilestore* defaultPbReqMilestoreInstance = nil;
+ (void) initialize {
  if (self == [PbReqMilestore class]) {
    defaultPbReqMilestoreInstance = [[PbReqMilestore alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqMilestoreInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqMilestoreInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeInt32:1 value:self.time];
  }
  if (self.hasEvent) {
    [output writeString:2 value:self.event];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTime) {
    size_ += computeInt32Size(1, self.time);
  }
  if (self.hasEvent) {
    size_ += computeStringSize(2, self.event);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqMilestore*) parseFromData:(NSData*) data {
  return (PbReqMilestore*)[[[PbReqMilestore builder] mergeFromData:data] build];
}
+ (PbReqMilestore*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMilestore*)[[[PbReqMilestore builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqMilestore*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqMilestore*)[[[PbReqMilestore builder] mergeFromInputStream:input] build];
}
+ (PbReqMilestore*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMilestore*)[[[PbReqMilestore builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqMilestore*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqMilestore*)[[[PbReqMilestore builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqMilestore*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqMilestore*)[[[PbReqMilestore builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqMilestoreBuilder*) builder {
  return [[PbReqMilestoreBuilder alloc] init];
}
+ (PbReqMilestoreBuilder*) builderWithPrototype:(PbReqMilestore*) prototype {
  return [[PbReqMilestore builder] mergeFrom:prototype];
}
- (PbReqMilestoreBuilder*) builder {
  return [PbReqMilestore builder];
}
- (PbReqMilestoreBuilder*) toBuilder {
  return [PbReqMilestore builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasEvent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"event", self.event];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasEvent) {
    [dictionary setObject: self.event forKey: @"event"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqMilestore class]]) {
    return NO;
  }
  PbReqMilestore *otherMessage = other;
  return
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasEvent == otherMessage.hasEvent &&
      (!self.hasEvent || [self.event isEqual:otherMessage.event]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasEvent) {
    hashCode = hashCode * 31 + [self.event hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqMilestoreBuilder()
@property (strong) PbReqMilestore* resultPbReqMilestore;
@end

@implementation PbReqMilestoreBuilder
@synthesize resultPbReqMilestore;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqMilestore = [[PbReqMilestore alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqMilestore;
}
- (PbReqMilestoreBuilder*) clear {
  self.resultPbReqMilestore = [[PbReqMilestore alloc] init];
  return self;
}
- (PbReqMilestoreBuilder*) clone {
  return [PbReqMilestore builderWithPrototype:resultPbReqMilestore];
}
- (PbReqMilestore*) defaultInstance {
  return [PbReqMilestore defaultInstance];
}
- (PbReqMilestore*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqMilestore*) buildPartial {
  PbReqMilestore* returnMe = resultPbReqMilestore;
  self.resultPbReqMilestore = nil;
  return returnMe;
}
- (PbReqMilestoreBuilder*) mergeFrom:(PbReqMilestore*) other {
  if (other == [PbReqMilestore defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasEvent) {
    [self setEvent:other.event];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqMilestoreBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqMilestoreBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTime:[input readInt32]];
        break;
      }
      case 18: {
        [self setEvent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return resultPbReqMilestore.hasTime;
}
- (SInt32) time {
  return resultPbReqMilestore.time;
}
- (PbReqMilestoreBuilder*) setTime:(SInt32) value {
  resultPbReqMilestore.hasTime = YES;
  resultPbReqMilestore.time = value;
  return self;
}
- (PbReqMilestoreBuilder*) clearTime {
  resultPbReqMilestore.hasTime = NO;
  resultPbReqMilestore.time = 0;
  return self;
}
- (BOOL) hasEvent {
  return resultPbReqMilestore.hasEvent;
}
- (NSString*) event {
  return resultPbReqMilestore.event;
}
- (PbReqMilestoreBuilder*) setEvent:(NSString*) value {
  resultPbReqMilestore.hasEvent = YES;
  resultPbReqMilestore.event = value;
  return self;
}
- (PbReqMilestoreBuilder*) clearEvent {
  resultPbReqMilestore.hasEvent = NO;
  resultPbReqMilestore.event = @"";
  return self;
}
@end

@interface PbReqDepartment ()
@property (strong) NSString* id;
@property (strong) NSString* name;
@end

@implementation PbReqDepartment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
  }
  return self;
}
static PbReqDepartment* defaultPbReqDepartmentInstance = nil;
+ (void) initialize {
  if (self == [PbReqDepartment class]) {
    defaultPbReqDepartmentInstance = [[PbReqDepartment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqDepartmentInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqDepartmentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqDepartment*) parseFromData:(NSData*) data {
  return (PbReqDepartment*)[[[PbReqDepartment builder] mergeFromData:data] build];
}
+ (PbReqDepartment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqDepartment*)[[[PbReqDepartment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqDepartment*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqDepartment*)[[[PbReqDepartment builder] mergeFromInputStream:input] build];
}
+ (PbReqDepartment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqDepartment*)[[[PbReqDepartment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqDepartment*)[[[PbReqDepartment builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqDepartment*)[[[PbReqDepartment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqDepartmentBuilder*) builder {
  return [[PbReqDepartmentBuilder alloc] init];
}
+ (PbReqDepartmentBuilder*) builderWithPrototype:(PbReqDepartment*) prototype {
  return [[PbReqDepartment builder] mergeFrom:prototype];
}
- (PbReqDepartmentBuilder*) builder {
  return [PbReqDepartment builder];
}
- (PbReqDepartmentBuilder*) toBuilder {
  return [PbReqDepartment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: self.id forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqDepartment class]]) {
    return NO;
  }
  PbReqDepartment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqDepartmentBuilder()
@property (strong) PbReqDepartment* resultPbReqDepartment;
@end

@implementation PbReqDepartmentBuilder
@synthesize resultPbReqDepartment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqDepartment = [[PbReqDepartment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqDepartment;
}
- (PbReqDepartmentBuilder*) clear {
  self.resultPbReqDepartment = [[PbReqDepartment alloc] init];
  return self;
}
- (PbReqDepartmentBuilder*) clone {
  return [PbReqDepartment builderWithPrototype:resultPbReqDepartment];
}
- (PbReqDepartment*) defaultInstance {
  return [PbReqDepartment defaultInstance];
}
- (PbReqDepartment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqDepartment*) buildPartial {
  PbReqDepartment* returnMe = resultPbReqDepartment;
  self.resultPbReqDepartment = nil;
  return returnMe;
}
- (PbReqDepartmentBuilder*) mergeFrom:(PbReqDepartment*) other {
  if (other == [PbReqDepartment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultPbReqDepartment.hasId;
}
- (NSString*) id {
  return resultPbReqDepartment.id;
}
- (PbReqDepartmentBuilder*) setId:(NSString*) value {
  resultPbReqDepartment.hasId = YES;
  resultPbReqDepartment.id = value;
  return self;
}
- (PbReqDepartmentBuilder*) clearId {
  resultPbReqDepartment.hasId = NO;
  resultPbReqDepartment.id = @"";
  return self;
}
- (BOOL) hasName {
  return resultPbReqDepartment.hasName;
}
- (NSString*) name {
  return resultPbReqDepartment.name;
}
- (PbReqDepartmentBuilder*) setName:(NSString*) value {
  resultPbReqDepartment.hasName = YES;
  resultPbReqDepartment.name = value;
  return self;
}
- (PbReqDepartmentBuilder*) clearName {
  resultPbReqDepartment.hasName = NO;
  resultPbReqDepartment.name = @"";
  return self;
}
@end

@interface PbReqReq ()
@property SInt32 cmd;
@property (strong) PBAppendableArray * iargsArray;
@property (strong) NSMutableArray * sargsArray;
@property (strong) NSMutableArray * attchArray;
@property (strong) PbReqProject* project;
@property (strong) NSMutableArray * prjMemberArray;
@property (strong) PbReqTask* task;
@property (strong) PbReqReport* report;
@property (strong) PbReqUserDataReq* userDataReq;
@property (strong) PbReqMsgBook* msgBook;
@property (strong) PbReqMsgHotspot* msgHotspot;
@property (strong) NSMutableArray * milestoreArray;
@property (strong) NSMutableArray * departmentArray;
@property (strong) PbReqDepartment* turnDepartment;
@end

@implementation PbReqReq

- (BOOL) hasCmd {
  return !!hasCmd_;
}
- (void) setHasCmd:(BOOL) _value_ {
  hasCmd_ = !!_value_;
}
@synthesize cmd;
@synthesize iargsArray;
@dynamic iargs;
@synthesize sargsArray;
@dynamic sargs;
@synthesize attchArray;
@dynamic attch;
- (BOOL) hasProject {
  return !!hasProject_;
}
- (void) setHasProject:(BOOL) _value_ {
  hasProject_ = !!_value_;
}
@synthesize project;
@synthesize prjMemberArray;
@dynamic prjMember;
- (BOOL) hasTask {
  return !!hasTask_;
}
- (void) setHasTask:(BOOL) _value_ {
  hasTask_ = !!_value_;
}
@synthesize task;
- (BOOL) hasReport {
  return !!hasReport_;
}
- (void) setHasReport:(BOOL) _value_ {
  hasReport_ = !!_value_;
}
@synthesize report;
- (BOOL) hasUserDataReq {
  return !!hasUserDataReq_;
}
- (void) setHasUserDataReq:(BOOL) _value_ {
  hasUserDataReq_ = !!_value_;
}
@synthesize userDataReq;
- (BOOL) hasMsgBook {
  return !!hasMsgBook_;
}
- (void) setHasMsgBook:(BOOL) _value_ {
  hasMsgBook_ = !!_value_;
}
@synthesize msgBook;
- (BOOL) hasMsgHotspot {
  return !!hasMsgHotspot_;
}
- (void) setHasMsgHotspot:(BOOL) _value_ {
  hasMsgHotspot_ = !!_value_;
}
@synthesize msgHotspot;
@synthesize milestoreArray;
@dynamic milestore;
@synthesize departmentArray;
@dynamic department;
- (BOOL) hasTurnDepartment {
  return !!hasTurnDepartment_;
}
- (void) setHasTurnDepartment:(BOOL) _value_ {
  hasTurnDepartment_ = !!_value_;
}
@synthesize turnDepartment;
- (instancetype) init {
  if ((self = [super init])) {
    self.cmd = 0;
    self.project = [PbReqProject defaultInstance];
    self.task = [PbReqTask defaultInstance];
    self.report = [PbReqReport defaultInstance];
    self.userDataReq = [PbReqUserDataReq defaultInstance];
    self.msgBook = [PbReqMsgBook defaultInstance];
    self.msgHotspot = [PbReqMsgHotspot defaultInstance];
    self.turnDepartment = [PbReqDepartment defaultInstance];
  }
  return self;
}
static PbReqReq* defaultPbReqReqInstance = nil;
+ (void) initialize {
  if (self == [PbReqReq class]) {
    defaultPbReqReqInstance = [[PbReqReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReqReqInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReqReqInstance;
}
- (PBArray *)iargs {
  return iargsArray;
}
- (SInt32)iargsAtIndex:(NSUInteger)index {
  return [iargsArray int32AtIndex:index];
}
- (NSArray *)sargs {
  return sargsArray;
}
- (NSString*)sargsAtIndex:(NSUInteger)index {
  return [sargsArray objectAtIndex:index];
}
- (NSArray *)attch {
  return attchArray;
}
- (PbReqAttach*)attchAtIndex:(NSUInteger)index {
  return [attchArray objectAtIndex:index];
}
- (NSArray *)prjMember {
  return prjMemberArray;
}
- (PbReqUser*)prjMemberAtIndex:(NSUInteger)index {
  return [prjMemberArray objectAtIndex:index];
}
- (NSArray *)milestore {
  return milestoreArray;
}
- (PbReqMilestore*)milestoreAtIndex:(NSUInteger)index {
  return [milestoreArray objectAtIndex:index];
}
- (NSArray *)department {
  return departmentArray;
}
- (PbReqDepartment*)departmentAtIndex:(NSUInteger)index {
  return [departmentArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmd) {
    [output writeInt32:1 value:self.cmd];
  }
  const NSUInteger iargsArrayCount = self.iargsArray.count;
  if (iargsArrayCount > 0) {
    const SInt32 *values = (const SInt32 *)self.iargsArray.data;
    for (NSUInteger i = 0; i < iargsArrayCount; ++i) {
      [output writeInt32:2 value:values[i]];
    }
  }
  [self.sargsArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:3 value:element];
  }];
  [self.attchArray enumerateObjectsUsingBlock:^(PbReqAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasProject) {
    [output writeMessage:5 value:self.project];
  }
  [self.prjMemberArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  if (self.hasTask) {
    [output writeMessage:7 value:self.task];
  }
  if (self.hasReport) {
    [output writeMessage:8 value:self.report];
  }
  if (self.hasUserDataReq) {
    [output writeMessage:9 value:self.userDataReq];
  }
  if (self.hasMsgBook) {
    [output writeMessage:10 value:self.msgBook];
  }
  if (self.hasMsgHotspot) {
    [output writeMessage:11 value:self.msgHotspot];
  }
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbReqMilestore *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:12 value:element];
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbReqDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:13 value:element];
  }];
  if (self.hasTurnDepartment) {
    [output writeMessage:14 value:self.turnDepartment];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmd) {
    size_ += computeInt32Size(1, self.cmd);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.iargsArray.count;
    const SInt32 *values = (const SInt32 *)self.iargsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.sargsArray.count;
    [self.sargsArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  [self.attchArray enumerateObjectsUsingBlock:^(PbReqAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasProject) {
    size_ += computeMessageSize(5, self.project);
  }
  [self.prjMemberArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  if (self.hasTask) {
    size_ += computeMessageSize(7, self.task);
  }
  if (self.hasReport) {
    size_ += computeMessageSize(8, self.report);
  }
  if (self.hasUserDataReq) {
    size_ += computeMessageSize(9, self.userDataReq);
  }
  if (self.hasMsgBook) {
    size_ += computeMessageSize(10, self.msgBook);
  }
  if (self.hasMsgHotspot) {
    size_ += computeMessageSize(11, self.msgHotspot);
  }
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbReqMilestore *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(12, element);
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbReqDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(13, element);
  }];
  if (self.hasTurnDepartment) {
    size_ += computeMessageSize(14, self.turnDepartment);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReqReq*) parseFromData:(NSData*) data {
  return (PbReqReq*)[[[PbReqReq builder] mergeFromData:data] build];
}
+ (PbReqReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqReq*)[[[PbReqReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReqReq*) parseFromInputStream:(NSInputStream*) input {
  return (PbReqReq*)[[[PbReqReq builder] mergeFromInputStream:input] build];
}
+ (PbReqReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqReq*)[[[PbReqReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReqReq*)[[[PbReqReq builder] mergeFromCodedInputStream:input] build];
}
+ (PbReqReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReqReq*)[[[PbReqReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReqReqBuilder*) builder {
  return [[PbReqReqBuilder alloc] init];
}
+ (PbReqReqBuilder*) builderWithPrototype:(PbReqReq*) prototype {
  return [[PbReqReq builder] mergeFrom:prototype];
}
- (PbReqReqBuilder*) builder {
  return [PbReqReq builder];
}
- (PbReqReqBuilder*) toBuilder {
  return [PbReqReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmd", [NSNumber numberWithInteger:self.cmd]];
  }
  [self.iargsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"iargs", obj];
  }];
  [self.sargsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sargs", obj];
  }];
  [self.attchArray enumerateObjectsUsingBlock:^(PbReqAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attch"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasProject) {
    [output appendFormat:@"%@%@ {\n", indent, @"project"];
    [self.project writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.prjMemberArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjMember"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTask) {
    [output appendFormat:@"%@%@ {\n", indent, @"task"];
    [self.task writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasReport) {
    [output appendFormat:@"%@%@ {\n", indent, @"report"];
    [self.report writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserDataReq) {
    [output appendFormat:@"%@%@ {\n", indent, @"userDataReq"];
    [self.userDataReq writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgBook) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgBook"];
    [self.msgBook writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgHotspot) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgHotspot"];
    [self.msgHotspot writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbReqMilestore *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"milestore"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbReqDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"department"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTurnDepartment) {
    [output appendFormat:@"%@%@ {\n", indent, @"turnDepartment"];
    [self.turnDepartment writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCmd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cmd] forKey: @"cmd"];
  }
  NSMutableArray * iargsArrayArray = [NSMutableArray new];
  NSUInteger iargsArrayCount=self.iargsArray.count;
  for(int i=0;i<iargsArrayCount;i++){
    [iargsArrayArray addObject: @([self.iargsArray int32AtIndex:i])];
  }
  [dictionary setObject: iargsArrayArray forKey: @"iargs"];
  [dictionary setObject:self.sargs forKey: @"sargs"];
  for (PbReqAttach* element in self.attchArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attch"];
  }
  if (self.hasProject) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.project storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"project"];
  }
  for (PbReqUser* element in self.prjMemberArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjMember"];
  }
  if (self.hasTask) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.task storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"task"];
  }
  if (self.hasReport) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.report storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"report"];
  }
  if (self.hasUserDataReq) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.userDataReq storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"userDataReq"];
  }
  if (self.hasMsgBook) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgBook storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgBook"];
  }
  if (self.hasMsgHotspot) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgHotspot storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgHotspot"];
  }
  for (PbReqMilestore* element in self.milestoreArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"milestore"];
  }
  for (PbReqDepartment* element in self.departmentArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"department"];
  }
  if (self.hasTurnDepartment) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.turnDepartment storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"turnDepartment"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReqReq class]]) {
    return NO;
  }
  PbReqReq *otherMessage = other;
  return
      self.hasCmd == otherMessage.hasCmd &&
      (!self.hasCmd || self.cmd == otherMessage.cmd) &&
      [self.iargsArray isEqualToArray:otherMessage.iargsArray] &&
      [self.sargsArray isEqualToArray:otherMessage.sargsArray] &&
      [self.attchArray isEqualToArray:otherMessage.attchArray] &&
      self.hasProject == otherMessage.hasProject &&
      (!self.hasProject || [self.project isEqual:otherMessage.project]) &&
      [self.prjMemberArray isEqualToArray:otherMessage.prjMemberArray] &&
      self.hasTask == otherMessage.hasTask &&
      (!self.hasTask || [self.task isEqual:otherMessage.task]) &&
      self.hasReport == otherMessage.hasReport &&
      (!self.hasReport || [self.report isEqual:otherMessage.report]) &&
      self.hasUserDataReq == otherMessage.hasUserDataReq &&
      (!self.hasUserDataReq || [self.userDataReq isEqual:otherMessage.userDataReq]) &&
      self.hasMsgBook == otherMessage.hasMsgBook &&
      (!self.hasMsgBook || [self.msgBook isEqual:otherMessage.msgBook]) &&
      self.hasMsgHotspot == otherMessage.hasMsgHotspot &&
      (!self.hasMsgHotspot || [self.msgHotspot isEqual:otherMessage.msgHotspot]) &&
      [self.milestoreArray isEqualToArray:otherMessage.milestoreArray] &&
      [self.departmentArray isEqualToArray:otherMessage.departmentArray] &&
      self.hasTurnDepartment == otherMessage.hasTurnDepartment &&
      (!self.hasTurnDepartment || [self.turnDepartment isEqual:otherMessage.turnDepartment]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmd] hash];
  }
  [self.iargsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.sargsArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.attchArray enumerateObjectsUsingBlock:^(PbReqAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasProject) {
    hashCode = hashCode * 31 + [self.project hash];
  }
  [self.prjMemberArray enumerateObjectsUsingBlock:^(PbReqUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTask) {
    hashCode = hashCode * 31 + [self.task hash];
  }
  if (self.hasReport) {
    hashCode = hashCode * 31 + [self.report hash];
  }
  if (self.hasUserDataReq) {
    hashCode = hashCode * 31 + [self.userDataReq hash];
  }
  if (self.hasMsgBook) {
    hashCode = hashCode * 31 + [self.msgBook hash];
  }
  if (self.hasMsgHotspot) {
    hashCode = hashCode * 31 + [self.msgHotspot hash];
  }
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbReqMilestore *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbReqDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTurnDepartment) {
    hashCode = hashCode * 31 + [self.turnDepartment hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReqReqBuilder()
@property (strong) PbReqReq* resultPbReqReq;
@end

@implementation PbReqReqBuilder
@synthesize resultPbReqReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReqReq = [[PbReqReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReqReq;
}
- (PbReqReqBuilder*) clear {
  self.resultPbReqReq = [[PbReqReq alloc] init];
  return self;
}
- (PbReqReqBuilder*) clone {
  return [PbReqReq builderWithPrototype:resultPbReqReq];
}
- (PbReqReq*) defaultInstance {
  return [PbReqReq defaultInstance];
}
- (PbReqReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReqReq*) buildPartial {
  PbReqReq* returnMe = resultPbReqReq;
  self.resultPbReqReq = nil;
  return returnMe;
}
- (PbReqReqBuilder*) mergeFrom:(PbReqReq*) other {
  if (other == [PbReqReq defaultInstance]) {
    return self;
  }
  if (other.hasCmd) {
    [self setCmd:other.cmd];
  }
  if (other.iargsArray.count > 0) {
    if (resultPbReqReq.iargsArray == nil) {
      resultPbReqReq.iargsArray = [other.iargsArray copy];
    } else {
      [resultPbReqReq.iargsArray appendArray:other.iargsArray];
    }
  }
  if (other.sargsArray.count > 0) {
    if (resultPbReqReq.sargsArray == nil) {
      resultPbReqReq.sargsArray = [[NSMutableArray alloc] initWithArray:other.sargsArray];
    } else {
      [resultPbReqReq.sargsArray addObjectsFromArray:other.sargsArray];
    }
  }
  if (other.attchArray.count > 0) {
    if (resultPbReqReq.attchArray == nil) {
      resultPbReqReq.attchArray = [[NSMutableArray alloc] initWithArray:other.attchArray];
    } else {
      [resultPbReqReq.attchArray addObjectsFromArray:other.attchArray];
    }
  }
  if (other.hasProject) {
    [self mergeProject:other.project];
  }
  if (other.prjMemberArray.count > 0) {
    if (resultPbReqReq.prjMemberArray == nil) {
      resultPbReqReq.prjMemberArray = [[NSMutableArray alloc] initWithArray:other.prjMemberArray];
    } else {
      [resultPbReqReq.prjMemberArray addObjectsFromArray:other.prjMemberArray];
    }
  }
  if (other.hasTask) {
    [self mergeTask:other.task];
  }
  if (other.hasReport) {
    [self mergeReport:other.report];
  }
  if (other.hasUserDataReq) {
    [self mergeUserDataReq:other.userDataReq];
  }
  if (other.hasMsgBook) {
    [self mergeMsgBook:other.msgBook];
  }
  if (other.hasMsgHotspot) {
    [self mergeMsgHotspot:other.msgHotspot];
  }
  if (other.milestoreArray.count > 0) {
    if (resultPbReqReq.milestoreArray == nil) {
      resultPbReqReq.milestoreArray = [[NSMutableArray alloc] initWithArray:other.milestoreArray];
    } else {
      [resultPbReqReq.milestoreArray addObjectsFromArray:other.milestoreArray];
    }
  }
  if (other.departmentArray.count > 0) {
    if (resultPbReqReq.departmentArray == nil) {
      resultPbReqReq.departmentArray = [[NSMutableArray alloc] initWithArray:other.departmentArray];
    } else {
      [resultPbReqReq.departmentArray addObjectsFromArray:other.departmentArray];
    }
  }
  if (other.hasTurnDepartment) {
    [self mergeTurnDepartment:other.turnDepartment];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReqReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReqReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmd:[input readInt32]];
        break;
      }
      case 16: {
        [self addIargs:[input readInt32]];
        break;
      }
      case 26: {
        [self addSargs:[input readString]];
        break;
      }
      case 34: {
        PbReqAttachBuilder* subBuilder = [PbReqAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttch:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        PbReqProjectBuilder* subBuilder = [PbReqProject builder];
        if (self.hasProject) {
          [subBuilder mergeFrom:self.project];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProject:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PbReqUserBuilder* subBuilder = [PbReqUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjMember:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PbReqTaskBuilder* subBuilder = [PbReqTask builder];
        if (self.hasTask) {
          [subBuilder mergeFrom:self.task];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTask:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PbReqReportBuilder* subBuilder = [PbReqReport builder];
        if (self.hasReport) {
          [subBuilder mergeFrom:self.report];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReport:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        PbReqUserDataReqBuilder* subBuilder = [PbReqUserDataReq builder];
        if (self.hasUserDataReq) {
          [subBuilder mergeFrom:self.userDataReq];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserDataReq:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        PbReqMsgBookBuilder* subBuilder = [PbReqMsgBook builder];
        if (self.hasMsgBook) {
          [subBuilder mergeFrom:self.msgBook];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgBook:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        PbReqMsgHotspotBuilder* subBuilder = [PbReqMsgHotspot builder];
        if (self.hasMsgHotspot) {
          [subBuilder mergeFrom:self.msgHotspot];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgHotspot:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        PbReqMilestoreBuilder* subBuilder = [PbReqMilestore builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMilestore:[subBuilder buildPartial]];
        break;
      }
      case 106: {
        PbReqDepartmentBuilder* subBuilder = [PbReqDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartment:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        PbReqDepartmentBuilder* subBuilder = [PbReqDepartment builder];
        if (self.hasTurnDepartment) {
          [subBuilder mergeFrom:self.turnDepartment];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTurnDepartment:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmd {
  return resultPbReqReq.hasCmd;
}
- (SInt32) cmd {
  return resultPbReqReq.cmd;
}
- (PbReqReqBuilder*) setCmd:(SInt32) value {
  resultPbReqReq.hasCmd = YES;
  resultPbReqReq.cmd = value;
  return self;
}
- (PbReqReqBuilder*) clearCmd {
  resultPbReqReq.hasCmd = NO;
  resultPbReqReq.cmd = 0;
  return self;
}
- (PBAppendableArray *)iargs {
  return resultPbReqReq.iargsArray;
}
- (SInt32)iargsAtIndex:(NSUInteger)index {
  return [resultPbReqReq iargsAtIndex:index];
}
- (PbReqReqBuilder *)addIargs:(SInt32)value {
  if (resultPbReqReq.iargsArray == nil) {
    resultPbReqReq.iargsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultPbReqReq.iargsArray addInt32:value];
  return self;
}
- (PbReqReqBuilder *)setIargsArray:(NSArray *)array {
  resultPbReqReq.iargsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (PbReqReqBuilder *)setIargsValues:(const SInt32 *)values count:(NSUInteger)count {
  resultPbReqReq.iargsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (PbReqReqBuilder *)clearIargs {
  resultPbReqReq.iargsArray = nil;
  return self;
}
- (NSMutableArray *)sargs {
  return resultPbReqReq.sargsArray;
}
- (NSString*)sargsAtIndex:(NSUInteger)index {
  return [resultPbReqReq sargsAtIndex:index];
}
- (PbReqReqBuilder *)addSargs:(NSString*)value {
  if (resultPbReqReq.sargsArray == nil) {
    resultPbReqReq.sargsArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqReq.sargsArray addObject:value];
  return self;
}
- (PbReqReqBuilder *)setSargsArray:(NSArray *)array {
  resultPbReqReq.sargsArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PbReqReqBuilder *)clearSargs {
  resultPbReqReq.sargsArray = nil;
  return self;
}
- (NSMutableArray *)attch {
  return resultPbReqReq.attchArray;
}
- (PbReqAttach*)attchAtIndex:(NSUInteger)index {
  return [resultPbReqReq attchAtIndex:index];
}
- (PbReqReqBuilder *)addAttch:(PbReqAttach*)value {
  if (resultPbReqReq.attchArray == nil) {
    resultPbReqReq.attchArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqReq.attchArray addObject:value];
  return self;
}
- (PbReqReqBuilder *)setAttchArray:(NSArray *)array {
  resultPbReqReq.attchArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqReqBuilder *)clearAttch {
  resultPbReqReq.attchArray = nil;
  return self;
}
- (BOOL) hasProject {
  return resultPbReqReq.hasProject;
}
- (PbReqProject*) project {
  return resultPbReqReq.project;
}
- (PbReqReqBuilder*) setProject:(PbReqProject*) value {
  resultPbReqReq.hasProject = YES;
  resultPbReqReq.project = value;
  return self;
}
- (PbReqReqBuilder*) setProjectBuilder:(PbReqProjectBuilder*) builderForValue {
  return [self setProject:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeProject:(PbReqProject*) value {
  if (resultPbReqReq.hasProject &&
      resultPbReqReq.project != [PbReqProject defaultInstance]) {
    resultPbReqReq.project =
      [[[PbReqProject builderWithPrototype:resultPbReqReq.project] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.project = value;
  }
  resultPbReqReq.hasProject = YES;
  return self;
}
- (PbReqReqBuilder*) clearProject {
  resultPbReqReq.hasProject = NO;
  resultPbReqReq.project = [PbReqProject defaultInstance];
  return self;
}
- (NSMutableArray *)prjMember {
  return resultPbReqReq.prjMemberArray;
}
- (PbReqUser*)prjMemberAtIndex:(NSUInteger)index {
  return [resultPbReqReq prjMemberAtIndex:index];
}
- (PbReqReqBuilder *)addPrjMember:(PbReqUser*)value {
  if (resultPbReqReq.prjMemberArray == nil) {
    resultPbReqReq.prjMemberArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqReq.prjMemberArray addObject:value];
  return self;
}
- (PbReqReqBuilder *)setPrjMemberArray:(NSArray *)array {
  resultPbReqReq.prjMemberArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqReqBuilder *)clearPrjMember {
  resultPbReqReq.prjMemberArray = nil;
  return self;
}
- (BOOL) hasTask {
  return resultPbReqReq.hasTask;
}
- (PbReqTask*) task {
  return resultPbReqReq.task;
}
- (PbReqReqBuilder*) setTask:(PbReqTask*) value {
  resultPbReqReq.hasTask = YES;
  resultPbReqReq.task = value;
  return self;
}
- (PbReqReqBuilder*) setTaskBuilder:(PbReqTaskBuilder*) builderForValue {
  return [self setTask:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeTask:(PbReqTask*) value {
  if (resultPbReqReq.hasTask &&
      resultPbReqReq.task != [PbReqTask defaultInstance]) {
    resultPbReqReq.task =
      [[[PbReqTask builderWithPrototype:resultPbReqReq.task] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.task = value;
  }
  resultPbReqReq.hasTask = YES;
  return self;
}
- (PbReqReqBuilder*) clearTask {
  resultPbReqReq.hasTask = NO;
  resultPbReqReq.task = [PbReqTask defaultInstance];
  return self;
}
- (BOOL) hasReport {
  return resultPbReqReq.hasReport;
}
- (PbReqReport*) report {
  return resultPbReqReq.report;
}
- (PbReqReqBuilder*) setReport:(PbReqReport*) value {
  resultPbReqReq.hasReport = YES;
  resultPbReqReq.report = value;
  return self;
}
- (PbReqReqBuilder*) setReportBuilder:(PbReqReportBuilder*) builderForValue {
  return [self setReport:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeReport:(PbReqReport*) value {
  if (resultPbReqReq.hasReport &&
      resultPbReqReq.report != [PbReqReport defaultInstance]) {
    resultPbReqReq.report =
      [[[PbReqReport builderWithPrototype:resultPbReqReq.report] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.report = value;
  }
  resultPbReqReq.hasReport = YES;
  return self;
}
- (PbReqReqBuilder*) clearReport {
  resultPbReqReq.hasReport = NO;
  resultPbReqReq.report = [PbReqReport defaultInstance];
  return self;
}
- (BOOL) hasUserDataReq {
  return resultPbReqReq.hasUserDataReq;
}
- (PbReqUserDataReq*) userDataReq {
  return resultPbReqReq.userDataReq;
}
- (PbReqReqBuilder*) setUserDataReq:(PbReqUserDataReq*) value {
  resultPbReqReq.hasUserDataReq = YES;
  resultPbReqReq.userDataReq = value;
  return self;
}
- (PbReqReqBuilder*) setUserDataReqBuilder:(PbReqUserDataReqBuilder*) builderForValue {
  return [self setUserDataReq:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeUserDataReq:(PbReqUserDataReq*) value {
  if (resultPbReqReq.hasUserDataReq &&
      resultPbReqReq.userDataReq != [PbReqUserDataReq defaultInstance]) {
    resultPbReqReq.userDataReq =
      [[[PbReqUserDataReq builderWithPrototype:resultPbReqReq.userDataReq] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.userDataReq = value;
  }
  resultPbReqReq.hasUserDataReq = YES;
  return self;
}
- (PbReqReqBuilder*) clearUserDataReq {
  resultPbReqReq.hasUserDataReq = NO;
  resultPbReqReq.userDataReq = [PbReqUserDataReq defaultInstance];
  return self;
}
- (BOOL) hasMsgBook {
  return resultPbReqReq.hasMsgBook;
}
- (PbReqMsgBook*) msgBook {
  return resultPbReqReq.msgBook;
}
- (PbReqReqBuilder*) setMsgBook:(PbReqMsgBook*) value {
  resultPbReqReq.hasMsgBook = YES;
  resultPbReqReq.msgBook = value;
  return self;
}
- (PbReqReqBuilder*) setMsgBookBuilder:(PbReqMsgBookBuilder*) builderForValue {
  return [self setMsgBook:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeMsgBook:(PbReqMsgBook*) value {
  if (resultPbReqReq.hasMsgBook &&
      resultPbReqReq.msgBook != [PbReqMsgBook defaultInstance]) {
    resultPbReqReq.msgBook =
      [[[PbReqMsgBook builderWithPrototype:resultPbReqReq.msgBook] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.msgBook = value;
  }
  resultPbReqReq.hasMsgBook = YES;
  return self;
}
- (PbReqReqBuilder*) clearMsgBook {
  resultPbReqReq.hasMsgBook = NO;
  resultPbReqReq.msgBook = [PbReqMsgBook defaultInstance];
  return self;
}
- (BOOL) hasMsgHotspot {
  return resultPbReqReq.hasMsgHotspot;
}
- (PbReqMsgHotspot*) msgHotspot {
  return resultPbReqReq.msgHotspot;
}
- (PbReqReqBuilder*) setMsgHotspot:(PbReqMsgHotspot*) value {
  resultPbReqReq.hasMsgHotspot = YES;
  resultPbReqReq.msgHotspot = value;
  return self;
}
- (PbReqReqBuilder*) setMsgHotspotBuilder:(PbReqMsgHotspotBuilder*) builderForValue {
  return [self setMsgHotspot:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeMsgHotspot:(PbReqMsgHotspot*) value {
  if (resultPbReqReq.hasMsgHotspot &&
      resultPbReqReq.msgHotspot != [PbReqMsgHotspot defaultInstance]) {
    resultPbReqReq.msgHotspot =
      [[[PbReqMsgHotspot builderWithPrototype:resultPbReqReq.msgHotspot] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.msgHotspot = value;
  }
  resultPbReqReq.hasMsgHotspot = YES;
  return self;
}
- (PbReqReqBuilder*) clearMsgHotspot {
  resultPbReqReq.hasMsgHotspot = NO;
  resultPbReqReq.msgHotspot = [PbReqMsgHotspot defaultInstance];
  return self;
}
- (NSMutableArray *)milestore {
  return resultPbReqReq.milestoreArray;
}
- (PbReqMilestore*)milestoreAtIndex:(NSUInteger)index {
  return [resultPbReqReq milestoreAtIndex:index];
}
- (PbReqReqBuilder *)addMilestore:(PbReqMilestore*)value {
  if (resultPbReqReq.milestoreArray == nil) {
    resultPbReqReq.milestoreArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqReq.milestoreArray addObject:value];
  return self;
}
- (PbReqReqBuilder *)setMilestoreArray:(NSArray *)array {
  resultPbReqReq.milestoreArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqReqBuilder *)clearMilestore {
  resultPbReqReq.milestoreArray = nil;
  return self;
}
- (NSMutableArray *)department {
  return resultPbReqReq.departmentArray;
}
- (PbReqDepartment*)departmentAtIndex:(NSUInteger)index {
  return [resultPbReqReq departmentAtIndex:index];
}
- (PbReqReqBuilder *)addDepartment:(PbReqDepartment*)value {
  if (resultPbReqReq.departmentArray == nil) {
    resultPbReqReq.departmentArray = [[NSMutableArray alloc]init];
  }
  [resultPbReqReq.departmentArray addObject:value];
  return self;
}
- (PbReqReqBuilder *)setDepartmentArray:(NSArray *)array {
  resultPbReqReq.departmentArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbReqReqBuilder *)clearDepartment {
  resultPbReqReq.departmentArray = nil;
  return self;
}
- (BOOL) hasTurnDepartment {
  return resultPbReqReq.hasTurnDepartment;
}
- (PbReqDepartment*) turnDepartment {
  return resultPbReqReq.turnDepartment;
}
- (PbReqReqBuilder*) setTurnDepartment:(PbReqDepartment*) value {
  resultPbReqReq.hasTurnDepartment = YES;
  resultPbReqReq.turnDepartment = value;
  return self;
}
- (PbReqReqBuilder*) setTurnDepartmentBuilder:(PbReqDepartmentBuilder*) builderForValue {
  return [self setTurnDepartment:[builderForValue build]];
}
- (PbReqReqBuilder*) mergeTurnDepartment:(PbReqDepartment*) value {
  if (resultPbReqReq.hasTurnDepartment &&
      resultPbReqReq.turnDepartment != [PbReqDepartment defaultInstance]) {
    resultPbReqReq.turnDepartment =
      [[[PbReqDepartment builderWithPrototype:resultPbReqReq.turnDepartment] mergeFrom:value] buildPartial];
  } else {
    resultPbReqReq.turnDepartment = value;
  }
  resultPbReqReq.hasTurnDepartment = YES;
  return self;
}
- (PbReqReqBuilder*) clearTurnDepartment {
  resultPbReqReq.hasTurnDepartment = NO;
  resultPbReqReq.turnDepartment = [PbReqDepartment defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
