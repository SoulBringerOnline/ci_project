// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PbGsk.pb.h"
// @@protoc_insertion_point(imports)

@implementation PbGskRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PbGskRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PbCltFriend ()
@property SInt32 updateType;
@property (strong) NSMutableArray * friendsArray;
@property SInt32 friendCnt;
@end

@implementation PbCltFriend

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
@synthesize friendsArray;
@dynamic friends;
- (BOOL) hasFriendCnt {
  return !!hasFriendCnt_;
}
- (void) setHasFriendCnt:(BOOL) _value_ {
  hasFriendCnt_ = !!_value_;
}
@synthesize friendCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.friendCnt = 0;
  }
  return self;
}
static PbCltFriend* defaultPbCltFriendInstance = nil;
+ (void) initialize {
  if (self == [PbCltFriend class]) {
    defaultPbCltFriendInstance = [[PbCltFriend alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltFriendInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltFriendInstance;
}
- (NSArray *)friends {
  return friendsArray;
}
- (PbUserFriend*)friendsAtIndex:(NSUInteger)index {
  return [friendsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  [self.friendsArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasFriendCnt) {
    [output writeInt32:3 value:self.friendCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  [self.friendsArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasFriendCnt) {
    size_ += computeInt32Size(3, self.friendCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltFriend*) parseFromData:(NSData*) data {
  return (PbCltFriend*)[[[PbCltFriend builder] mergeFromData:data] build];
}
+ (PbCltFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltFriend*)[[[PbCltFriend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltFriend*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltFriend*)[[[PbCltFriend builder] mergeFromInputStream:input] build];
}
+ (PbCltFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltFriend*)[[[PbCltFriend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltFriend*)[[[PbCltFriend builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltFriend*)[[[PbCltFriend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltFriendBuilder*) builder {
  return [[PbCltFriendBuilder alloc] init];
}
+ (PbCltFriendBuilder*) builderWithPrototype:(PbCltFriend*) prototype {
  return [[PbCltFriend builder] mergeFrom:prototype];
}
- (PbCltFriendBuilder*) builder {
  return [PbCltFriend builder];
}
- (PbCltFriendBuilder*) toBuilder {
  return [PbCltFriend builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  [self.friendsArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"friends"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasFriendCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendCnt", [NSNumber numberWithInteger:self.friendCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  for (PbUserFriend* element in self.friendsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"friends"];
  }
  if (self.hasFriendCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.friendCnt] forKey: @"friendCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltFriend class]]) {
    return NO;
  }
  PbCltFriend *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      [self.friendsArray isEqualToArray:otherMessage.friendsArray] &&
      self.hasFriendCnt == otherMessage.hasFriendCnt &&
      (!self.hasFriendCnt || self.friendCnt == otherMessage.friendCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  [self.friendsArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasFriendCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.friendCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltFriendBuilder()
@property (strong) PbCltFriend* resultPbCltFriend;
@end

@implementation PbCltFriendBuilder
@synthesize resultPbCltFriend;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltFriend = [[PbCltFriend alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltFriend;
}
- (PbCltFriendBuilder*) clear {
  self.resultPbCltFriend = [[PbCltFriend alloc] init];
  return self;
}
- (PbCltFriendBuilder*) clone {
  return [PbCltFriend builderWithPrototype:resultPbCltFriend];
}
- (PbCltFriend*) defaultInstance {
  return [PbCltFriend defaultInstance];
}
- (PbCltFriend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltFriend*) buildPartial {
  PbCltFriend* returnMe = resultPbCltFriend;
  self.resultPbCltFriend = nil;
  return returnMe;
}
- (PbCltFriendBuilder*) mergeFrom:(PbCltFriend*) other {
  if (other == [PbCltFriend defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.friendsArray.count > 0) {
    if (resultPbCltFriend.friendsArray == nil) {
      resultPbCltFriend.friendsArray = [[NSMutableArray alloc] initWithArray:other.friendsArray];
    } else {
      [resultPbCltFriend.friendsArray addObjectsFromArray:other.friendsArray];
    }
  }
  if (other.hasFriendCnt) {
    [self setFriendCnt:other.friendCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        PbUserFriendBuilder* subBuilder = [PbUserFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFriends:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setFriendCnt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbCltFriend.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbCltFriend.updateType;
}
- (PbCltFriendBuilder*) setUpdateType:(SInt32) value {
  resultPbCltFriend.hasUpdateType = YES;
  resultPbCltFriend.updateType = value;
  return self;
}
- (PbCltFriendBuilder*) clearUpdateType {
  resultPbCltFriend.hasUpdateType = NO;
  resultPbCltFriend.updateType = 0;
  return self;
}
- (NSMutableArray *)friends {
  return resultPbCltFriend.friendsArray;
}
- (PbUserFriend*)friendsAtIndex:(NSUInteger)index {
  return [resultPbCltFriend friendsAtIndex:index];
}
- (PbCltFriendBuilder *)addFriends:(PbUserFriend*)value {
  if (resultPbCltFriend.friendsArray == nil) {
    resultPbCltFriend.friendsArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltFriend.friendsArray addObject:value];
  return self;
}
- (PbCltFriendBuilder *)setFriendsArray:(NSArray *)array {
  resultPbCltFriend.friendsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltFriendBuilder *)clearFriends {
  resultPbCltFriend.friendsArray = nil;
  return self;
}
- (BOOL) hasFriendCnt {
  return resultPbCltFriend.hasFriendCnt;
}
- (SInt32) friendCnt {
  return resultPbCltFriend.friendCnt;
}
- (PbCltFriendBuilder*) setFriendCnt:(SInt32) value {
  resultPbCltFriend.hasFriendCnt = YES;
  resultPbCltFriend.friendCnt = value;
  return self;
}
- (PbCltFriendBuilder*) clearFriendCnt {
  resultPbCltFriend.hasFriendCnt = NO;
  resultPbCltFriend.friendCnt = 0;
  return self;
}
@end

@interface PbCltRecommendFriend ()
@property SInt32 updateType;
@property (strong) NSMutableArray * recommendFriendsArray;
@property SInt32 recommendFriendCnt;
@end

@implementation PbCltRecommendFriend

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
@synthesize recommendFriendsArray;
@dynamic recommendFriends;
- (BOOL) hasRecommendFriendCnt {
  return !!hasRecommendFriendCnt_;
}
- (void) setHasRecommendFriendCnt:(BOOL) _value_ {
  hasRecommendFriendCnt_ = !!_value_;
}
@synthesize recommendFriendCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.recommendFriendCnt = 0;
  }
  return self;
}
static PbCltRecommendFriend* defaultPbCltRecommendFriendInstance = nil;
+ (void) initialize {
  if (self == [PbCltRecommendFriend class]) {
    defaultPbCltRecommendFriendInstance = [[PbCltRecommendFriend alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltRecommendFriendInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltRecommendFriendInstance;
}
- (NSArray *)recommendFriends {
  return recommendFriendsArray;
}
- (PbUserRecommendFriend*)recommendFriendsAtIndex:(NSUInteger)index {
  return [recommendFriendsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasRecommendFriendCnt) {
    [output writeInt32:3 value:self.recommendFriendCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasRecommendFriendCnt) {
    size_ += computeInt32Size(3, self.recommendFriendCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltRecommendFriend*) parseFromData:(NSData*) data {
  return (PbCltRecommendFriend*)[[[PbCltRecommendFriend builder] mergeFromData:data] build];
}
+ (PbCltRecommendFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltRecommendFriend*)[[[PbCltRecommendFriend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltRecommendFriend*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltRecommendFriend*)[[[PbCltRecommendFriend builder] mergeFromInputStream:input] build];
}
+ (PbCltRecommendFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltRecommendFriend*)[[[PbCltRecommendFriend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltRecommendFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltRecommendFriend*)[[[PbCltRecommendFriend builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltRecommendFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltRecommendFriend*)[[[PbCltRecommendFriend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltRecommendFriendBuilder*) builder {
  return [[PbCltRecommendFriendBuilder alloc] init];
}
+ (PbCltRecommendFriendBuilder*) builderWithPrototype:(PbCltRecommendFriend*) prototype {
  return [[PbCltRecommendFriend builder] mergeFrom:prototype];
}
- (PbCltRecommendFriendBuilder*) builder {
  return [PbCltRecommendFriend builder];
}
- (PbCltRecommendFriendBuilder*) toBuilder {
  return [PbCltRecommendFriend builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"recommendFriends"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRecommendFriendCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recommendFriendCnt", [NSNumber numberWithInteger:self.recommendFriendCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  for (PbUserRecommendFriend* element in self.recommendFriendsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"recommendFriends"];
  }
  if (self.hasRecommendFriendCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.recommendFriendCnt] forKey: @"recommendFriendCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltRecommendFriend class]]) {
    return NO;
  }
  PbCltRecommendFriend *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      [self.recommendFriendsArray isEqualToArray:otherMessage.recommendFriendsArray] &&
      self.hasRecommendFriendCnt == otherMessage.hasRecommendFriendCnt &&
      (!self.hasRecommendFriendCnt || self.recommendFriendCnt == otherMessage.recommendFriendCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRecommendFriendCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.recommendFriendCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltRecommendFriendBuilder()
@property (strong) PbCltRecommendFriend* resultPbCltRecommendFriend;
@end

@implementation PbCltRecommendFriendBuilder
@synthesize resultPbCltRecommendFriend;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltRecommendFriend = [[PbCltRecommendFriend alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltRecommendFriend;
}
- (PbCltRecommendFriendBuilder*) clear {
  self.resultPbCltRecommendFriend = [[PbCltRecommendFriend alloc] init];
  return self;
}
- (PbCltRecommendFriendBuilder*) clone {
  return [PbCltRecommendFriend builderWithPrototype:resultPbCltRecommendFriend];
}
- (PbCltRecommendFriend*) defaultInstance {
  return [PbCltRecommendFriend defaultInstance];
}
- (PbCltRecommendFriend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltRecommendFriend*) buildPartial {
  PbCltRecommendFriend* returnMe = resultPbCltRecommendFriend;
  self.resultPbCltRecommendFriend = nil;
  return returnMe;
}
- (PbCltRecommendFriendBuilder*) mergeFrom:(PbCltRecommendFriend*) other {
  if (other == [PbCltRecommendFriend defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.recommendFriendsArray.count > 0) {
    if (resultPbCltRecommendFriend.recommendFriendsArray == nil) {
      resultPbCltRecommendFriend.recommendFriendsArray = [[NSMutableArray alloc] initWithArray:other.recommendFriendsArray];
    } else {
      [resultPbCltRecommendFriend.recommendFriendsArray addObjectsFromArray:other.recommendFriendsArray];
    }
  }
  if (other.hasRecommendFriendCnt) {
    [self setRecommendFriendCnt:other.recommendFriendCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltRecommendFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltRecommendFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        PbUserRecommendFriendBuilder* subBuilder = [PbUserRecommendFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecommendFriends:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setRecommendFriendCnt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbCltRecommendFriend.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbCltRecommendFriend.updateType;
}
- (PbCltRecommendFriendBuilder*) setUpdateType:(SInt32) value {
  resultPbCltRecommendFriend.hasUpdateType = YES;
  resultPbCltRecommendFriend.updateType = value;
  return self;
}
- (PbCltRecommendFriendBuilder*) clearUpdateType {
  resultPbCltRecommendFriend.hasUpdateType = NO;
  resultPbCltRecommendFriend.updateType = 0;
  return self;
}
- (NSMutableArray *)recommendFriends {
  return resultPbCltRecommendFriend.recommendFriendsArray;
}
- (PbUserRecommendFriend*)recommendFriendsAtIndex:(NSUInteger)index {
  return [resultPbCltRecommendFriend recommendFriendsAtIndex:index];
}
- (PbCltRecommendFriendBuilder *)addRecommendFriends:(PbUserRecommendFriend*)value {
  if (resultPbCltRecommendFriend.recommendFriendsArray == nil) {
    resultPbCltRecommendFriend.recommendFriendsArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltRecommendFriend.recommendFriendsArray addObject:value];
  return self;
}
- (PbCltRecommendFriendBuilder *)setRecommendFriendsArray:(NSArray *)array {
  resultPbCltRecommendFriend.recommendFriendsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltRecommendFriendBuilder *)clearRecommendFriends {
  resultPbCltRecommendFriend.recommendFriendsArray = nil;
  return self;
}
- (BOOL) hasRecommendFriendCnt {
  return resultPbCltRecommendFriend.hasRecommendFriendCnt;
}
- (SInt32) recommendFriendCnt {
  return resultPbCltRecommendFriend.recommendFriendCnt;
}
- (PbCltRecommendFriendBuilder*) setRecommendFriendCnt:(SInt32) value {
  resultPbCltRecommendFriend.hasRecommendFriendCnt = YES;
  resultPbCltRecommendFriend.recommendFriendCnt = value;
  return self;
}
- (PbCltRecommendFriendBuilder*) clearRecommendFriendCnt {
  resultPbCltRecommendFriend.hasRecommendFriendCnt = NO;
  resultPbCltRecommendFriend.recommendFriendCnt = 0;
  return self;
}
@end

@interface PbCltGroupUser ()
@property UInt32 uin;
@property (strong) NSString* name;
@property (strong) NSString* remark;
@property SInt32 title;
@property (strong) NSString* initial;
@property SInt32 weight;
@property (strong) NSString* namePinyin;
@property (strong) NSString* namePinyinJ;
@end

@implementation PbCltGroupUser

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasRemark {
  return !!hasRemark_;
}
- (void) setHasRemark:(BOOL) _value_ {
  hasRemark_ = !!_value_;
}
@synthesize remark;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasInitial {
  return !!hasInitial_;
}
- (void) setHasInitial:(BOOL) _value_ {
  hasInitial_ = !!_value_;
}
@synthesize initial;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value_ {
  hasWeight_ = !!_value_;
}
@synthesize weight;
- (BOOL) hasNamePinyin {
  return !!hasNamePinyin_;
}
- (void) setHasNamePinyin:(BOOL) _value_ {
  hasNamePinyin_ = !!_value_;
}
@synthesize namePinyin;
- (BOOL) hasNamePinyinJ {
  return !!hasNamePinyinJ_;
}
- (void) setHasNamePinyinJ:(BOOL) _value_ {
  hasNamePinyinJ_ = !!_value_;
}
@synthesize namePinyinJ;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.name = @"";
    self.remark = @"";
    self.title = 0;
    self.initial = @"";
    self.weight = 0;
    self.namePinyin = @"";
    self.namePinyinJ = @"";
  }
  return self;
}
static PbCltGroupUser* defaultPbCltGroupUserInstance = nil;
+ (void) initialize {
  if (self == [PbCltGroupUser class]) {
    defaultPbCltGroupUserInstance = [[PbCltGroupUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltGroupUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltGroupUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasRemark) {
    [output writeString:3 value:self.remark];
  }
  if (self.hasTitle) {
    [output writeInt32:4 value:self.title];
  }
  if (self.hasInitial) {
    [output writeString:5 value:self.initial];
  }
  if (self.hasWeight) {
    [output writeInt32:6 value:self.weight];
  }
  if (self.hasNamePinyin) {
    [output writeString:7 value:self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output writeString:8 value:self.namePinyinJ];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasRemark) {
    size_ += computeStringSize(3, self.remark);
  }
  if (self.hasTitle) {
    size_ += computeInt32Size(4, self.title);
  }
  if (self.hasInitial) {
    size_ += computeStringSize(5, self.initial);
  }
  if (self.hasWeight) {
    size_ += computeInt32Size(6, self.weight);
  }
  if (self.hasNamePinyin) {
    size_ += computeStringSize(7, self.namePinyin);
  }
  if (self.hasNamePinyinJ) {
    size_ += computeStringSize(8, self.namePinyinJ);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltGroupUser*) parseFromData:(NSData*) data {
  return (PbCltGroupUser*)[[[PbCltGroupUser builder] mergeFromData:data] build];
}
+ (PbCltGroupUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupUser*)[[[PbCltGroupUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupUser*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltGroupUser*)[[[PbCltGroupUser builder] mergeFromInputStream:input] build];
}
+ (PbCltGroupUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupUser*)[[[PbCltGroupUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltGroupUser*)[[[PbCltGroupUser builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltGroupUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupUser*)[[[PbCltGroupUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupUserBuilder*) builder {
  return [[PbCltGroupUserBuilder alloc] init];
}
+ (PbCltGroupUserBuilder*) builderWithPrototype:(PbCltGroupUser*) prototype {
  return [[PbCltGroupUser builder] mergeFrom:prototype];
}
- (PbCltGroupUserBuilder*) builder {
  return [PbCltGroupUser builder];
}
- (PbCltGroupUserBuilder*) toBuilder {
  return [PbCltGroupUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remark", self.remark];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", [NSNumber numberWithInteger:self.title]];
  }
  if (self.hasInitial) {
    [output appendFormat:@"%@%@: %@\n", indent, @"initial", self.initial];
  }
  if (self.hasWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weight", [NSNumber numberWithInteger:self.weight]];
  }
  if (self.hasNamePinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyin", self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyinJ", self.namePinyinJ];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasRemark) {
    [dictionary setObject: self.remark forKey: @"remark"];
  }
  if (self.hasTitle) {
    [dictionary setObject: [NSNumber numberWithInteger:self.title] forKey: @"title"];
  }
  if (self.hasInitial) {
    [dictionary setObject: self.initial forKey: @"initial"];
  }
  if (self.hasWeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weight] forKey: @"weight"];
  }
  if (self.hasNamePinyin) {
    [dictionary setObject: self.namePinyin forKey: @"namePinyin"];
  }
  if (self.hasNamePinyinJ) {
    [dictionary setObject: self.namePinyinJ forKey: @"namePinyinJ"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltGroupUser class]]) {
    return NO;
  }
  PbCltGroupUser *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasRemark == otherMessage.hasRemark &&
      (!self.hasRemark || [self.remark isEqual:otherMessage.remark]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || self.title == otherMessage.title) &&
      self.hasInitial == otherMessage.hasInitial &&
      (!self.hasInitial || [self.initial isEqual:otherMessage.initial]) &&
      self.hasWeight == otherMessage.hasWeight &&
      (!self.hasWeight || self.weight == otherMessage.weight) &&
      self.hasNamePinyin == otherMessage.hasNamePinyin &&
      (!self.hasNamePinyin || [self.namePinyin isEqual:otherMessage.namePinyin]) &&
      self.hasNamePinyinJ == otherMessage.hasNamePinyinJ &&
      (!self.hasNamePinyinJ || [self.namePinyinJ isEqual:otherMessage.namePinyinJ]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasRemark) {
    hashCode = hashCode * 31 + [self.remark hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.title] hash];
  }
  if (self.hasInitial) {
    hashCode = hashCode * 31 + [self.initial hash];
  }
  if (self.hasWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weight] hash];
  }
  if (self.hasNamePinyin) {
    hashCode = hashCode * 31 + [self.namePinyin hash];
  }
  if (self.hasNamePinyinJ) {
    hashCode = hashCode * 31 + [self.namePinyinJ hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltGroupUserBuilder()
@property (strong) PbCltGroupUser* resultPbCltGroupUser;
@end

@implementation PbCltGroupUserBuilder
@synthesize resultPbCltGroupUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltGroupUser = [[PbCltGroupUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltGroupUser;
}
- (PbCltGroupUserBuilder*) clear {
  self.resultPbCltGroupUser = [[PbCltGroupUser alloc] init];
  return self;
}
- (PbCltGroupUserBuilder*) clone {
  return [PbCltGroupUser builderWithPrototype:resultPbCltGroupUser];
}
- (PbCltGroupUser*) defaultInstance {
  return [PbCltGroupUser defaultInstance];
}
- (PbCltGroupUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltGroupUser*) buildPartial {
  PbCltGroupUser* returnMe = resultPbCltGroupUser;
  self.resultPbCltGroupUser = nil;
  return returnMe;
}
- (PbCltGroupUserBuilder*) mergeFrom:(PbCltGroupUser*) other {
  if (other == [PbCltGroupUser defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasRemark) {
    [self setRemark:other.remark];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasInitial) {
    [self setInitial:other.initial];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasNamePinyin) {
    [self setNamePinyin:other.namePinyin];
  }
  if (other.hasNamePinyinJ) {
    [self setNamePinyinJ:other.namePinyinJ];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltGroupUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltGroupUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setRemark:[input readString]];
        break;
      }
      case 32: {
        [self setTitle:[input readInt32]];
        break;
      }
      case 42: {
        [self setInitial:[input readString]];
        break;
      }
      case 48: {
        [self setWeight:[input readInt32]];
        break;
      }
      case 58: {
        [self setNamePinyin:[input readString]];
        break;
      }
      case 66: {
        [self setNamePinyinJ:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbCltGroupUser.hasUin;
}
- (UInt32) uin {
  return resultPbCltGroupUser.uin;
}
- (PbCltGroupUserBuilder*) setUin:(UInt32) value {
  resultPbCltGroupUser.hasUin = YES;
  resultPbCltGroupUser.uin = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearUin {
  resultPbCltGroupUser.hasUin = NO;
  resultPbCltGroupUser.uin = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbCltGroupUser.hasName;
}
- (NSString*) name {
  return resultPbCltGroupUser.name;
}
- (PbCltGroupUserBuilder*) setName:(NSString*) value {
  resultPbCltGroupUser.hasName = YES;
  resultPbCltGroupUser.name = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearName {
  resultPbCltGroupUser.hasName = NO;
  resultPbCltGroupUser.name = @"";
  return self;
}
- (BOOL) hasRemark {
  return resultPbCltGroupUser.hasRemark;
}
- (NSString*) remark {
  return resultPbCltGroupUser.remark;
}
- (PbCltGroupUserBuilder*) setRemark:(NSString*) value {
  resultPbCltGroupUser.hasRemark = YES;
  resultPbCltGroupUser.remark = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearRemark {
  resultPbCltGroupUser.hasRemark = NO;
  resultPbCltGroupUser.remark = @"";
  return self;
}
- (BOOL) hasTitle {
  return resultPbCltGroupUser.hasTitle;
}
- (SInt32) title {
  return resultPbCltGroupUser.title;
}
- (PbCltGroupUserBuilder*) setTitle:(SInt32) value {
  resultPbCltGroupUser.hasTitle = YES;
  resultPbCltGroupUser.title = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearTitle {
  resultPbCltGroupUser.hasTitle = NO;
  resultPbCltGroupUser.title = 0;
  return self;
}
- (BOOL) hasInitial {
  return resultPbCltGroupUser.hasInitial;
}
- (NSString*) initial {
  return resultPbCltGroupUser.initial;
}
- (PbCltGroupUserBuilder*) setInitial:(NSString*) value {
  resultPbCltGroupUser.hasInitial = YES;
  resultPbCltGroupUser.initial = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearInitial {
  resultPbCltGroupUser.hasInitial = NO;
  resultPbCltGroupUser.initial = @"";
  return self;
}
- (BOOL) hasWeight {
  return resultPbCltGroupUser.hasWeight;
}
- (SInt32) weight {
  return resultPbCltGroupUser.weight;
}
- (PbCltGroupUserBuilder*) setWeight:(SInt32) value {
  resultPbCltGroupUser.hasWeight = YES;
  resultPbCltGroupUser.weight = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearWeight {
  resultPbCltGroupUser.hasWeight = NO;
  resultPbCltGroupUser.weight = 0;
  return self;
}
- (BOOL) hasNamePinyin {
  return resultPbCltGroupUser.hasNamePinyin;
}
- (NSString*) namePinyin {
  return resultPbCltGroupUser.namePinyin;
}
- (PbCltGroupUserBuilder*) setNamePinyin:(NSString*) value {
  resultPbCltGroupUser.hasNamePinyin = YES;
  resultPbCltGroupUser.namePinyin = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearNamePinyin {
  resultPbCltGroupUser.hasNamePinyin = NO;
  resultPbCltGroupUser.namePinyin = @"";
  return self;
}
- (BOOL) hasNamePinyinJ {
  return resultPbCltGroupUser.hasNamePinyinJ;
}
- (NSString*) namePinyinJ {
  return resultPbCltGroupUser.namePinyinJ;
}
- (PbCltGroupUserBuilder*) setNamePinyinJ:(NSString*) value {
  resultPbCltGroupUser.hasNamePinyinJ = YES;
  resultPbCltGroupUser.namePinyinJ = value;
  return self;
}
- (PbCltGroupUserBuilder*) clearNamePinyinJ {
  resultPbCltGroupUser.hasNamePinyinJ = NO;
  resultPbCltGroupUser.namePinyinJ = @"";
  return self;
}
@end

@interface PbCltGroupBaseUser ()
@property UInt32 uin;
@property (strong) NSString* name;
@end

@implementation PbCltGroupBaseUser

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.name = @"";
  }
  return self;
}
static PbCltGroupBaseUser* defaultPbCltGroupBaseUserInstance = nil;
+ (void) initialize {
  if (self == [PbCltGroupBaseUser class]) {
    defaultPbCltGroupBaseUserInstance = [[PbCltGroupBaseUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltGroupBaseUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltGroupBaseUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltGroupBaseUser*) parseFromData:(NSData*) data {
  return (PbCltGroupBaseUser*)[[[PbCltGroupBaseUser builder] mergeFromData:data] build];
}
+ (PbCltGroupBaseUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupBaseUser*)[[[PbCltGroupBaseUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupBaseUser*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltGroupBaseUser*)[[[PbCltGroupBaseUser builder] mergeFromInputStream:input] build];
}
+ (PbCltGroupBaseUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupBaseUser*)[[[PbCltGroupBaseUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupBaseUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltGroupBaseUser*)[[[PbCltGroupBaseUser builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltGroupBaseUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupBaseUser*)[[[PbCltGroupBaseUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupBaseUserBuilder*) builder {
  return [[PbCltGroupBaseUserBuilder alloc] init];
}
+ (PbCltGroupBaseUserBuilder*) builderWithPrototype:(PbCltGroupBaseUser*) prototype {
  return [[PbCltGroupBaseUser builder] mergeFrom:prototype];
}
- (PbCltGroupBaseUserBuilder*) builder {
  return [PbCltGroupBaseUser builder];
}
- (PbCltGroupBaseUserBuilder*) toBuilder {
  return [PbCltGroupBaseUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltGroupBaseUser class]]) {
    return NO;
  }
  PbCltGroupBaseUser *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltGroupBaseUserBuilder()
@property (strong) PbCltGroupBaseUser* resultPbCltGroupBaseUser;
@end

@implementation PbCltGroupBaseUserBuilder
@synthesize resultPbCltGroupBaseUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltGroupBaseUser = [[PbCltGroupBaseUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltGroupBaseUser;
}
- (PbCltGroupBaseUserBuilder*) clear {
  self.resultPbCltGroupBaseUser = [[PbCltGroupBaseUser alloc] init];
  return self;
}
- (PbCltGroupBaseUserBuilder*) clone {
  return [PbCltGroupBaseUser builderWithPrototype:resultPbCltGroupBaseUser];
}
- (PbCltGroupBaseUser*) defaultInstance {
  return [PbCltGroupBaseUser defaultInstance];
}
- (PbCltGroupBaseUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltGroupBaseUser*) buildPartial {
  PbCltGroupBaseUser* returnMe = resultPbCltGroupBaseUser;
  self.resultPbCltGroupBaseUser = nil;
  return returnMe;
}
- (PbCltGroupBaseUserBuilder*) mergeFrom:(PbCltGroupBaseUser*) other {
  if (other == [PbCltGroupBaseUser defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltGroupBaseUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltGroupBaseUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbCltGroupBaseUser.hasUin;
}
- (UInt32) uin {
  return resultPbCltGroupBaseUser.uin;
}
- (PbCltGroupBaseUserBuilder*) setUin:(UInt32) value {
  resultPbCltGroupBaseUser.hasUin = YES;
  resultPbCltGroupBaseUser.uin = value;
  return self;
}
- (PbCltGroupBaseUserBuilder*) clearUin {
  resultPbCltGroupBaseUser.hasUin = NO;
  resultPbCltGroupBaseUser.uin = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbCltGroupBaseUser.hasName;
}
- (NSString*) name {
  return resultPbCltGroupBaseUser.name;
}
- (PbCltGroupBaseUserBuilder*) setName:(NSString*) value {
  resultPbCltGroupBaseUser.hasName = YES;
  resultPbCltGroupBaseUser.name = value;
  return self;
}
- (PbCltGroupBaseUserBuilder*) clearName {
  resultPbCltGroupBaseUser.hasName = NO;
  resultPbCltGroupBaseUser.name = @"";
  return self;
}
@end

@interface PbCltGroupItem ()
@property (strong) NSString* groupId;
@property (strong) NSString* groupName;
@property (strong) NSString* groupDesc;
@property SInt32 groupType;
@property SInt32 seq;
@property (strong) NSString* lastMsg;
@property SInt32 lastMsgTime;
@property SInt32 lastMsgType;
@property SInt32 lastSenderId;
@property (strong) NSString* lastSenderName;
@property (strong) NSMutableArray * avatarArray;
@property SInt32 isScreen;
@property SInt32 isRemind;
@property (strong) NSString* remark;
@property (strong) NSString* initial;
@property SInt32 weight;
@property (strong) NSString* namePinyin;
@property (strong) NSString* namePinyinJ;
@property SInt32 memberCount;
@property SInt32 initSeqid;
@property SInt32 readSeqid;
@property SInt32 creatorUid;
@property (strong) NSMutableArray * baseUsersArray;
@end

@implementation PbCltGroupItem

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) _value_ {
  hasGroupName_ = !!_value_;
}
@synthesize groupName;
- (BOOL) hasGroupDesc {
  return !!hasGroupDesc_;
}
- (void) setHasGroupDesc:(BOOL) _value_ {
  hasGroupDesc_ = !!_value_;
}
@synthesize groupDesc;
- (BOOL) hasGroupType {
  return !!hasGroupType_;
}
- (void) setHasGroupType:(BOOL) _value_ {
  hasGroupType_ = !!_value_;
}
@synthesize groupType;
- (BOOL) hasSeq {
  return !!hasSeq_;
}
- (void) setHasSeq:(BOOL) _value_ {
  hasSeq_ = !!_value_;
}
@synthesize seq;
- (BOOL) hasLastMsg {
  return !!hasLastMsg_;
}
- (void) setHasLastMsg:(BOOL) _value_ {
  hasLastMsg_ = !!_value_;
}
@synthesize lastMsg;
- (BOOL) hasLastMsgTime {
  return !!hasLastMsgTime_;
}
- (void) setHasLastMsgTime:(BOOL) _value_ {
  hasLastMsgTime_ = !!_value_;
}
@synthesize lastMsgTime;
- (BOOL) hasLastMsgType {
  return !!hasLastMsgType_;
}
- (void) setHasLastMsgType:(BOOL) _value_ {
  hasLastMsgType_ = !!_value_;
}
@synthesize lastMsgType;
- (BOOL) hasLastSenderId {
  return !!hasLastSenderId_;
}
- (void) setHasLastSenderId:(BOOL) _value_ {
  hasLastSenderId_ = !!_value_;
}
@synthesize lastSenderId;
- (BOOL) hasLastSenderName {
  return !!hasLastSenderName_;
}
- (void) setHasLastSenderName:(BOOL) _value_ {
  hasLastSenderName_ = !!_value_;
}
@synthesize lastSenderName;
@synthesize avatarArray;
@dynamic avatar;
- (BOOL) hasIsScreen {
  return !!hasIsScreen_;
}
- (void) setHasIsScreen:(BOOL) _value_ {
  hasIsScreen_ = !!_value_;
}
@synthesize isScreen;
- (BOOL) hasIsRemind {
  return !!hasIsRemind_;
}
- (void) setHasIsRemind:(BOOL) _value_ {
  hasIsRemind_ = !!_value_;
}
@synthesize isRemind;
- (BOOL) hasRemark {
  return !!hasRemark_;
}
- (void) setHasRemark:(BOOL) _value_ {
  hasRemark_ = !!_value_;
}
@synthesize remark;
- (BOOL) hasInitial {
  return !!hasInitial_;
}
- (void) setHasInitial:(BOOL) _value_ {
  hasInitial_ = !!_value_;
}
@synthesize initial;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value_ {
  hasWeight_ = !!_value_;
}
@synthesize weight;
- (BOOL) hasNamePinyin {
  return !!hasNamePinyin_;
}
- (void) setHasNamePinyin:(BOOL) _value_ {
  hasNamePinyin_ = !!_value_;
}
@synthesize namePinyin;
- (BOOL) hasNamePinyinJ {
  return !!hasNamePinyinJ_;
}
- (void) setHasNamePinyinJ:(BOOL) _value_ {
  hasNamePinyinJ_ = !!_value_;
}
@synthesize namePinyinJ;
- (BOOL) hasMemberCount {
  return !!hasMemberCount_;
}
- (void) setHasMemberCount:(BOOL) _value_ {
  hasMemberCount_ = !!_value_;
}
@synthesize memberCount;
- (BOOL) hasInitSeqid {
  return !!hasInitSeqid_;
}
- (void) setHasInitSeqid:(BOOL) _value_ {
  hasInitSeqid_ = !!_value_;
}
@synthesize initSeqid;
- (BOOL) hasReadSeqid {
  return !!hasReadSeqid_;
}
- (void) setHasReadSeqid:(BOOL) _value_ {
  hasReadSeqid_ = !!_value_;
}
@synthesize readSeqid;
- (BOOL) hasCreatorUid {
  return !!hasCreatorUid_;
}
- (void) setHasCreatorUid:(BOOL) _value_ {
  hasCreatorUid_ = !!_value_;
}
@synthesize creatorUid;
@synthesize baseUsersArray;
@dynamic baseUsers;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.groupName = @"";
    self.groupDesc = @"";
    self.groupType = 0;
    self.seq = 0;
    self.lastMsg = @"";
    self.lastMsgTime = 0;
    self.lastMsgType = 0;
    self.lastSenderId = 0;
    self.lastSenderName = @"";
    self.isScreen = 0;
    self.isRemind = 0;
    self.remark = @"";
    self.initial = @"";
    self.weight = 0;
    self.namePinyin = @"";
    self.namePinyinJ = @"";
    self.memberCount = 0;
    self.initSeqid = 0;
    self.readSeqid = 0;
    self.creatorUid = 0;
  }
  return self;
}
static PbCltGroupItem* defaultPbCltGroupItemInstance = nil;
+ (void) initialize {
  if (self == [PbCltGroupItem class]) {
    defaultPbCltGroupItemInstance = [[PbCltGroupItem alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltGroupItemInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltGroupItemInstance;
}
- (NSArray *)avatar {
  return avatarArray;
}
- (NSString*)avatarAtIndex:(NSUInteger)index {
  return [avatarArray objectAtIndex:index];
}
- (NSArray *)baseUsers {
  return baseUsersArray;
}
- (PbCltGroupBaseUser*)baseUsersAtIndex:(NSUInteger)index {
  return [baseUsersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasGroupName) {
    [output writeString:2 value:self.groupName];
  }
  if (self.hasGroupDesc) {
    [output writeString:3 value:self.groupDesc];
  }
  if (self.hasGroupType) {
    [output writeInt32:4 value:self.groupType];
  }
  if (self.hasSeq) {
    [output writeInt32:5 value:self.seq];
  }
  if (self.hasLastMsg) {
    [output writeString:6 value:self.lastMsg];
  }
  if (self.hasLastMsgTime) {
    [output writeInt32:7 value:self.lastMsgTime];
  }
  if (self.hasLastMsgType) {
    [output writeInt32:8 value:self.lastMsgType];
  }
  if (self.hasLastSenderId) {
    [output writeInt32:9 value:self.lastSenderId];
  }
  if (self.hasLastSenderName) {
    [output writeString:10 value:self.lastSenderName];
  }
  [self.avatarArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:11 value:element];
  }];
  if (self.hasIsScreen) {
    [output writeInt32:12 value:self.isScreen];
  }
  if (self.hasIsRemind) {
    [output writeInt32:13 value:self.isRemind];
  }
  if (self.hasRemark) {
    [output writeString:14 value:self.remark];
  }
  if (self.hasInitial) {
    [output writeString:15 value:self.initial];
  }
  if (self.hasWeight) {
    [output writeInt32:16 value:self.weight];
  }
  if (self.hasNamePinyin) {
    [output writeString:17 value:self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output writeString:18 value:self.namePinyinJ];
  }
  if (self.hasMemberCount) {
    [output writeInt32:19 value:self.memberCount];
  }
  if (self.hasInitSeqid) {
    [output writeInt32:20 value:self.initSeqid];
  }
  if (self.hasReadSeqid) {
    [output writeInt32:21 value:self.readSeqid];
  }
  if (self.hasCreatorUid) {
    [output writeInt32:22 value:self.creatorUid];
  }
  [self.baseUsersArray enumerateObjectsUsingBlock:^(PbCltGroupBaseUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:23 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(2, self.groupName);
  }
  if (self.hasGroupDesc) {
    size_ += computeStringSize(3, self.groupDesc);
  }
  if (self.hasGroupType) {
    size_ += computeInt32Size(4, self.groupType);
  }
  if (self.hasSeq) {
    size_ += computeInt32Size(5, self.seq);
  }
  if (self.hasLastMsg) {
    size_ += computeStringSize(6, self.lastMsg);
  }
  if (self.hasLastMsgTime) {
    size_ += computeInt32Size(7, self.lastMsgTime);
  }
  if (self.hasLastMsgType) {
    size_ += computeInt32Size(8, self.lastMsgType);
  }
  if (self.hasLastSenderId) {
    size_ += computeInt32Size(9, self.lastSenderId);
  }
  if (self.hasLastSenderName) {
    size_ += computeStringSize(10, self.lastSenderName);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.avatarArray.count;
    [self.avatarArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasIsScreen) {
    size_ += computeInt32Size(12, self.isScreen);
  }
  if (self.hasIsRemind) {
    size_ += computeInt32Size(13, self.isRemind);
  }
  if (self.hasRemark) {
    size_ += computeStringSize(14, self.remark);
  }
  if (self.hasInitial) {
    size_ += computeStringSize(15, self.initial);
  }
  if (self.hasWeight) {
    size_ += computeInt32Size(16, self.weight);
  }
  if (self.hasNamePinyin) {
    size_ += computeStringSize(17, self.namePinyin);
  }
  if (self.hasNamePinyinJ) {
    size_ += computeStringSize(18, self.namePinyinJ);
  }
  if (self.hasMemberCount) {
    size_ += computeInt32Size(19, self.memberCount);
  }
  if (self.hasInitSeqid) {
    size_ += computeInt32Size(20, self.initSeqid);
  }
  if (self.hasReadSeqid) {
    size_ += computeInt32Size(21, self.readSeqid);
  }
  if (self.hasCreatorUid) {
    size_ += computeInt32Size(22, self.creatorUid);
  }
  [self.baseUsersArray enumerateObjectsUsingBlock:^(PbCltGroupBaseUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(23, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltGroupItem*) parseFromData:(NSData*) data {
  return (PbCltGroupItem*)[[[PbCltGroupItem builder] mergeFromData:data] build];
}
+ (PbCltGroupItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupItem*)[[[PbCltGroupItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupItem*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltGroupItem*)[[[PbCltGroupItem builder] mergeFromInputStream:input] build];
}
+ (PbCltGroupItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupItem*)[[[PbCltGroupItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltGroupItem*)[[[PbCltGroupItem builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltGroupItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupItem*)[[[PbCltGroupItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupItemBuilder*) builder {
  return [[PbCltGroupItemBuilder alloc] init];
}
+ (PbCltGroupItemBuilder*) builderWithPrototype:(PbCltGroupItem*) prototype {
  return [[PbCltGroupItem builder] mergeFrom:prototype];
}
- (PbCltGroupItemBuilder*) builder {
  return [PbCltGroupItem builder];
}
- (PbCltGroupItemBuilder*) toBuilder {
  return [PbCltGroupItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupDesc", self.groupDesc];
  }
  if (self.hasGroupType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupType", [NSNumber numberWithInteger:self.groupType]];
  }
  if (self.hasSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seq", [NSNumber numberWithInteger:self.seq]];
  }
  if (self.hasLastMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsg", self.lastMsg];
  }
  if (self.hasLastMsgTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgTime", [NSNumber numberWithInteger:self.lastMsgTime]];
  }
  if (self.hasLastMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgType", [NSNumber numberWithInteger:self.lastMsgType]];
  }
  if (self.hasLastSenderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastSenderId", [NSNumber numberWithInteger:self.lastSenderId]];
  }
  if (self.hasLastSenderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastSenderName", self.lastSenderName];
  }
  [self.avatarArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", obj];
  }];
  if (self.hasIsScreen) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isScreen", [NSNumber numberWithInteger:self.isScreen]];
  }
  if (self.hasIsRemind) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isRemind", [NSNumber numberWithInteger:self.isRemind]];
  }
  if (self.hasRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remark", self.remark];
  }
  if (self.hasInitial) {
    [output appendFormat:@"%@%@: %@\n", indent, @"initial", self.initial];
  }
  if (self.hasWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weight", [NSNumber numberWithInteger:self.weight]];
  }
  if (self.hasNamePinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyin", self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyinJ", self.namePinyinJ];
  }
  if (self.hasMemberCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberCount", [NSNumber numberWithInteger:self.memberCount]];
  }
  if (self.hasInitSeqid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"initSeqid", [NSNumber numberWithInteger:self.initSeqid]];
  }
  if (self.hasReadSeqid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readSeqid", [NSNumber numberWithInteger:self.readSeqid]];
  }
  if (self.hasCreatorUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"creatorUid", [NSNumber numberWithInteger:self.creatorUid]];
  }
  [self.baseUsersArray enumerateObjectsUsingBlock:^(PbCltGroupBaseUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"baseUsers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasGroupName) {
    [dictionary setObject: self.groupName forKey: @"groupName"];
  }
  if (self.hasGroupDesc) {
    [dictionary setObject: self.groupDesc forKey: @"groupDesc"];
  }
  if (self.hasGroupType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.groupType] forKey: @"groupType"];
  }
  if (self.hasSeq) {
    [dictionary setObject: [NSNumber numberWithInteger:self.seq] forKey: @"seq"];
  }
  if (self.hasLastMsg) {
    [dictionary setObject: self.lastMsg forKey: @"lastMsg"];
  }
  if (self.hasLastMsgTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.lastMsgTime] forKey: @"lastMsgTime"];
  }
  if (self.hasLastMsgType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.lastMsgType] forKey: @"lastMsgType"];
  }
  if (self.hasLastSenderId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.lastSenderId] forKey: @"lastSenderId"];
  }
  if (self.hasLastSenderName) {
    [dictionary setObject: self.lastSenderName forKey: @"lastSenderName"];
  }
  [dictionary setObject:self.avatar forKey: @"avatar"];
  if (self.hasIsScreen) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isScreen] forKey: @"isScreen"];
  }
  if (self.hasIsRemind) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isRemind] forKey: @"isRemind"];
  }
  if (self.hasRemark) {
    [dictionary setObject: self.remark forKey: @"remark"];
  }
  if (self.hasInitial) {
    [dictionary setObject: self.initial forKey: @"initial"];
  }
  if (self.hasWeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weight] forKey: @"weight"];
  }
  if (self.hasNamePinyin) {
    [dictionary setObject: self.namePinyin forKey: @"namePinyin"];
  }
  if (self.hasNamePinyinJ) {
    [dictionary setObject: self.namePinyinJ forKey: @"namePinyinJ"];
  }
  if (self.hasMemberCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.memberCount] forKey: @"memberCount"];
  }
  if (self.hasInitSeqid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.initSeqid] forKey: @"initSeqid"];
  }
  if (self.hasReadSeqid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.readSeqid] forKey: @"readSeqid"];
  }
  if (self.hasCreatorUid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.creatorUid] forKey: @"creatorUid"];
  }
  for (PbCltGroupBaseUser* element in self.baseUsersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"baseUsers"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltGroupItem class]]) {
    return NO;
  }
  PbCltGroupItem *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupDesc == otherMessage.hasGroupDesc &&
      (!self.hasGroupDesc || [self.groupDesc isEqual:otherMessage.groupDesc]) &&
      self.hasGroupType == otherMessage.hasGroupType &&
      (!self.hasGroupType || self.groupType == otherMessage.groupType) &&
      self.hasSeq == otherMessage.hasSeq &&
      (!self.hasSeq || self.seq == otherMessage.seq) &&
      self.hasLastMsg == otherMessage.hasLastMsg &&
      (!self.hasLastMsg || [self.lastMsg isEqual:otherMessage.lastMsg]) &&
      self.hasLastMsgTime == otherMessage.hasLastMsgTime &&
      (!self.hasLastMsgTime || self.lastMsgTime == otherMessage.lastMsgTime) &&
      self.hasLastMsgType == otherMessage.hasLastMsgType &&
      (!self.hasLastMsgType || self.lastMsgType == otherMessage.lastMsgType) &&
      self.hasLastSenderId == otherMessage.hasLastSenderId &&
      (!self.hasLastSenderId || self.lastSenderId == otherMessage.lastSenderId) &&
      self.hasLastSenderName == otherMessage.hasLastSenderName &&
      (!self.hasLastSenderName || [self.lastSenderName isEqual:otherMessage.lastSenderName]) &&
      [self.avatarArray isEqualToArray:otherMessage.avatarArray] &&
      self.hasIsScreen == otherMessage.hasIsScreen &&
      (!self.hasIsScreen || self.isScreen == otherMessage.isScreen) &&
      self.hasIsRemind == otherMessage.hasIsRemind &&
      (!self.hasIsRemind || self.isRemind == otherMessage.isRemind) &&
      self.hasRemark == otherMessage.hasRemark &&
      (!self.hasRemark || [self.remark isEqual:otherMessage.remark]) &&
      self.hasInitial == otherMessage.hasInitial &&
      (!self.hasInitial || [self.initial isEqual:otherMessage.initial]) &&
      self.hasWeight == otherMessage.hasWeight &&
      (!self.hasWeight || self.weight == otherMessage.weight) &&
      self.hasNamePinyin == otherMessage.hasNamePinyin &&
      (!self.hasNamePinyin || [self.namePinyin isEqual:otherMessage.namePinyin]) &&
      self.hasNamePinyinJ == otherMessage.hasNamePinyinJ &&
      (!self.hasNamePinyinJ || [self.namePinyinJ isEqual:otherMessage.namePinyinJ]) &&
      self.hasMemberCount == otherMessage.hasMemberCount &&
      (!self.hasMemberCount || self.memberCount == otherMessage.memberCount) &&
      self.hasInitSeqid == otherMessage.hasInitSeqid &&
      (!self.hasInitSeqid || self.initSeqid == otherMessage.initSeqid) &&
      self.hasReadSeqid == otherMessage.hasReadSeqid &&
      (!self.hasReadSeqid || self.readSeqid == otherMessage.readSeqid) &&
      self.hasCreatorUid == otherMessage.hasCreatorUid &&
      (!self.hasCreatorUid || self.creatorUid == otherMessage.creatorUid) &&
      [self.baseUsersArray isEqualToArray:otherMessage.baseUsersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupDesc) {
    hashCode = hashCode * 31 + [self.groupDesc hash];
  }
  if (self.hasGroupType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupType] hash];
  }
  if (self.hasSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seq] hash];
  }
  if (self.hasLastMsg) {
    hashCode = hashCode * 31 + [self.lastMsg hash];
  }
  if (self.hasLastMsgTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.lastMsgTime] hash];
  }
  if (self.hasLastMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.lastMsgType] hash];
  }
  if (self.hasLastSenderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.lastSenderId] hash];
  }
  if (self.hasLastSenderName) {
    hashCode = hashCode * 31 + [self.lastSenderName hash];
  }
  [self.avatarArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasIsScreen) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isScreen] hash];
  }
  if (self.hasIsRemind) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isRemind] hash];
  }
  if (self.hasRemark) {
    hashCode = hashCode * 31 + [self.remark hash];
  }
  if (self.hasInitial) {
    hashCode = hashCode * 31 + [self.initial hash];
  }
  if (self.hasWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weight] hash];
  }
  if (self.hasNamePinyin) {
    hashCode = hashCode * 31 + [self.namePinyin hash];
  }
  if (self.hasNamePinyinJ) {
    hashCode = hashCode * 31 + [self.namePinyinJ hash];
  }
  if (self.hasMemberCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.memberCount] hash];
  }
  if (self.hasInitSeqid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.initSeqid] hash];
  }
  if (self.hasReadSeqid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.readSeqid] hash];
  }
  if (self.hasCreatorUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.creatorUid] hash];
  }
  [self.baseUsersArray enumerateObjectsUsingBlock:^(PbCltGroupBaseUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltGroupItemBuilder()
@property (strong) PbCltGroupItem* resultPbCltGroupItem;
@end

@implementation PbCltGroupItemBuilder
@synthesize resultPbCltGroupItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltGroupItem = [[PbCltGroupItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltGroupItem;
}
- (PbCltGroupItemBuilder*) clear {
  self.resultPbCltGroupItem = [[PbCltGroupItem alloc] init];
  return self;
}
- (PbCltGroupItemBuilder*) clone {
  return [PbCltGroupItem builderWithPrototype:resultPbCltGroupItem];
}
- (PbCltGroupItem*) defaultInstance {
  return [PbCltGroupItem defaultInstance];
}
- (PbCltGroupItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltGroupItem*) buildPartial {
  PbCltGroupItem* returnMe = resultPbCltGroupItem;
  self.resultPbCltGroupItem = nil;
  return returnMe;
}
- (PbCltGroupItemBuilder*) mergeFrom:(PbCltGroupItem*) other {
  if (other == [PbCltGroupItem defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupDesc) {
    [self setGroupDesc:other.groupDesc];
  }
  if (other.hasGroupType) {
    [self setGroupType:other.groupType];
  }
  if (other.hasSeq) {
    [self setSeq:other.seq];
  }
  if (other.hasLastMsg) {
    [self setLastMsg:other.lastMsg];
  }
  if (other.hasLastMsgTime) {
    [self setLastMsgTime:other.lastMsgTime];
  }
  if (other.hasLastMsgType) {
    [self setLastMsgType:other.lastMsgType];
  }
  if (other.hasLastSenderId) {
    [self setLastSenderId:other.lastSenderId];
  }
  if (other.hasLastSenderName) {
    [self setLastSenderName:other.lastSenderName];
  }
  if (other.avatarArray.count > 0) {
    if (resultPbCltGroupItem.avatarArray == nil) {
      resultPbCltGroupItem.avatarArray = [[NSMutableArray alloc] initWithArray:other.avatarArray];
    } else {
      [resultPbCltGroupItem.avatarArray addObjectsFromArray:other.avatarArray];
    }
  }
  if (other.hasIsScreen) {
    [self setIsScreen:other.isScreen];
  }
  if (other.hasIsRemind) {
    [self setIsRemind:other.isRemind];
  }
  if (other.hasRemark) {
    [self setRemark:other.remark];
  }
  if (other.hasInitial) {
    [self setInitial:other.initial];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasNamePinyin) {
    [self setNamePinyin:other.namePinyin];
  }
  if (other.hasNamePinyinJ) {
    [self setNamePinyinJ:other.namePinyinJ];
  }
  if (other.hasMemberCount) {
    [self setMemberCount:other.memberCount];
  }
  if (other.hasInitSeqid) {
    [self setInitSeqid:other.initSeqid];
  }
  if (other.hasReadSeqid) {
    [self setReadSeqid:other.readSeqid];
  }
  if (other.hasCreatorUid) {
    [self setCreatorUid:other.creatorUid];
  }
  if (other.baseUsersArray.count > 0) {
    if (resultPbCltGroupItem.baseUsersArray == nil) {
      resultPbCltGroupItem.baseUsersArray = [[NSMutableArray alloc] initWithArray:other.baseUsersArray];
    } else {
      [resultPbCltGroupItem.baseUsersArray addObjectsFromArray:other.baseUsersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltGroupItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltGroupItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 18: {
        [self setGroupName:[input readString]];
        break;
      }
      case 26: {
        [self setGroupDesc:[input readString]];
        break;
      }
      case 32: {
        [self setGroupType:[input readInt32]];
        break;
      }
      case 40: {
        [self setSeq:[input readInt32]];
        break;
      }
      case 50: {
        [self setLastMsg:[input readString]];
        break;
      }
      case 56: {
        [self setLastMsgTime:[input readInt32]];
        break;
      }
      case 64: {
        [self setLastMsgType:[input readInt32]];
        break;
      }
      case 72: {
        [self setLastSenderId:[input readInt32]];
        break;
      }
      case 82: {
        [self setLastSenderName:[input readString]];
        break;
      }
      case 90: {
        [self addAvatar:[input readString]];
        break;
      }
      case 96: {
        [self setIsScreen:[input readInt32]];
        break;
      }
      case 104: {
        [self setIsRemind:[input readInt32]];
        break;
      }
      case 114: {
        [self setRemark:[input readString]];
        break;
      }
      case 122: {
        [self setInitial:[input readString]];
        break;
      }
      case 128: {
        [self setWeight:[input readInt32]];
        break;
      }
      case 138: {
        [self setNamePinyin:[input readString]];
        break;
      }
      case 146: {
        [self setNamePinyinJ:[input readString]];
        break;
      }
      case 152: {
        [self setMemberCount:[input readInt32]];
        break;
      }
      case 160: {
        [self setInitSeqid:[input readInt32]];
        break;
      }
      case 168: {
        [self setReadSeqid:[input readInt32]];
        break;
      }
      case 176: {
        [self setCreatorUid:[input readInt32]];
        break;
      }
      case 186: {
        PbCltGroupBaseUserBuilder* subBuilder = [PbCltGroupBaseUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBaseUsers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultPbCltGroupItem.hasGroupId;
}
- (NSString*) groupId {
  return resultPbCltGroupItem.groupId;
}
- (PbCltGroupItemBuilder*) setGroupId:(NSString*) value {
  resultPbCltGroupItem.hasGroupId = YES;
  resultPbCltGroupItem.groupId = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearGroupId {
  resultPbCltGroupItem.hasGroupId = NO;
  resultPbCltGroupItem.groupId = @"";
  return self;
}
- (BOOL) hasGroupName {
  return resultPbCltGroupItem.hasGroupName;
}
- (NSString*) groupName {
  return resultPbCltGroupItem.groupName;
}
- (PbCltGroupItemBuilder*) setGroupName:(NSString*) value {
  resultPbCltGroupItem.hasGroupName = YES;
  resultPbCltGroupItem.groupName = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearGroupName {
  resultPbCltGroupItem.hasGroupName = NO;
  resultPbCltGroupItem.groupName = @"";
  return self;
}
- (BOOL) hasGroupDesc {
  return resultPbCltGroupItem.hasGroupDesc;
}
- (NSString*) groupDesc {
  return resultPbCltGroupItem.groupDesc;
}
- (PbCltGroupItemBuilder*) setGroupDesc:(NSString*) value {
  resultPbCltGroupItem.hasGroupDesc = YES;
  resultPbCltGroupItem.groupDesc = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearGroupDesc {
  resultPbCltGroupItem.hasGroupDesc = NO;
  resultPbCltGroupItem.groupDesc = @"";
  return self;
}
- (BOOL) hasGroupType {
  return resultPbCltGroupItem.hasGroupType;
}
- (SInt32) groupType {
  return resultPbCltGroupItem.groupType;
}
- (PbCltGroupItemBuilder*) setGroupType:(SInt32) value {
  resultPbCltGroupItem.hasGroupType = YES;
  resultPbCltGroupItem.groupType = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearGroupType {
  resultPbCltGroupItem.hasGroupType = NO;
  resultPbCltGroupItem.groupType = 0;
  return self;
}
- (BOOL) hasSeq {
  return resultPbCltGroupItem.hasSeq;
}
- (SInt32) seq {
  return resultPbCltGroupItem.seq;
}
- (PbCltGroupItemBuilder*) setSeq:(SInt32) value {
  resultPbCltGroupItem.hasSeq = YES;
  resultPbCltGroupItem.seq = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearSeq {
  resultPbCltGroupItem.hasSeq = NO;
  resultPbCltGroupItem.seq = 0;
  return self;
}
- (BOOL) hasLastMsg {
  return resultPbCltGroupItem.hasLastMsg;
}
- (NSString*) lastMsg {
  return resultPbCltGroupItem.lastMsg;
}
- (PbCltGroupItemBuilder*) setLastMsg:(NSString*) value {
  resultPbCltGroupItem.hasLastMsg = YES;
  resultPbCltGroupItem.lastMsg = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearLastMsg {
  resultPbCltGroupItem.hasLastMsg = NO;
  resultPbCltGroupItem.lastMsg = @"";
  return self;
}
- (BOOL) hasLastMsgTime {
  return resultPbCltGroupItem.hasLastMsgTime;
}
- (SInt32) lastMsgTime {
  return resultPbCltGroupItem.lastMsgTime;
}
- (PbCltGroupItemBuilder*) setLastMsgTime:(SInt32) value {
  resultPbCltGroupItem.hasLastMsgTime = YES;
  resultPbCltGroupItem.lastMsgTime = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearLastMsgTime {
  resultPbCltGroupItem.hasLastMsgTime = NO;
  resultPbCltGroupItem.lastMsgTime = 0;
  return self;
}
- (BOOL) hasLastMsgType {
  return resultPbCltGroupItem.hasLastMsgType;
}
- (SInt32) lastMsgType {
  return resultPbCltGroupItem.lastMsgType;
}
- (PbCltGroupItemBuilder*) setLastMsgType:(SInt32) value {
  resultPbCltGroupItem.hasLastMsgType = YES;
  resultPbCltGroupItem.lastMsgType = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearLastMsgType {
  resultPbCltGroupItem.hasLastMsgType = NO;
  resultPbCltGroupItem.lastMsgType = 0;
  return self;
}
- (BOOL) hasLastSenderId {
  return resultPbCltGroupItem.hasLastSenderId;
}
- (SInt32) lastSenderId {
  return resultPbCltGroupItem.lastSenderId;
}
- (PbCltGroupItemBuilder*) setLastSenderId:(SInt32) value {
  resultPbCltGroupItem.hasLastSenderId = YES;
  resultPbCltGroupItem.lastSenderId = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearLastSenderId {
  resultPbCltGroupItem.hasLastSenderId = NO;
  resultPbCltGroupItem.lastSenderId = 0;
  return self;
}
- (BOOL) hasLastSenderName {
  return resultPbCltGroupItem.hasLastSenderName;
}
- (NSString*) lastSenderName {
  return resultPbCltGroupItem.lastSenderName;
}
- (PbCltGroupItemBuilder*) setLastSenderName:(NSString*) value {
  resultPbCltGroupItem.hasLastSenderName = YES;
  resultPbCltGroupItem.lastSenderName = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearLastSenderName {
  resultPbCltGroupItem.hasLastSenderName = NO;
  resultPbCltGroupItem.lastSenderName = @"";
  return self;
}
- (NSMutableArray *)avatar {
  return resultPbCltGroupItem.avatarArray;
}
- (NSString*)avatarAtIndex:(NSUInteger)index {
  return [resultPbCltGroupItem avatarAtIndex:index];
}
- (PbCltGroupItemBuilder *)addAvatar:(NSString*)value {
  if (resultPbCltGroupItem.avatarArray == nil) {
    resultPbCltGroupItem.avatarArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltGroupItem.avatarArray addObject:value];
  return self;
}
- (PbCltGroupItemBuilder *)setAvatarArray:(NSArray *)array {
  resultPbCltGroupItem.avatarArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PbCltGroupItemBuilder *)clearAvatar {
  resultPbCltGroupItem.avatarArray = nil;
  return self;
}
- (BOOL) hasIsScreen {
  return resultPbCltGroupItem.hasIsScreen;
}
- (SInt32) isScreen {
  return resultPbCltGroupItem.isScreen;
}
- (PbCltGroupItemBuilder*) setIsScreen:(SInt32) value {
  resultPbCltGroupItem.hasIsScreen = YES;
  resultPbCltGroupItem.isScreen = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearIsScreen {
  resultPbCltGroupItem.hasIsScreen = NO;
  resultPbCltGroupItem.isScreen = 0;
  return self;
}
- (BOOL) hasIsRemind {
  return resultPbCltGroupItem.hasIsRemind;
}
- (SInt32) isRemind {
  return resultPbCltGroupItem.isRemind;
}
- (PbCltGroupItemBuilder*) setIsRemind:(SInt32) value {
  resultPbCltGroupItem.hasIsRemind = YES;
  resultPbCltGroupItem.isRemind = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearIsRemind {
  resultPbCltGroupItem.hasIsRemind = NO;
  resultPbCltGroupItem.isRemind = 0;
  return self;
}
- (BOOL) hasRemark {
  return resultPbCltGroupItem.hasRemark;
}
- (NSString*) remark {
  return resultPbCltGroupItem.remark;
}
- (PbCltGroupItemBuilder*) setRemark:(NSString*) value {
  resultPbCltGroupItem.hasRemark = YES;
  resultPbCltGroupItem.remark = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearRemark {
  resultPbCltGroupItem.hasRemark = NO;
  resultPbCltGroupItem.remark = @"";
  return self;
}
- (BOOL) hasInitial {
  return resultPbCltGroupItem.hasInitial;
}
- (NSString*) initial {
  return resultPbCltGroupItem.initial;
}
- (PbCltGroupItemBuilder*) setInitial:(NSString*) value {
  resultPbCltGroupItem.hasInitial = YES;
  resultPbCltGroupItem.initial = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearInitial {
  resultPbCltGroupItem.hasInitial = NO;
  resultPbCltGroupItem.initial = @"";
  return self;
}
- (BOOL) hasWeight {
  return resultPbCltGroupItem.hasWeight;
}
- (SInt32) weight {
  return resultPbCltGroupItem.weight;
}
- (PbCltGroupItemBuilder*) setWeight:(SInt32) value {
  resultPbCltGroupItem.hasWeight = YES;
  resultPbCltGroupItem.weight = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearWeight {
  resultPbCltGroupItem.hasWeight = NO;
  resultPbCltGroupItem.weight = 0;
  return self;
}
- (BOOL) hasNamePinyin {
  return resultPbCltGroupItem.hasNamePinyin;
}
- (NSString*) namePinyin {
  return resultPbCltGroupItem.namePinyin;
}
- (PbCltGroupItemBuilder*) setNamePinyin:(NSString*) value {
  resultPbCltGroupItem.hasNamePinyin = YES;
  resultPbCltGroupItem.namePinyin = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearNamePinyin {
  resultPbCltGroupItem.hasNamePinyin = NO;
  resultPbCltGroupItem.namePinyin = @"";
  return self;
}
- (BOOL) hasNamePinyinJ {
  return resultPbCltGroupItem.hasNamePinyinJ;
}
- (NSString*) namePinyinJ {
  return resultPbCltGroupItem.namePinyinJ;
}
- (PbCltGroupItemBuilder*) setNamePinyinJ:(NSString*) value {
  resultPbCltGroupItem.hasNamePinyinJ = YES;
  resultPbCltGroupItem.namePinyinJ = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearNamePinyinJ {
  resultPbCltGroupItem.hasNamePinyinJ = NO;
  resultPbCltGroupItem.namePinyinJ = @"";
  return self;
}
- (BOOL) hasMemberCount {
  return resultPbCltGroupItem.hasMemberCount;
}
- (SInt32) memberCount {
  return resultPbCltGroupItem.memberCount;
}
- (PbCltGroupItemBuilder*) setMemberCount:(SInt32) value {
  resultPbCltGroupItem.hasMemberCount = YES;
  resultPbCltGroupItem.memberCount = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearMemberCount {
  resultPbCltGroupItem.hasMemberCount = NO;
  resultPbCltGroupItem.memberCount = 0;
  return self;
}
- (BOOL) hasInitSeqid {
  return resultPbCltGroupItem.hasInitSeqid;
}
- (SInt32) initSeqid {
  return resultPbCltGroupItem.initSeqid;
}
- (PbCltGroupItemBuilder*) setInitSeqid:(SInt32) value {
  resultPbCltGroupItem.hasInitSeqid = YES;
  resultPbCltGroupItem.initSeqid = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearInitSeqid {
  resultPbCltGroupItem.hasInitSeqid = NO;
  resultPbCltGroupItem.initSeqid = 0;
  return self;
}
- (BOOL) hasReadSeqid {
  return resultPbCltGroupItem.hasReadSeqid;
}
- (SInt32) readSeqid {
  return resultPbCltGroupItem.readSeqid;
}
- (PbCltGroupItemBuilder*) setReadSeqid:(SInt32) value {
  resultPbCltGroupItem.hasReadSeqid = YES;
  resultPbCltGroupItem.readSeqid = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearReadSeqid {
  resultPbCltGroupItem.hasReadSeqid = NO;
  resultPbCltGroupItem.readSeqid = 0;
  return self;
}
- (BOOL) hasCreatorUid {
  return resultPbCltGroupItem.hasCreatorUid;
}
- (SInt32) creatorUid {
  return resultPbCltGroupItem.creatorUid;
}
- (PbCltGroupItemBuilder*) setCreatorUid:(SInt32) value {
  resultPbCltGroupItem.hasCreatorUid = YES;
  resultPbCltGroupItem.creatorUid = value;
  return self;
}
- (PbCltGroupItemBuilder*) clearCreatorUid {
  resultPbCltGroupItem.hasCreatorUid = NO;
  resultPbCltGroupItem.creatorUid = 0;
  return self;
}
- (NSMutableArray *)baseUsers {
  return resultPbCltGroupItem.baseUsersArray;
}
- (PbCltGroupBaseUser*)baseUsersAtIndex:(NSUInteger)index {
  return [resultPbCltGroupItem baseUsersAtIndex:index];
}
- (PbCltGroupItemBuilder *)addBaseUsers:(PbCltGroupBaseUser*)value {
  if (resultPbCltGroupItem.baseUsersArray == nil) {
    resultPbCltGroupItem.baseUsersArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltGroupItem.baseUsersArray addObject:value];
  return self;
}
- (PbCltGroupItemBuilder *)setBaseUsersArray:(NSArray *)array {
  resultPbCltGroupItem.baseUsersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltGroupItemBuilder *)clearBaseUsers {
  resultPbCltGroupItem.baseUsersArray = nil;
  return self;
}
@end

@interface PbCltGroupDetails ()
@property (strong) PbCltGroupItem* groupInfo;
@property (strong) NSMutableArray * membersArray;
@end

@implementation PbCltGroupDetails

- (BOOL) hasGroupInfo {
  return !!hasGroupInfo_;
}
- (void) setHasGroupInfo:(BOOL) _value_ {
  hasGroupInfo_ = !!_value_;
}
@synthesize groupInfo;
@synthesize membersArray;
@dynamic members;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupInfo = [PbCltGroupItem defaultInstance];
  }
  return self;
}
static PbCltGroupDetails* defaultPbCltGroupDetailsInstance = nil;
+ (void) initialize {
  if (self == [PbCltGroupDetails class]) {
    defaultPbCltGroupDetailsInstance = [[PbCltGroupDetails alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltGroupDetailsInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltGroupDetailsInstance;
}
- (NSArray *)members {
  return membersArray;
}
- (PbCltGroupUser*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupInfo) {
    [output writeMessage:1 value:self.groupInfo];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbCltGroupUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupInfo) {
    size_ += computeMessageSize(1, self.groupInfo);
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbCltGroupUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltGroupDetails*) parseFromData:(NSData*) data {
  return (PbCltGroupDetails*)[[[PbCltGroupDetails builder] mergeFromData:data] build];
}
+ (PbCltGroupDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupDetails*)[[[PbCltGroupDetails builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupDetails*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltGroupDetails*)[[[PbCltGroupDetails builder] mergeFromInputStream:input] build];
}
+ (PbCltGroupDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupDetails*)[[[PbCltGroupDetails builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltGroupDetails*)[[[PbCltGroupDetails builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltGroupDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroupDetails*)[[[PbCltGroupDetails builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupDetailsBuilder*) builder {
  return [[PbCltGroupDetailsBuilder alloc] init];
}
+ (PbCltGroupDetailsBuilder*) builderWithPrototype:(PbCltGroupDetails*) prototype {
  return [[PbCltGroupDetails builder] mergeFrom:prototype];
}
- (PbCltGroupDetailsBuilder*) builder {
  return [PbCltGroupDetails builder];
}
- (PbCltGroupDetailsBuilder*) toBuilder {
  return [PbCltGroupDetails builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupInfo"];
    [self.groupInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbCltGroupUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.groupInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"groupInfo"];
  }
  for (PbCltGroupUser* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltGroupDetails class]]) {
    return NO;
  }
  PbCltGroupDetails *otherMessage = other;
  return
      self.hasGroupInfo == otherMessage.hasGroupInfo &&
      (!self.hasGroupInfo || [self.groupInfo isEqual:otherMessage.groupInfo]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupInfo) {
    hashCode = hashCode * 31 + [self.groupInfo hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbCltGroupUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltGroupDetailsBuilder()
@property (strong) PbCltGroupDetails* resultPbCltGroupDetails;
@end

@implementation PbCltGroupDetailsBuilder
@synthesize resultPbCltGroupDetails;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltGroupDetails = [[PbCltGroupDetails alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltGroupDetails;
}
- (PbCltGroupDetailsBuilder*) clear {
  self.resultPbCltGroupDetails = [[PbCltGroupDetails alloc] init];
  return self;
}
- (PbCltGroupDetailsBuilder*) clone {
  return [PbCltGroupDetails builderWithPrototype:resultPbCltGroupDetails];
}
- (PbCltGroupDetails*) defaultInstance {
  return [PbCltGroupDetails defaultInstance];
}
- (PbCltGroupDetails*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltGroupDetails*) buildPartial {
  PbCltGroupDetails* returnMe = resultPbCltGroupDetails;
  self.resultPbCltGroupDetails = nil;
  return returnMe;
}
- (PbCltGroupDetailsBuilder*) mergeFrom:(PbCltGroupDetails*) other {
  if (other == [PbCltGroupDetails defaultInstance]) {
    return self;
  }
  if (other.hasGroupInfo) {
    [self mergeGroupInfo:other.groupInfo];
  }
  if (other.membersArray.count > 0) {
    if (resultPbCltGroupDetails.membersArray == nil) {
      resultPbCltGroupDetails.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultPbCltGroupDetails.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltGroupDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltGroupDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbCltGroupItemBuilder* subBuilder = [PbCltGroupItem builder];
        if (self.hasGroupInfo) {
          [subBuilder mergeFrom:self.groupInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGroupInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PbCltGroupUserBuilder* subBuilder = [PbCltGroupUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupInfo {
  return resultPbCltGroupDetails.hasGroupInfo;
}
- (PbCltGroupItem*) groupInfo {
  return resultPbCltGroupDetails.groupInfo;
}
- (PbCltGroupDetailsBuilder*) setGroupInfo:(PbCltGroupItem*) value {
  resultPbCltGroupDetails.hasGroupInfo = YES;
  resultPbCltGroupDetails.groupInfo = value;
  return self;
}
- (PbCltGroupDetailsBuilder*) setGroupInfoBuilder:(PbCltGroupItemBuilder*) builderForValue {
  return [self setGroupInfo:[builderForValue build]];
}
- (PbCltGroupDetailsBuilder*) mergeGroupInfo:(PbCltGroupItem*) value {
  if (resultPbCltGroupDetails.hasGroupInfo &&
      resultPbCltGroupDetails.groupInfo != [PbCltGroupItem defaultInstance]) {
    resultPbCltGroupDetails.groupInfo =
      [[[PbCltGroupItem builderWithPrototype:resultPbCltGroupDetails.groupInfo] mergeFrom:value] buildPartial];
  } else {
    resultPbCltGroupDetails.groupInfo = value;
  }
  resultPbCltGroupDetails.hasGroupInfo = YES;
  return self;
}
- (PbCltGroupDetailsBuilder*) clearGroupInfo {
  resultPbCltGroupDetails.hasGroupInfo = NO;
  resultPbCltGroupDetails.groupInfo = [PbCltGroupItem defaultInstance];
  return self;
}
- (NSMutableArray *)members {
  return resultPbCltGroupDetails.membersArray;
}
- (PbCltGroupUser*)membersAtIndex:(NSUInteger)index {
  return [resultPbCltGroupDetails membersAtIndex:index];
}
- (PbCltGroupDetailsBuilder *)addMembers:(PbCltGroupUser*)value {
  if (resultPbCltGroupDetails.membersArray == nil) {
    resultPbCltGroupDetails.membersArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltGroupDetails.membersArray addObject:value];
  return self;
}
- (PbCltGroupDetailsBuilder *)setMembersArray:(NSArray *)array {
  resultPbCltGroupDetails.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltGroupDetailsBuilder *)clearMembers {
  resultPbCltGroupDetails.membersArray = nil;
  return self;
}
@end

@interface PbCltGroup ()
@property SInt32 updateType;
@property (strong) NSString* lastUpdateGid;
@property (strong) NSMutableArray * imGroupArray;
@end

@implementation PbCltGroup

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
- (BOOL) hasLastUpdateGid {
  return !!hasLastUpdateGid_;
}
- (void) setHasLastUpdateGid:(BOOL) _value_ {
  hasLastUpdateGid_ = !!_value_;
}
@synthesize lastUpdateGid;
@synthesize imGroupArray;
@dynamic imGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.lastUpdateGid = @"";
  }
  return self;
}
static PbCltGroup* defaultPbCltGroupInstance = nil;
+ (void) initialize {
  if (self == [PbCltGroup class]) {
    defaultPbCltGroupInstance = [[PbCltGroup alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltGroupInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltGroupInstance;
}
- (NSArray *)imGroup {
  return imGroupArray;
}
- (PbCltGroupItem*)imGroupAtIndex:(NSUInteger)index {
  return [imGroupArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  if (self.hasLastUpdateGid) {
    [output writeString:2 value:self.lastUpdateGid];
  }
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbCltGroupItem *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  if (self.hasLastUpdateGid) {
    size_ += computeStringSize(2, self.lastUpdateGid);
  }
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbCltGroupItem *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltGroup*) parseFromData:(NSData*) data {
  return (PbCltGroup*)[[[PbCltGroup builder] mergeFromData:data] build];
}
+ (PbCltGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroup*)[[[PbCltGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroup*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltGroup*)[[[PbCltGroup builder] mergeFromInputStream:input] build];
}
+ (PbCltGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroup*)[[[PbCltGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltGroup*)[[[PbCltGroup builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltGroup*)[[[PbCltGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltGroupBuilder*) builder {
  return [[PbCltGroupBuilder alloc] init];
}
+ (PbCltGroupBuilder*) builderWithPrototype:(PbCltGroup*) prototype {
  return [[PbCltGroup builder] mergeFrom:prototype];
}
- (PbCltGroupBuilder*) builder {
  return [PbCltGroup builder];
}
- (PbCltGroupBuilder*) toBuilder {
  return [PbCltGroup builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  if (self.hasLastUpdateGid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastUpdateGid", self.lastUpdateGid];
  }
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbCltGroupItem *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"imGroup"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  if (self.hasLastUpdateGid) {
    [dictionary setObject: self.lastUpdateGid forKey: @"lastUpdateGid"];
  }
  for (PbCltGroupItem* element in self.imGroupArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"imGroup"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltGroup class]]) {
    return NO;
  }
  PbCltGroup *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      self.hasLastUpdateGid == otherMessage.hasLastUpdateGid &&
      (!self.hasLastUpdateGid || [self.lastUpdateGid isEqual:otherMessage.lastUpdateGid]) &&
      [self.imGroupArray isEqualToArray:otherMessage.imGroupArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  if (self.hasLastUpdateGid) {
    hashCode = hashCode * 31 + [self.lastUpdateGid hash];
  }
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbCltGroupItem *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltGroupBuilder()
@property (strong) PbCltGroup* resultPbCltGroup;
@end

@implementation PbCltGroupBuilder
@synthesize resultPbCltGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltGroup = [[PbCltGroup alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltGroup;
}
- (PbCltGroupBuilder*) clear {
  self.resultPbCltGroup = [[PbCltGroup alloc] init];
  return self;
}
- (PbCltGroupBuilder*) clone {
  return [PbCltGroup builderWithPrototype:resultPbCltGroup];
}
- (PbCltGroup*) defaultInstance {
  return [PbCltGroup defaultInstance];
}
- (PbCltGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltGroup*) buildPartial {
  PbCltGroup* returnMe = resultPbCltGroup;
  self.resultPbCltGroup = nil;
  return returnMe;
}
- (PbCltGroupBuilder*) mergeFrom:(PbCltGroup*) other {
  if (other == [PbCltGroup defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.hasLastUpdateGid) {
    [self setLastUpdateGid:other.lastUpdateGid];
  }
  if (other.imGroupArray.count > 0) {
    if (resultPbCltGroup.imGroupArray == nil) {
      resultPbCltGroup.imGroupArray = [[NSMutableArray alloc] initWithArray:other.imGroupArray];
    } else {
      [resultPbCltGroup.imGroupArray addObjectsFromArray:other.imGroupArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        [self setLastUpdateGid:[input readString]];
        break;
      }
      case 26: {
        PbCltGroupItemBuilder* subBuilder = [PbCltGroupItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addImGroup:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbCltGroup.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbCltGroup.updateType;
}
- (PbCltGroupBuilder*) setUpdateType:(SInt32) value {
  resultPbCltGroup.hasUpdateType = YES;
  resultPbCltGroup.updateType = value;
  return self;
}
- (PbCltGroupBuilder*) clearUpdateType {
  resultPbCltGroup.hasUpdateType = NO;
  resultPbCltGroup.updateType = 0;
  return self;
}
- (BOOL) hasLastUpdateGid {
  return resultPbCltGroup.hasLastUpdateGid;
}
- (NSString*) lastUpdateGid {
  return resultPbCltGroup.lastUpdateGid;
}
- (PbCltGroupBuilder*) setLastUpdateGid:(NSString*) value {
  resultPbCltGroup.hasLastUpdateGid = YES;
  resultPbCltGroup.lastUpdateGid = value;
  return self;
}
- (PbCltGroupBuilder*) clearLastUpdateGid {
  resultPbCltGroup.hasLastUpdateGid = NO;
  resultPbCltGroup.lastUpdateGid = @"";
  return self;
}
- (NSMutableArray *)imGroup {
  return resultPbCltGroup.imGroupArray;
}
- (PbCltGroupItem*)imGroupAtIndex:(NSUInteger)index {
  return [resultPbCltGroup imGroupAtIndex:index];
}
- (PbCltGroupBuilder *)addImGroup:(PbCltGroupItem*)value {
  if (resultPbCltGroup.imGroupArray == nil) {
    resultPbCltGroup.imGroupArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltGroup.imGroupArray addObject:value];
  return self;
}
- (PbCltGroupBuilder *)setImGroupArray:(NSArray *)array {
  resultPbCltGroup.imGroupArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltGroupBuilder *)clearImGroup {
  resultPbCltGroup.imGroupArray = nil;
  return self;
}
@end

@interface PbCltVersion ()
@property SInt32 versionId;
@property (strong) NSString* versionMsg;
@property SInt32 chanelId;
@property (strong) NSString* downUrl;
@end

@implementation PbCltVersion

- (BOOL) hasVersionId {
  return !!hasVersionId_;
}
- (void) setHasVersionId:(BOOL) _value_ {
  hasVersionId_ = !!_value_;
}
@synthesize versionId;
- (BOOL) hasVersionMsg {
  return !!hasVersionMsg_;
}
- (void) setHasVersionMsg:(BOOL) _value_ {
  hasVersionMsg_ = !!_value_;
}
@synthesize versionMsg;
- (BOOL) hasChanelId {
  return !!hasChanelId_;
}
- (void) setHasChanelId:(BOOL) _value_ {
  hasChanelId_ = !!_value_;
}
@synthesize chanelId;
- (BOOL) hasDownUrl {
  return !!hasDownUrl_;
}
- (void) setHasDownUrl:(BOOL) _value_ {
  hasDownUrl_ = !!_value_;
}
@synthesize downUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.versionId = 0;
    self.versionMsg = @"";
    self.chanelId = 0;
    self.downUrl = @"";
  }
  return self;
}
static PbCltVersion* defaultPbCltVersionInstance = nil;
+ (void) initialize {
  if (self == [PbCltVersion class]) {
    defaultPbCltVersionInstance = [[PbCltVersion alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltVersionInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltVersionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersionId) {
    [output writeInt32:1 value:self.versionId];
  }
  if (self.hasVersionMsg) {
    [output writeString:2 value:self.versionMsg];
  }
  if (self.hasChanelId) {
    [output writeInt32:3 value:self.chanelId];
  }
  if (self.hasDownUrl) {
    [output writeString:4 value:self.downUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersionId) {
    size_ += computeInt32Size(1, self.versionId);
  }
  if (self.hasVersionMsg) {
    size_ += computeStringSize(2, self.versionMsg);
  }
  if (self.hasChanelId) {
    size_ += computeInt32Size(3, self.chanelId);
  }
  if (self.hasDownUrl) {
    size_ += computeStringSize(4, self.downUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltVersion*) parseFromData:(NSData*) data {
  return (PbCltVersion*)[[[PbCltVersion builder] mergeFromData:data] build];
}
+ (PbCltVersion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltVersion*)[[[PbCltVersion builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltVersion*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltVersion*)[[[PbCltVersion builder] mergeFromInputStream:input] build];
}
+ (PbCltVersion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltVersion*)[[[PbCltVersion builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltVersion*)[[[PbCltVersion builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltVersion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltVersion*)[[[PbCltVersion builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltVersionBuilder*) builder {
  return [[PbCltVersionBuilder alloc] init];
}
+ (PbCltVersionBuilder*) builderWithPrototype:(PbCltVersion*) prototype {
  return [[PbCltVersion builder] mergeFrom:prototype];
}
- (PbCltVersionBuilder*) builder {
  return [PbCltVersion builder];
}
- (PbCltVersionBuilder*) toBuilder {
  return [PbCltVersion builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionId", [NSNumber numberWithInteger:self.versionId]];
  }
  if (self.hasVersionMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionMsg", self.versionMsg];
  }
  if (self.hasChanelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chanelId", [NSNumber numberWithInteger:self.chanelId]];
  }
  if (self.hasDownUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"downUrl", self.downUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasVersionId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.versionId] forKey: @"versionId"];
  }
  if (self.hasVersionMsg) {
    [dictionary setObject: self.versionMsg forKey: @"versionMsg"];
  }
  if (self.hasChanelId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.chanelId] forKey: @"chanelId"];
  }
  if (self.hasDownUrl) {
    [dictionary setObject: self.downUrl forKey: @"downUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltVersion class]]) {
    return NO;
  }
  PbCltVersion *otherMessage = other;
  return
      self.hasVersionId == otherMessage.hasVersionId &&
      (!self.hasVersionId || self.versionId == otherMessage.versionId) &&
      self.hasVersionMsg == otherMessage.hasVersionMsg &&
      (!self.hasVersionMsg || [self.versionMsg isEqual:otherMessage.versionMsg]) &&
      self.hasChanelId == otherMessage.hasChanelId &&
      (!self.hasChanelId || self.chanelId == otherMessage.chanelId) &&
      self.hasDownUrl == otherMessage.hasDownUrl &&
      (!self.hasDownUrl || [self.downUrl isEqual:otherMessage.downUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.versionId] hash];
  }
  if (self.hasVersionMsg) {
    hashCode = hashCode * 31 + [self.versionMsg hash];
  }
  if (self.hasChanelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.chanelId] hash];
  }
  if (self.hasDownUrl) {
    hashCode = hashCode * 31 + [self.downUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltVersionBuilder()
@property (strong) PbCltVersion* resultPbCltVersion;
@end

@implementation PbCltVersionBuilder
@synthesize resultPbCltVersion;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltVersion = [[PbCltVersion alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltVersion;
}
- (PbCltVersionBuilder*) clear {
  self.resultPbCltVersion = [[PbCltVersion alloc] init];
  return self;
}
- (PbCltVersionBuilder*) clone {
  return [PbCltVersion builderWithPrototype:resultPbCltVersion];
}
- (PbCltVersion*) defaultInstance {
  return [PbCltVersion defaultInstance];
}
- (PbCltVersion*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltVersion*) buildPartial {
  PbCltVersion* returnMe = resultPbCltVersion;
  self.resultPbCltVersion = nil;
  return returnMe;
}
- (PbCltVersionBuilder*) mergeFrom:(PbCltVersion*) other {
  if (other == [PbCltVersion defaultInstance]) {
    return self;
  }
  if (other.hasVersionId) {
    [self setVersionId:other.versionId];
  }
  if (other.hasVersionMsg) {
    [self setVersionMsg:other.versionMsg];
  }
  if (other.hasChanelId) {
    [self setChanelId:other.chanelId];
  }
  if (other.hasDownUrl) {
    [self setDownUrl:other.downUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltVersionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltVersionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersionId:[input readInt32]];
        break;
      }
      case 18: {
        [self setVersionMsg:[input readString]];
        break;
      }
      case 24: {
        [self setChanelId:[input readInt32]];
        break;
      }
      case 34: {
        [self setDownUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasVersionId {
  return resultPbCltVersion.hasVersionId;
}
- (SInt32) versionId {
  return resultPbCltVersion.versionId;
}
- (PbCltVersionBuilder*) setVersionId:(SInt32) value {
  resultPbCltVersion.hasVersionId = YES;
  resultPbCltVersion.versionId = value;
  return self;
}
- (PbCltVersionBuilder*) clearVersionId {
  resultPbCltVersion.hasVersionId = NO;
  resultPbCltVersion.versionId = 0;
  return self;
}
- (BOOL) hasVersionMsg {
  return resultPbCltVersion.hasVersionMsg;
}
- (NSString*) versionMsg {
  return resultPbCltVersion.versionMsg;
}
- (PbCltVersionBuilder*) setVersionMsg:(NSString*) value {
  resultPbCltVersion.hasVersionMsg = YES;
  resultPbCltVersion.versionMsg = value;
  return self;
}
- (PbCltVersionBuilder*) clearVersionMsg {
  resultPbCltVersion.hasVersionMsg = NO;
  resultPbCltVersion.versionMsg = @"";
  return self;
}
- (BOOL) hasChanelId {
  return resultPbCltVersion.hasChanelId;
}
- (SInt32) chanelId {
  return resultPbCltVersion.chanelId;
}
- (PbCltVersionBuilder*) setChanelId:(SInt32) value {
  resultPbCltVersion.hasChanelId = YES;
  resultPbCltVersion.chanelId = value;
  return self;
}
- (PbCltVersionBuilder*) clearChanelId {
  resultPbCltVersion.hasChanelId = NO;
  resultPbCltVersion.chanelId = 0;
  return self;
}
- (BOOL) hasDownUrl {
  return resultPbCltVersion.hasDownUrl;
}
- (NSString*) downUrl {
  return resultPbCltVersion.downUrl;
}
- (PbCltVersionBuilder*) setDownUrl:(NSString*) value {
  resultPbCltVersion.hasDownUrl = YES;
  resultPbCltVersion.downUrl = value;
  return self;
}
- (PbCltVersionBuilder*) clearDownUrl {
  resultPbCltVersion.hasDownUrl = NO;
  resultPbCltVersion.downUrl = @"";
  return self;
}
@end

@interface PbCltUser ()
@property (strong) PbUserInfo* info;
@property (strong) PbCltFriend* friendList;
@property (strong) PbCltFriend* searchFriendList;
@property (strong) PbCltFriend* validationFriendList;
@property (strong) PbCltGroup* imGroup;
@property (strong) PbUserInfo* friendInfo;
@property (strong) PbImMsg* imMsg;
@property (strong) PbCltGroupDetails* imGroupDetails;
@property (strong) PbPrjPrj* prjList;
@property (strong) PbPrjDetails* prjDetails;
@property (strong) PbCltRecommendFriend* nrecommendFriendList;
@property (strong) PbPrjRecommendPrj* recommendPrjList;
@property (strong) NSMutableArray * prjUserArray;
@property (strong) NSMutableArray * prjJoinUserArray;
@property (strong) PbCltVersion* version;
@property (strong) PbPrjPrjWeather* prjWeather;
@property (strong) PbPrjTaskDetails* taskDetails;
@property (strong) PbPrjTaskList* taskList;
@property (strong) PbPrjFile* prjFiles;
@property SInt32 pbCltUserCode;
@property (strong) PbUserCollectionList* collection;
@property SInt32 upstreamTime;
@property (strong) PbCltGroup* prjRecordGroup;
@end

@implementation PbCltUser

- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value_ {
  hasInfo_ = !!_value_;
}
@synthesize info;
- (BOOL) hasFriendList {
  return !!hasFriendList_;
}
- (void) setHasFriendList:(BOOL) _value_ {
  hasFriendList_ = !!_value_;
}
@synthesize friendList;
- (BOOL) hasSearchFriendList {
  return !!hasSearchFriendList_;
}
- (void) setHasSearchFriendList:(BOOL) _value_ {
  hasSearchFriendList_ = !!_value_;
}
@synthesize searchFriendList;
- (BOOL) hasValidationFriendList {
  return !!hasValidationFriendList_;
}
- (void) setHasValidationFriendList:(BOOL) _value_ {
  hasValidationFriendList_ = !!_value_;
}
@synthesize validationFriendList;
- (BOOL) hasImGroup {
  return !!hasImGroup_;
}
- (void) setHasImGroup:(BOOL) _value_ {
  hasImGroup_ = !!_value_;
}
@synthesize imGroup;
- (BOOL) hasFriendInfo {
  return !!hasFriendInfo_;
}
- (void) setHasFriendInfo:(BOOL) _value_ {
  hasFriendInfo_ = !!_value_;
}
@synthesize friendInfo;
- (BOOL) hasImMsg {
  return !!hasImMsg_;
}
- (void) setHasImMsg:(BOOL) _value_ {
  hasImMsg_ = !!_value_;
}
@synthesize imMsg;
- (BOOL) hasImGroupDetails {
  return !!hasImGroupDetails_;
}
- (void) setHasImGroupDetails:(BOOL) _value_ {
  hasImGroupDetails_ = !!_value_;
}
@synthesize imGroupDetails;
- (BOOL) hasPrjList {
  return !!hasPrjList_;
}
- (void) setHasPrjList:(BOOL) _value_ {
  hasPrjList_ = !!_value_;
}
@synthesize prjList;
- (BOOL) hasPrjDetails {
  return !!hasPrjDetails_;
}
- (void) setHasPrjDetails:(BOOL) _value_ {
  hasPrjDetails_ = !!_value_;
}
@synthesize prjDetails;
- (BOOL) hasNrecommendFriendList {
  return !!hasNrecommendFriendList_;
}
- (void) setHasNrecommendFriendList:(BOOL) _value_ {
  hasNrecommendFriendList_ = !!_value_;
}
@synthesize nrecommendFriendList;
- (BOOL) hasRecommendPrjList {
  return !!hasRecommendPrjList_;
}
- (void) setHasRecommendPrjList:(BOOL) _value_ {
  hasRecommendPrjList_ = !!_value_;
}
@synthesize recommendPrjList;
@synthesize prjUserArray;
@dynamic prjUser;
@synthesize prjJoinUserArray;
@dynamic prjJoinUser;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (BOOL) hasPrjWeather {
  return !!hasPrjWeather_;
}
- (void) setHasPrjWeather:(BOOL) _value_ {
  hasPrjWeather_ = !!_value_;
}
@synthesize prjWeather;
- (BOOL) hasTaskDetails {
  return !!hasTaskDetails_;
}
- (void) setHasTaskDetails:(BOOL) _value_ {
  hasTaskDetails_ = !!_value_;
}
@synthesize taskDetails;
- (BOOL) hasTaskList {
  return !!hasTaskList_;
}
- (void) setHasTaskList:(BOOL) _value_ {
  hasTaskList_ = !!_value_;
}
@synthesize taskList;
- (BOOL) hasPrjFiles {
  return !!hasPrjFiles_;
}
- (void) setHasPrjFiles:(BOOL) _value_ {
  hasPrjFiles_ = !!_value_;
}
@synthesize prjFiles;
- (BOOL) hasPbCltUserCode {
  return !!hasPbCltUserCode_;
}
- (void) setHasPbCltUserCode:(BOOL) _value_ {
  hasPbCltUserCode_ = !!_value_;
}
@synthesize pbCltUserCode;
- (BOOL) hasCollection {
  return !!hasCollection_;
}
- (void) setHasCollection:(BOOL) _value_ {
  hasCollection_ = !!_value_;
}
@synthesize collection;
- (BOOL) hasUpstreamTime {
  return !!hasUpstreamTime_;
}
- (void) setHasUpstreamTime:(BOOL) _value_ {
  hasUpstreamTime_ = !!_value_;
}
@synthesize upstreamTime;
- (BOOL) hasPrjRecordGroup {
  return !!hasPrjRecordGroup_;
}
- (void) setHasPrjRecordGroup:(BOOL) _value_ {
  hasPrjRecordGroup_ = !!_value_;
}
@synthesize prjRecordGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.info = [PbUserInfo defaultInstance];
    self.friendList = [PbCltFriend defaultInstance];
    self.searchFriendList = [PbCltFriend defaultInstance];
    self.validationFriendList = [PbCltFriend defaultInstance];
    self.imGroup = [PbCltGroup defaultInstance];
    self.friendInfo = [PbUserInfo defaultInstance];
    self.imMsg = [PbImMsg defaultInstance];
    self.imGroupDetails = [PbCltGroupDetails defaultInstance];
    self.prjList = [PbPrjPrj defaultInstance];
    self.prjDetails = [PbPrjDetails defaultInstance];
    self.nrecommendFriendList = [PbCltRecommendFriend defaultInstance];
    self.recommendPrjList = [PbPrjRecommendPrj defaultInstance];
    self.version = [PbCltVersion defaultInstance];
    self.prjWeather = [PbPrjPrjWeather defaultInstance];
    self.taskDetails = [PbPrjTaskDetails defaultInstance];
    self.taskList = [PbPrjTaskList defaultInstance];
    self.prjFiles = [PbPrjFile defaultInstance];
    self.pbCltUserCode = 0;
    self.collection = [PbUserCollectionList defaultInstance];
    self.upstreamTime = 0;
    self.prjRecordGroup = [PbCltGroup defaultInstance];
  }
  return self;
}
static PbCltUser* defaultPbCltUserInstance = nil;
+ (void) initialize {
  if (self == [PbCltUser class]) {
    defaultPbCltUserInstance = [[PbCltUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbCltUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPbCltUserInstance;
}
- (NSArray *)prjUser {
  return prjUserArray;
}
- (PbPrjUser*)prjUserAtIndex:(NSUInteger)index {
  return [prjUserArray objectAtIndex:index];
}
- (NSArray *)prjJoinUser {
  return prjJoinUserArray;
}
- (PbPrjUser*)prjJoinUserAtIndex:(NSUInteger)index {
  return [prjJoinUserArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInfo) {
    [output writeMessage:1 value:self.info];
  }
  if (self.hasFriendList) {
    [output writeMessage:2 value:self.friendList];
  }
  if (self.hasSearchFriendList) {
    [output writeMessage:3 value:self.searchFriendList];
  }
  if (self.hasValidationFriendList) {
    [output writeMessage:4 value:self.validationFriendList];
  }
  if (self.hasImGroup) {
    [output writeMessage:5 value:self.imGroup];
  }
  if (self.hasFriendInfo) {
    [output writeMessage:6 value:self.friendInfo];
  }
  if (self.hasImMsg) {
    [output writeMessage:7 value:self.imMsg];
  }
  if (self.hasImGroupDetails) {
    [output writeMessage:8 value:self.imGroupDetails];
  }
  if (self.hasPrjList) {
    [output writeMessage:9 value:self.prjList];
  }
  if (self.hasPrjDetails) {
    [output writeMessage:10 value:self.prjDetails];
  }
  if (self.hasNrecommendFriendList) {
    [output writeMessage:11 value:self.nrecommendFriendList];
  }
  if (self.hasRecommendPrjList) {
    [output writeMessage:12 value:self.recommendPrjList];
  }
  [self.prjUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:13 value:element];
  }];
  [self.prjJoinUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:14 value:element];
  }];
  if (self.hasVersion) {
    [output writeMessage:15 value:self.version];
  }
  if (self.hasPrjWeather) {
    [output writeMessage:16 value:self.prjWeather];
  }
  if (self.hasTaskDetails) {
    [output writeMessage:17 value:self.taskDetails];
  }
  if (self.hasTaskList) {
    [output writeMessage:18 value:self.taskList];
  }
  if (self.hasPrjFiles) {
    [output writeMessage:19 value:self.prjFiles];
  }
  if (self.hasPbCltUserCode) {
    [output writeInt32:20 value:self.pbCltUserCode];
  }
  if (self.hasCollection) {
    [output writeMessage:21 value:self.collection];
  }
  if (self.hasUpstreamTime) {
    [output writeInt32:22 value:self.upstreamTime];
  }
  if (self.hasPrjRecordGroup) {
    [output writeMessage:23 value:self.prjRecordGroup];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInfo) {
    size_ += computeMessageSize(1, self.info);
  }
  if (self.hasFriendList) {
    size_ += computeMessageSize(2, self.friendList);
  }
  if (self.hasSearchFriendList) {
    size_ += computeMessageSize(3, self.searchFriendList);
  }
  if (self.hasValidationFriendList) {
    size_ += computeMessageSize(4, self.validationFriendList);
  }
  if (self.hasImGroup) {
    size_ += computeMessageSize(5, self.imGroup);
  }
  if (self.hasFriendInfo) {
    size_ += computeMessageSize(6, self.friendInfo);
  }
  if (self.hasImMsg) {
    size_ += computeMessageSize(7, self.imMsg);
  }
  if (self.hasImGroupDetails) {
    size_ += computeMessageSize(8, self.imGroupDetails);
  }
  if (self.hasPrjList) {
    size_ += computeMessageSize(9, self.prjList);
  }
  if (self.hasPrjDetails) {
    size_ += computeMessageSize(10, self.prjDetails);
  }
  if (self.hasNrecommendFriendList) {
    size_ += computeMessageSize(11, self.nrecommendFriendList);
  }
  if (self.hasRecommendPrjList) {
    size_ += computeMessageSize(12, self.recommendPrjList);
  }
  [self.prjUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(13, element);
  }];
  [self.prjJoinUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(14, element);
  }];
  if (self.hasVersion) {
    size_ += computeMessageSize(15, self.version);
  }
  if (self.hasPrjWeather) {
    size_ += computeMessageSize(16, self.prjWeather);
  }
  if (self.hasTaskDetails) {
    size_ += computeMessageSize(17, self.taskDetails);
  }
  if (self.hasTaskList) {
    size_ += computeMessageSize(18, self.taskList);
  }
  if (self.hasPrjFiles) {
    size_ += computeMessageSize(19, self.prjFiles);
  }
  if (self.hasPbCltUserCode) {
    size_ += computeInt32Size(20, self.pbCltUserCode);
  }
  if (self.hasCollection) {
    size_ += computeMessageSize(21, self.collection);
  }
  if (self.hasUpstreamTime) {
    size_ += computeInt32Size(22, self.upstreamTime);
  }
  if (self.hasPrjRecordGroup) {
    size_ += computeMessageSize(23, self.prjRecordGroup);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbCltUser*) parseFromData:(NSData*) data {
  return (PbCltUser*)[[[PbCltUser builder] mergeFromData:data] build];
}
+ (PbCltUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltUser*)[[[PbCltUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbCltUser*) parseFromInputStream:(NSInputStream*) input {
  return (PbCltUser*)[[[PbCltUser builder] mergeFromInputStream:input] build];
}
+ (PbCltUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltUser*)[[[PbCltUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbCltUser*)[[[PbCltUser builder] mergeFromCodedInputStream:input] build];
}
+ (PbCltUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbCltUser*)[[[PbCltUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbCltUserBuilder*) builder {
  return [[PbCltUserBuilder alloc] init];
}
+ (PbCltUserBuilder*) builderWithPrototype:(PbCltUser*) prototype {
  return [[PbCltUser builder] mergeFrom:prototype];
}
- (PbCltUserBuilder*) builder {
  return [PbCltUser builder];
}
- (PbCltUserBuilder*) toBuilder {
  return [PbCltUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"info"];
    [self.info writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFriendList) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendList"];
    [self.friendList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasSearchFriendList) {
    [output appendFormat:@"%@%@ {\n", indent, @"searchFriendList"];
    [self.searchFriendList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasValidationFriendList) {
    [output appendFormat:@"%@%@ {\n", indent, @"validationFriendList"];
    [self.validationFriendList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasImGroup) {
    [output appendFormat:@"%@%@ {\n", indent, @"imGroup"];
    [self.imGroup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFriendInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendInfo"];
    [self.friendInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasImMsg) {
    [output appendFormat:@"%@%@ {\n", indent, @"imMsg"];
    [self.imMsg writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasImGroupDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"imGroupDetails"];
    [self.imGroupDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPrjList) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjList"];
    [self.prjList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPrjDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjDetails"];
    [self.prjDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNrecommendFriendList) {
    [output appendFormat:@"%@%@ {\n", indent, @"nrecommendFriendList"];
    [self.nrecommendFriendList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasRecommendPrjList) {
    [output appendFormat:@"%@%@ {\n", indent, @"recommendPrjList"];
    [self.recommendPrjList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.prjUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjUser"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.prjJoinUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjJoinUser"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasVersion) {
    [output appendFormat:@"%@%@ {\n", indent, @"version"];
    [self.version writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPrjWeather) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjWeather"];
    [self.prjWeather writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTaskDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"taskDetails"];
    [self.taskDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTaskList) {
    [output appendFormat:@"%@%@ {\n", indent, @"taskList"];
    [self.taskList writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPrjFiles) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjFiles"];
    [self.prjFiles writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPbCltUserCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pbCltUserCode", [NSNumber numberWithInteger:self.pbCltUserCode]];
  }
  if (self.hasCollection) {
    [output appendFormat:@"%@%@ {\n", indent, @"collection"];
    [self.collection writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUpstreamTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"upstreamTime", [NSNumber numberWithInteger:self.upstreamTime]];
  }
  if (self.hasPrjRecordGroup) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjRecordGroup"];
    [self.prjRecordGroup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.info storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"info"];
  }
  if (self.hasFriendList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.friendList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"friendList"];
  }
  if (self.hasSearchFriendList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.searchFriendList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"searchFriendList"];
  }
  if (self.hasValidationFriendList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.validationFriendList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"validationFriendList"];
  }
  if (self.hasImGroup) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.imGroup storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"imGroup"];
  }
  if (self.hasFriendInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.friendInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"friendInfo"];
  }
  if (self.hasImMsg) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.imMsg storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"imMsg"];
  }
  if (self.hasImGroupDetails) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.imGroupDetails storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"imGroupDetails"];
  }
  if (self.hasPrjList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.prjList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"prjList"];
  }
  if (self.hasPrjDetails) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.prjDetails storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"prjDetails"];
  }
  if (self.hasNrecommendFriendList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.nrecommendFriendList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"nrecommendFriendList"];
  }
  if (self.hasRecommendPrjList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.recommendPrjList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"recommendPrjList"];
  }
  for (PbPrjUser* element in self.prjUserArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjUser"];
  }
  for (PbPrjUser* element in self.prjJoinUserArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjJoinUser"];
  }
  if (self.hasVersion) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.version storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"version"];
  }
  if (self.hasPrjWeather) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.prjWeather storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"prjWeather"];
  }
  if (self.hasTaskDetails) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.taskDetails storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"taskDetails"];
  }
  if (self.hasTaskList) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.taskList storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"taskList"];
  }
  if (self.hasPrjFiles) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.prjFiles storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"prjFiles"];
  }
  if (self.hasPbCltUserCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pbCltUserCode] forKey: @"pbCltUserCode"];
  }
  if (self.hasCollection) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.collection storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"collection"];
  }
  if (self.hasUpstreamTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.upstreamTime] forKey: @"upstreamTime"];
  }
  if (self.hasPrjRecordGroup) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.prjRecordGroup storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"prjRecordGroup"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbCltUser class]]) {
    return NO;
  }
  PbCltUser *otherMessage = other;
  return
      self.hasInfo == otherMessage.hasInfo &&
      (!self.hasInfo || [self.info isEqual:otherMessage.info]) &&
      self.hasFriendList == otherMessage.hasFriendList &&
      (!self.hasFriendList || [self.friendList isEqual:otherMessage.friendList]) &&
      self.hasSearchFriendList == otherMessage.hasSearchFriendList &&
      (!self.hasSearchFriendList || [self.searchFriendList isEqual:otherMessage.searchFriendList]) &&
      self.hasValidationFriendList == otherMessage.hasValidationFriendList &&
      (!self.hasValidationFriendList || [self.validationFriendList isEqual:otherMessage.validationFriendList]) &&
      self.hasImGroup == otherMessage.hasImGroup &&
      (!self.hasImGroup || [self.imGroup isEqual:otherMessage.imGroup]) &&
      self.hasFriendInfo == otherMessage.hasFriendInfo &&
      (!self.hasFriendInfo || [self.friendInfo isEqual:otherMessage.friendInfo]) &&
      self.hasImMsg == otherMessage.hasImMsg &&
      (!self.hasImMsg || [self.imMsg isEqual:otherMessage.imMsg]) &&
      self.hasImGroupDetails == otherMessage.hasImGroupDetails &&
      (!self.hasImGroupDetails || [self.imGroupDetails isEqual:otherMessage.imGroupDetails]) &&
      self.hasPrjList == otherMessage.hasPrjList &&
      (!self.hasPrjList || [self.prjList isEqual:otherMessage.prjList]) &&
      self.hasPrjDetails == otherMessage.hasPrjDetails &&
      (!self.hasPrjDetails || [self.prjDetails isEqual:otherMessage.prjDetails]) &&
      self.hasNrecommendFriendList == otherMessage.hasNrecommendFriendList &&
      (!self.hasNrecommendFriendList || [self.nrecommendFriendList isEqual:otherMessage.nrecommendFriendList]) &&
      self.hasRecommendPrjList == otherMessage.hasRecommendPrjList &&
      (!self.hasRecommendPrjList || [self.recommendPrjList isEqual:otherMessage.recommendPrjList]) &&
      [self.prjUserArray isEqualToArray:otherMessage.prjUserArray] &&
      [self.prjJoinUserArray isEqualToArray:otherMessage.prjJoinUserArray] &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
      self.hasPrjWeather == otherMessage.hasPrjWeather &&
      (!self.hasPrjWeather || [self.prjWeather isEqual:otherMessage.prjWeather]) &&
      self.hasTaskDetails == otherMessage.hasTaskDetails &&
      (!self.hasTaskDetails || [self.taskDetails isEqual:otherMessage.taskDetails]) &&
      self.hasTaskList == otherMessage.hasTaskList &&
      (!self.hasTaskList || [self.taskList isEqual:otherMessage.taskList]) &&
      self.hasPrjFiles == otherMessage.hasPrjFiles &&
      (!self.hasPrjFiles || [self.prjFiles isEqual:otherMessage.prjFiles]) &&
      self.hasPbCltUserCode == otherMessage.hasPbCltUserCode &&
      (!self.hasPbCltUserCode || self.pbCltUserCode == otherMessage.pbCltUserCode) &&
      self.hasCollection == otherMessage.hasCollection &&
      (!self.hasCollection || [self.collection isEqual:otherMessage.collection]) &&
      self.hasUpstreamTime == otherMessage.hasUpstreamTime &&
      (!self.hasUpstreamTime || self.upstreamTime == otherMessage.upstreamTime) &&
      self.hasPrjRecordGroup == otherMessage.hasPrjRecordGroup &&
      (!self.hasPrjRecordGroup || [self.prjRecordGroup isEqual:otherMessage.prjRecordGroup]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInfo) {
    hashCode = hashCode * 31 + [self.info hash];
  }
  if (self.hasFriendList) {
    hashCode = hashCode * 31 + [self.friendList hash];
  }
  if (self.hasSearchFriendList) {
    hashCode = hashCode * 31 + [self.searchFriendList hash];
  }
  if (self.hasValidationFriendList) {
    hashCode = hashCode * 31 + [self.validationFriendList hash];
  }
  if (self.hasImGroup) {
    hashCode = hashCode * 31 + [self.imGroup hash];
  }
  if (self.hasFriendInfo) {
    hashCode = hashCode * 31 + [self.friendInfo hash];
  }
  if (self.hasImMsg) {
    hashCode = hashCode * 31 + [self.imMsg hash];
  }
  if (self.hasImGroupDetails) {
    hashCode = hashCode * 31 + [self.imGroupDetails hash];
  }
  if (self.hasPrjList) {
    hashCode = hashCode * 31 + [self.prjList hash];
  }
  if (self.hasPrjDetails) {
    hashCode = hashCode * 31 + [self.prjDetails hash];
  }
  if (self.hasNrecommendFriendList) {
    hashCode = hashCode * 31 + [self.nrecommendFriendList hash];
  }
  if (self.hasRecommendPrjList) {
    hashCode = hashCode * 31 + [self.recommendPrjList hash];
  }
  [self.prjUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.prjJoinUserArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [self.version hash];
  }
  if (self.hasPrjWeather) {
    hashCode = hashCode * 31 + [self.prjWeather hash];
  }
  if (self.hasTaskDetails) {
    hashCode = hashCode * 31 + [self.taskDetails hash];
  }
  if (self.hasTaskList) {
    hashCode = hashCode * 31 + [self.taskList hash];
  }
  if (self.hasPrjFiles) {
    hashCode = hashCode * 31 + [self.prjFiles hash];
  }
  if (self.hasPbCltUserCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pbCltUserCode] hash];
  }
  if (self.hasCollection) {
    hashCode = hashCode * 31 + [self.collection hash];
  }
  if (self.hasUpstreamTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.upstreamTime] hash];
  }
  if (self.hasPrjRecordGroup) {
    hashCode = hashCode * 31 + [self.prjRecordGroup hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbCltUserBuilder()
@property (strong) PbCltUser* resultPbCltUser;
@end

@implementation PbCltUserBuilder
@synthesize resultPbCltUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbCltUser = [[PbCltUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbCltUser;
}
- (PbCltUserBuilder*) clear {
  self.resultPbCltUser = [[PbCltUser alloc] init];
  return self;
}
- (PbCltUserBuilder*) clone {
  return [PbCltUser builderWithPrototype:resultPbCltUser];
}
- (PbCltUser*) defaultInstance {
  return [PbCltUser defaultInstance];
}
- (PbCltUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbCltUser*) buildPartial {
  PbCltUser* returnMe = resultPbCltUser;
  self.resultPbCltUser = nil;
  return returnMe;
}
- (PbCltUserBuilder*) mergeFrom:(PbCltUser*) other {
  if (other == [PbCltUser defaultInstance]) {
    return self;
  }
  if (other.hasInfo) {
    [self mergeInfo:other.info];
  }
  if (other.hasFriendList) {
    [self mergeFriendList:other.friendList];
  }
  if (other.hasSearchFriendList) {
    [self mergeSearchFriendList:other.searchFriendList];
  }
  if (other.hasValidationFriendList) {
    [self mergeValidationFriendList:other.validationFriendList];
  }
  if (other.hasImGroup) {
    [self mergeImGroup:other.imGroup];
  }
  if (other.hasFriendInfo) {
    [self mergeFriendInfo:other.friendInfo];
  }
  if (other.hasImMsg) {
    [self mergeImMsg:other.imMsg];
  }
  if (other.hasImGroupDetails) {
    [self mergeImGroupDetails:other.imGroupDetails];
  }
  if (other.hasPrjList) {
    [self mergePrjList:other.prjList];
  }
  if (other.hasPrjDetails) {
    [self mergePrjDetails:other.prjDetails];
  }
  if (other.hasNrecommendFriendList) {
    [self mergeNrecommendFriendList:other.nrecommendFriendList];
  }
  if (other.hasRecommendPrjList) {
    [self mergeRecommendPrjList:other.recommendPrjList];
  }
  if (other.prjUserArray.count > 0) {
    if (resultPbCltUser.prjUserArray == nil) {
      resultPbCltUser.prjUserArray = [[NSMutableArray alloc] initWithArray:other.prjUserArray];
    } else {
      [resultPbCltUser.prjUserArray addObjectsFromArray:other.prjUserArray];
    }
  }
  if (other.prjJoinUserArray.count > 0) {
    if (resultPbCltUser.prjJoinUserArray == nil) {
      resultPbCltUser.prjJoinUserArray = [[NSMutableArray alloc] initWithArray:other.prjJoinUserArray];
    } else {
      [resultPbCltUser.prjJoinUserArray addObjectsFromArray:other.prjJoinUserArray];
    }
  }
  if (other.hasVersion) {
    [self mergeVersion:other.version];
  }
  if (other.hasPrjWeather) {
    [self mergePrjWeather:other.prjWeather];
  }
  if (other.hasTaskDetails) {
    [self mergeTaskDetails:other.taskDetails];
  }
  if (other.hasTaskList) {
    [self mergeTaskList:other.taskList];
  }
  if (other.hasPrjFiles) {
    [self mergePrjFiles:other.prjFiles];
  }
  if (other.hasPbCltUserCode) {
    [self setPbCltUserCode:other.pbCltUserCode];
  }
  if (other.hasCollection) {
    [self mergeCollection:other.collection];
  }
  if (other.hasUpstreamTime) {
    [self setUpstreamTime:other.upstreamTime];
  }
  if (other.hasPrjRecordGroup) {
    [self mergePrjRecordGroup:other.prjRecordGroup];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbCltUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbCltUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbUserInfoBuilder* subBuilder = [PbUserInfo builder];
        if (self.hasInfo) {
          [subBuilder mergeFrom:self.info];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PbCltFriendBuilder* subBuilder = [PbCltFriend builder];
        if (self.hasFriendList) {
          [subBuilder mergeFrom:self.friendList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFriendList:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PbCltFriendBuilder* subBuilder = [PbCltFriend builder];
        if (self.hasSearchFriendList) {
          [subBuilder mergeFrom:self.searchFriendList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSearchFriendList:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        PbCltFriendBuilder* subBuilder = [PbCltFriend builder];
        if (self.hasValidationFriendList) {
          [subBuilder mergeFrom:self.validationFriendList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setValidationFriendList:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        PbCltGroupBuilder* subBuilder = [PbCltGroup builder];
        if (self.hasImGroup) {
          [subBuilder mergeFrom:self.imGroup];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setImGroup:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PbUserInfoBuilder* subBuilder = [PbUserInfo builder];
        if (self.hasFriendInfo) {
          [subBuilder mergeFrom:self.friendInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFriendInfo:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PbImMsgBuilder* subBuilder = [PbImMsg builder];
        if (self.hasImMsg) {
          [subBuilder mergeFrom:self.imMsg];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setImMsg:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PbCltGroupDetailsBuilder* subBuilder = [PbCltGroupDetails builder];
        if (self.hasImGroupDetails) {
          [subBuilder mergeFrom:self.imGroupDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setImGroupDetails:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        PbPrjPrjBuilder* subBuilder = [PbPrjPrj builder];
        if (self.hasPrjList) {
          [subBuilder mergeFrom:self.prjList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPrjList:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        PbPrjDetailsBuilder* subBuilder = [PbPrjDetails builder];
        if (self.hasPrjDetails) {
          [subBuilder mergeFrom:self.prjDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPrjDetails:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        PbCltRecommendFriendBuilder* subBuilder = [PbCltRecommendFriend builder];
        if (self.hasNrecommendFriendList) {
          [subBuilder mergeFrom:self.nrecommendFriendList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setNrecommendFriendList:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        PbPrjRecommendPrjBuilder* subBuilder = [PbPrjRecommendPrj builder];
        if (self.hasRecommendPrjList) {
          [subBuilder mergeFrom:self.recommendPrjList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecommendPrjList:[subBuilder buildPartial]];
        break;
      }
      case 106: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjUser:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjJoinUser:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        PbCltVersionBuilder* subBuilder = [PbCltVersion builder];
        if (self.hasVersion) {
          [subBuilder mergeFrom:self.version];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVersion:[subBuilder buildPartial]];
        break;
      }
      case 130: {
        PbPrjPrjWeatherBuilder* subBuilder = [PbPrjPrjWeather builder];
        if (self.hasPrjWeather) {
          [subBuilder mergeFrom:self.prjWeather];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPrjWeather:[subBuilder buildPartial]];
        break;
      }
      case 138: {
        PbPrjTaskDetailsBuilder* subBuilder = [PbPrjTaskDetails builder];
        if (self.hasTaskDetails) {
          [subBuilder mergeFrom:self.taskDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTaskDetails:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        PbPrjTaskListBuilder* subBuilder = [PbPrjTaskList builder];
        if (self.hasTaskList) {
          [subBuilder mergeFrom:self.taskList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTaskList:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        PbPrjFileBuilder* subBuilder = [PbPrjFile builder];
        if (self.hasPrjFiles) {
          [subBuilder mergeFrom:self.prjFiles];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPrjFiles:[subBuilder buildPartial]];
        break;
      }
      case 160: {
        [self setPbCltUserCode:[input readInt32]];
        break;
      }
      case 170: {
        PbUserCollectionListBuilder* subBuilder = [PbUserCollectionList builder];
        if (self.hasCollection) {
          [subBuilder mergeFrom:self.collection];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCollection:[subBuilder buildPartial]];
        break;
      }
      case 176: {
        [self setUpstreamTime:[input readInt32]];
        break;
      }
      case 186: {
        PbCltGroupBuilder* subBuilder = [PbCltGroup builder];
        if (self.hasPrjRecordGroup) {
          [subBuilder mergeFrom:self.prjRecordGroup];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPrjRecordGroup:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasInfo {
  return resultPbCltUser.hasInfo;
}
- (PbUserInfo*) info {
  return resultPbCltUser.info;
}
- (PbCltUserBuilder*) setInfo:(PbUserInfo*) value {
  resultPbCltUser.hasInfo = YES;
  resultPbCltUser.info = value;
  return self;
}
- (PbCltUserBuilder*) setInfoBuilder:(PbUserInfoBuilder*) builderForValue {
  return [self setInfo:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeInfo:(PbUserInfo*) value {
  if (resultPbCltUser.hasInfo &&
      resultPbCltUser.info != [PbUserInfo defaultInstance]) {
    resultPbCltUser.info =
      [[[PbUserInfo builderWithPrototype:resultPbCltUser.info] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.info = value;
  }
  resultPbCltUser.hasInfo = YES;
  return self;
}
- (PbCltUserBuilder*) clearInfo {
  resultPbCltUser.hasInfo = NO;
  resultPbCltUser.info = [PbUserInfo defaultInstance];
  return self;
}
- (BOOL) hasFriendList {
  return resultPbCltUser.hasFriendList;
}
- (PbCltFriend*) friendList {
  return resultPbCltUser.friendList;
}
- (PbCltUserBuilder*) setFriendList:(PbCltFriend*) value {
  resultPbCltUser.hasFriendList = YES;
  resultPbCltUser.friendList = value;
  return self;
}
- (PbCltUserBuilder*) setFriendListBuilder:(PbCltFriendBuilder*) builderForValue {
  return [self setFriendList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeFriendList:(PbCltFriend*) value {
  if (resultPbCltUser.hasFriendList &&
      resultPbCltUser.friendList != [PbCltFriend defaultInstance]) {
    resultPbCltUser.friendList =
      [[[PbCltFriend builderWithPrototype:resultPbCltUser.friendList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.friendList = value;
  }
  resultPbCltUser.hasFriendList = YES;
  return self;
}
- (PbCltUserBuilder*) clearFriendList {
  resultPbCltUser.hasFriendList = NO;
  resultPbCltUser.friendList = [PbCltFriend defaultInstance];
  return self;
}
- (BOOL) hasSearchFriendList {
  return resultPbCltUser.hasSearchFriendList;
}
- (PbCltFriend*) searchFriendList {
  return resultPbCltUser.searchFriendList;
}
- (PbCltUserBuilder*) setSearchFriendList:(PbCltFriend*) value {
  resultPbCltUser.hasSearchFriendList = YES;
  resultPbCltUser.searchFriendList = value;
  return self;
}
- (PbCltUserBuilder*) setSearchFriendListBuilder:(PbCltFriendBuilder*) builderForValue {
  return [self setSearchFriendList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeSearchFriendList:(PbCltFriend*) value {
  if (resultPbCltUser.hasSearchFriendList &&
      resultPbCltUser.searchFriendList != [PbCltFriend defaultInstance]) {
    resultPbCltUser.searchFriendList =
      [[[PbCltFriend builderWithPrototype:resultPbCltUser.searchFriendList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.searchFriendList = value;
  }
  resultPbCltUser.hasSearchFriendList = YES;
  return self;
}
- (PbCltUserBuilder*) clearSearchFriendList {
  resultPbCltUser.hasSearchFriendList = NO;
  resultPbCltUser.searchFriendList = [PbCltFriend defaultInstance];
  return self;
}
- (BOOL) hasValidationFriendList {
  return resultPbCltUser.hasValidationFriendList;
}
- (PbCltFriend*) validationFriendList {
  return resultPbCltUser.validationFriendList;
}
- (PbCltUserBuilder*) setValidationFriendList:(PbCltFriend*) value {
  resultPbCltUser.hasValidationFriendList = YES;
  resultPbCltUser.validationFriendList = value;
  return self;
}
- (PbCltUserBuilder*) setValidationFriendListBuilder:(PbCltFriendBuilder*) builderForValue {
  return [self setValidationFriendList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeValidationFriendList:(PbCltFriend*) value {
  if (resultPbCltUser.hasValidationFriendList &&
      resultPbCltUser.validationFriendList != [PbCltFriend defaultInstance]) {
    resultPbCltUser.validationFriendList =
      [[[PbCltFriend builderWithPrototype:resultPbCltUser.validationFriendList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.validationFriendList = value;
  }
  resultPbCltUser.hasValidationFriendList = YES;
  return self;
}
- (PbCltUserBuilder*) clearValidationFriendList {
  resultPbCltUser.hasValidationFriendList = NO;
  resultPbCltUser.validationFriendList = [PbCltFriend defaultInstance];
  return self;
}
- (BOOL) hasImGroup {
  return resultPbCltUser.hasImGroup;
}
- (PbCltGroup*) imGroup {
  return resultPbCltUser.imGroup;
}
- (PbCltUserBuilder*) setImGroup:(PbCltGroup*) value {
  resultPbCltUser.hasImGroup = YES;
  resultPbCltUser.imGroup = value;
  return self;
}
- (PbCltUserBuilder*) setImGroupBuilder:(PbCltGroupBuilder*) builderForValue {
  return [self setImGroup:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeImGroup:(PbCltGroup*) value {
  if (resultPbCltUser.hasImGroup &&
      resultPbCltUser.imGroup != [PbCltGroup defaultInstance]) {
    resultPbCltUser.imGroup =
      [[[PbCltGroup builderWithPrototype:resultPbCltUser.imGroup] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.imGroup = value;
  }
  resultPbCltUser.hasImGroup = YES;
  return self;
}
- (PbCltUserBuilder*) clearImGroup {
  resultPbCltUser.hasImGroup = NO;
  resultPbCltUser.imGroup = [PbCltGroup defaultInstance];
  return self;
}
- (BOOL) hasFriendInfo {
  return resultPbCltUser.hasFriendInfo;
}
- (PbUserInfo*) friendInfo {
  return resultPbCltUser.friendInfo;
}
- (PbCltUserBuilder*) setFriendInfo:(PbUserInfo*) value {
  resultPbCltUser.hasFriendInfo = YES;
  resultPbCltUser.friendInfo = value;
  return self;
}
- (PbCltUserBuilder*) setFriendInfoBuilder:(PbUserInfoBuilder*) builderForValue {
  return [self setFriendInfo:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeFriendInfo:(PbUserInfo*) value {
  if (resultPbCltUser.hasFriendInfo &&
      resultPbCltUser.friendInfo != [PbUserInfo defaultInstance]) {
    resultPbCltUser.friendInfo =
      [[[PbUserInfo builderWithPrototype:resultPbCltUser.friendInfo] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.friendInfo = value;
  }
  resultPbCltUser.hasFriendInfo = YES;
  return self;
}
- (PbCltUserBuilder*) clearFriendInfo {
  resultPbCltUser.hasFriendInfo = NO;
  resultPbCltUser.friendInfo = [PbUserInfo defaultInstance];
  return self;
}
- (BOOL) hasImMsg {
  return resultPbCltUser.hasImMsg;
}
- (PbImMsg*) imMsg {
  return resultPbCltUser.imMsg;
}
- (PbCltUserBuilder*) setImMsg:(PbImMsg*) value {
  resultPbCltUser.hasImMsg = YES;
  resultPbCltUser.imMsg = value;
  return self;
}
- (PbCltUserBuilder*) setImMsgBuilder:(PbImMsgBuilder*) builderForValue {
  return [self setImMsg:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeImMsg:(PbImMsg*) value {
  if (resultPbCltUser.hasImMsg &&
      resultPbCltUser.imMsg != [PbImMsg defaultInstance]) {
    resultPbCltUser.imMsg =
      [[[PbImMsg builderWithPrototype:resultPbCltUser.imMsg] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.imMsg = value;
  }
  resultPbCltUser.hasImMsg = YES;
  return self;
}
- (PbCltUserBuilder*) clearImMsg {
  resultPbCltUser.hasImMsg = NO;
  resultPbCltUser.imMsg = [PbImMsg defaultInstance];
  return self;
}
- (BOOL) hasImGroupDetails {
  return resultPbCltUser.hasImGroupDetails;
}
- (PbCltGroupDetails*) imGroupDetails {
  return resultPbCltUser.imGroupDetails;
}
- (PbCltUserBuilder*) setImGroupDetails:(PbCltGroupDetails*) value {
  resultPbCltUser.hasImGroupDetails = YES;
  resultPbCltUser.imGroupDetails = value;
  return self;
}
- (PbCltUserBuilder*) setImGroupDetailsBuilder:(PbCltGroupDetailsBuilder*) builderForValue {
  return [self setImGroupDetails:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeImGroupDetails:(PbCltGroupDetails*) value {
  if (resultPbCltUser.hasImGroupDetails &&
      resultPbCltUser.imGroupDetails != [PbCltGroupDetails defaultInstance]) {
    resultPbCltUser.imGroupDetails =
      [[[PbCltGroupDetails builderWithPrototype:resultPbCltUser.imGroupDetails] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.imGroupDetails = value;
  }
  resultPbCltUser.hasImGroupDetails = YES;
  return self;
}
- (PbCltUserBuilder*) clearImGroupDetails {
  resultPbCltUser.hasImGroupDetails = NO;
  resultPbCltUser.imGroupDetails = [PbCltGroupDetails defaultInstance];
  return self;
}
- (BOOL) hasPrjList {
  return resultPbCltUser.hasPrjList;
}
- (PbPrjPrj*) prjList {
  return resultPbCltUser.prjList;
}
- (PbCltUserBuilder*) setPrjList:(PbPrjPrj*) value {
  resultPbCltUser.hasPrjList = YES;
  resultPbCltUser.prjList = value;
  return self;
}
- (PbCltUserBuilder*) setPrjListBuilder:(PbPrjPrjBuilder*) builderForValue {
  return [self setPrjList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergePrjList:(PbPrjPrj*) value {
  if (resultPbCltUser.hasPrjList &&
      resultPbCltUser.prjList != [PbPrjPrj defaultInstance]) {
    resultPbCltUser.prjList =
      [[[PbPrjPrj builderWithPrototype:resultPbCltUser.prjList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.prjList = value;
  }
  resultPbCltUser.hasPrjList = YES;
  return self;
}
- (PbCltUserBuilder*) clearPrjList {
  resultPbCltUser.hasPrjList = NO;
  resultPbCltUser.prjList = [PbPrjPrj defaultInstance];
  return self;
}
- (BOOL) hasPrjDetails {
  return resultPbCltUser.hasPrjDetails;
}
- (PbPrjDetails*) prjDetails {
  return resultPbCltUser.prjDetails;
}
- (PbCltUserBuilder*) setPrjDetails:(PbPrjDetails*) value {
  resultPbCltUser.hasPrjDetails = YES;
  resultPbCltUser.prjDetails = value;
  return self;
}
- (PbCltUserBuilder*) setPrjDetailsBuilder:(PbPrjDetailsBuilder*) builderForValue {
  return [self setPrjDetails:[builderForValue build]];
}
- (PbCltUserBuilder*) mergePrjDetails:(PbPrjDetails*) value {
  if (resultPbCltUser.hasPrjDetails &&
      resultPbCltUser.prjDetails != [PbPrjDetails defaultInstance]) {
    resultPbCltUser.prjDetails =
      [[[PbPrjDetails builderWithPrototype:resultPbCltUser.prjDetails] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.prjDetails = value;
  }
  resultPbCltUser.hasPrjDetails = YES;
  return self;
}
- (PbCltUserBuilder*) clearPrjDetails {
  resultPbCltUser.hasPrjDetails = NO;
  resultPbCltUser.prjDetails = [PbPrjDetails defaultInstance];
  return self;
}
- (BOOL) hasNrecommendFriendList {
  return resultPbCltUser.hasNrecommendFriendList;
}
- (PbCltRecommendFriend*) nrecommendFriendList {
  return resultPbCltUser.nrecommendFriendList;
}
- (PbCltUserBuilder*) setNrecommendFriendList:(PbCltRecommendFriend*) value {
  resultPbCltUser.hasNrecommendFriendList = YES;
  resultPbCltUser.nrecommendFriendList = value;
  return self;
}
- (PbCltUserBuilder*) setNrecommendFriendListBuilder:(PbCltRecommendFriendBuilder*) builderForValue {
  return [self setNrecommendFriendList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeNrecommendFriendList:(PbCltRecommendFriend*) value {
  if (resultPbCltUser.hasNrecommendFriendList &&
      resultPbCltUser.nrecommendFriendList != [PbCltRecommendFriend defaultInstance]) {
    resultPbCltUser.nrecommendFriendList =
      [[[PbCltRecommendFriend builderWithPrototype:resultPbCltUser.nrecommendFriendList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.nrecommendFriendList = value;
  }
  resultPbCltUser.hasNrecommendFriendList = YES;
  return self;
}
- (PbCltUserBuilder*) clearNrecommendFriendList {
  resultPbCltUser.hasNrecommendFriendList = NO;
  resultPbCltUser.nrecommendFriendList = [PbCltRecommendFriend defaultInstance];
  return self;
}
- (BOOL) hasRecommendPrjList {
  return resultPbCltUser.hasRecommendPrjList;
}
- (PbPrjRecommendPrj*) recommendPrjList {
  return resultPbCltUser.recommendPrjList;
}
- (PbCltUserBuilder*) setRecommendPrjList:(PbPrjRecommendPrj*) value {
  resultPbCltUser.hasRecommendPrjList = YES;
  resultPbCltUser.recommendPrjList = value;
  return self;
}
- (PbCltUserBuilder*) setRecommendPrjListBuilder:(PbPrjRecommendPrjBuilder*) builderForValue {
  return [self setRecommendPrjList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeRecommendPrjList:(PbPrjRecommendPrj*) value {
  if (resultPbCltUser.hasRecommendPrjList &&
      resultPbCltUser.recommendPrjList != [PbPrjRecommendPrj defaultInstance]) {
    resultPbCltUser.recommendPrjList =
      [[[PbPrjRecommendPrj builderWithPrototype:resultPbCltUser.recommendPrjList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.recommendPrjList = value;
  }
  resultPbCltUser.hasRecommendPrjList = YES;
  return self;
}
- (PbCltUserBuilder*) clearRecommendPrjList {
  resultPbCltUser.hasRecommendPrjList = NO;
  resultPbCltUser.recommendPrjList = [PbPrjRecommendPrj defaultInstance];
  return self;
}
- (NSMutableArray *)prjUser {
  return resultPbCltUser.prjUserArray;
}
- (PbPrjUser*)prjUserAtIndex:(NSUInteger)index {
  return [resultPbCltUser prjUserAtIndex:index];
}
- (PbCltUserBuilder *)addPrjUser:(PbPrjUser*)value {
  if (resultPbCltUser.prjUserArray == nil) {
    resultPbCltUser.prjUserArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltUser.prjUserArray addObject:value];
  return self;
}
- (PbCltUserBuilder *)setPrjUserArray:(NSArray *)array {
  resultPbCltUser.prjUserArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltUserBuilder *)clearPrjUser {
  resultPbCltUser.prjUserArray = nil;
  return self;
}
- (NSMutableArray *)prjJoinUser {
  return resultPbCltUser.prjJoinUserArray;
}
- (PbPrjUser*)prjJoinUserAtIndex:(NSUInteger)index {
  return [resultPbCltUser prjJoinUserAtIndex:index];
}
- (PbCltUserBuilder *)addPrjJoinUser:(PbPrjUser*)value {
  if (resultPbCltUser.prjJoinUserArray == nil) {
    resultPbCltUser.prjJoinUserArray = [[NSMutableArray alloc]init];
  }
  [resultPbCltUser.prjJoinUserArray addObject:value];
  return self;
}
- (PbCltUserBuilder *)setPrjJoinUserArray:(NSArray *)array {
  resultPbCltUser.prjJoinUserArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbCltUserBuilder *)clearPrjJoinUser {
  resultPbCltUser.prjJoinUserArray = nil;
  return self;
}
- (BOOL) hasVersion {
  return resultPbCltUser.hasVersion;
}
- (PbCltVersion*) version {
  return resultPbCltUser.version;
}
- (PbCltUserBuilder*) setVersion:(PbCltVersion*) value {
  resultPbCltUser.hasVersion = YES;
  resultPbCltUser.version = value;
  return self;
}
- (PbCltUserBuilder*) setVersionBuilder:(PbCltVersionBuilder*) builderForValue {
  return [self setVersion:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeVersion:(PbCltVersion*) value {
  if (resultPbCltUser.hasVersion &&
      resultPbCltUser.version != [PbCltVersion defaultInstance]) {
    resultPbCltUser.version =
      [[[PbCltVersion builderWithPrototype:resultPbCltUser.version] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.version = value;
  }
  resultPbCltUser.hasVersion = YES;
  return self;
}
- (PbCltUserBuilder*) clearVersion {
  resultPbCltUser.hasVersion = NO;
  resultPbCltUser.version = [PbCltVersion defaultInstance];
  return self;
}
- (BOOL) hasPrjWeather {
  return resultPbCltUser.hasPrjWeather;
}
- (PbPrjPrjWeather*) prjWeather {
  return resultPbCltUser.prjWeather;
}
- (PbCltUserBuilder*) setPrjWeather:(PbPrjPrjWeather*) value {
  resultPbCltUser.hasPrjWeather = YES;
  resultPbCltUser.prjWeather = value;
  return self;
}
- (PbCltUserBuilder*) setPrjWeatherBuilder:(PbPrjPrjWeatherBuilder*) builderForValue {
  return [self setPrjWeather:[builderForValue build]];
}
- (PbCltUserBuilder*) mergePrjWeather:(PbPrjPrjWeather*) value {
  if (resultPbCltUser.hasPrjWeather &&
      resultPbCltUser.prjWeather != [PbPrjPrjWeather defaultInstance]) {
    resultPbCltUser.prjWeather =
      [[[PbPrjPrjWeather builderWithPrototype:resultPbCltUser.prjWeather] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.prjWeather = value;
  }
  resultPbCltUser.hasPrjWeather = YES;
  return self;
}
- (PbCltUserBuilder*) clearPrjWeather {
  resultPbCltUser.hasPrjWeather = NO;
  resultPbCltUser.prjWeather = [PbPrjPrjWeather defaultInstance];
  return self;
}
- (BOOL) hasTaskDetails {
  return resultPbCltUser.hasTaskDetails;
}
- (PbPrjTaskDetails*) taskDetails {
  return resultPbCltUser.taskDetails;
}
- (PbCltUserBuilder*) setTaskDetails:(PbPrjTaskDetails*) value {
  resultPbCltUser.hasTaskDetails = YES;
  resultPbCltUser.taskDetails = value;
  return self;
}
- (PbCltUserBuilder*) setTaskDetailsBuilder:(PbPrjTaskDetailsBuilder*) builderForValue {
  return [self setTaskDetails:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeTaskDetails:(PbPrjTaskDetails*) value {
  if (resultPbCltUser.hasTaskDetails &&
      resultPbCltUser.taskDetails != [PbPrjTaskDetails defaultInstance]) {
    resultPbCltUser.taskDetails =
      [[[PbPrjTaskDetails builderWithPrototype:resultPbCltUser.taskDetails] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.taskDetails = value;
  }
  resultPbCltUser.hasTaskDetails = YES;
  return self;
}
- (PbCltUserBuilder*) clearTaskDetails {
  resultPbCltUser.hasTaskDetails = NO;
  resultPbCltUser.taskDetails = [PbPrjTaskDetails defaultInstance];
  return self;
}
- (BOOL) hasTaskList {
  return resultPbCltUser.hasTaskList;
}
- (PbPrjTaskList*) taskList {
  return resultPbCltUser.taskList;
}
- (PbCltUserBuilder*) setTaskList:(PbPrjTaskList*) value {
  resultPbCltUser.hasTaskList = YES;
  resultPbCltUser.taskList = value;
  return self;
}
- (PbCltUserBuilder*) setTaskListBuilder:(PbPrjTaskListBuilder*) builderForValue {
  return [self setTaskList:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeTaskList:(PbPrjTaskList*) value {
  if (resultPbCltUser.hasTaskList &&
      resultPbCltUser.taskList != [PbPrjTaskList defaultInstance]) {
    resultPbCltUser.taskList =
      [[[PbPrjTaskList builderWithPrototype:resultPbCltUser.taskList] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.taskList = value;
  }
  resultPbCltUser.hasTaskList = YES;
  return self;
}
- (PbCltUserBuilder*) clearTaskList {
  resultPbCltUser.hasTaskList = NO;
  resultPbCltUser.taskList = [PbPrjTaskList defaultInstance];
  return self;
}
- (BOOL) hasPrjFiles {
  return resultPbCltUser.hasPrjFiles;
}
- (PbPrjFile*) prjFiles {
  return resultPbCltUser.prjFiles;
}
- (PbCltUserBuilder*) setPrjFiles:(PbPrjFile*) value {
  resultPbCltUser.hasPrjFiles = YES;
  resultPbCltUser.prjFiles = value;
  return self;
}
- (PbCltUserBuilder*) setPrjFilesBuilder:(PbPrjFileBuilder*) builderForValue {
  return [self setPrjFiles:[builderForValue build]];
}
- (PbCltUserBuilder*) mergePrjFiles:(PbPrjFile*) value {
  if (resultPbCltUser.hasPrjFiles &&
      resultPbCltUser.prjFiles != [PbPrjFile defaultInstance]) {
    resultPbCltUser.prjFiles =
      [[[PbPrjFile builderWithPrototype:resultPbCltUser.prjFiles] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.prjFiles = value;
  }
  resultPbCltUser.hasPrjFiles = YES;
  return self;
}
- (PbCltUserBuilder*) clearPrjFiles {
  resultPbCltUser.hasPrjFiles = NO;
  resultPbCltUser.prjFiles = [PbPrjFile defaultInstance];
  return self;
}
- (BOOL) hasPbCltUserCode {
  return resultPbCltUser.hasPbCltUserCode;
}
- (SInt32) pbCltUserCode {
  return resultPbCltUser.pbCltUserCode;
}
- (PbCltUserBuilder*) setPbCltUserCode:(SInt32) value {
  resultPbCltUser.hasPbCltUserCode = YES;
  resultPbCltUser.pbCltUserCode = value;
  return self;
}
- (PbCltUserBuilder*) clearPbCltUserCode {
  resultPbCltUser.hasPbCltUserCode = NO;
  resultPbCltUser.pbCltUserCode = 0;
  return self;
}
- (BOOL) hasCollection {
  return resultPbCltUser.hasCollection;
}
- (PbUserCollectionList*) collection {
  return resultPbCltUser.collection;
}
- (PbCltUserBuilder*) setCollection:(PbUserCollectionList*) value {
  resultPbCltUser.hasCollection = YES;
  resultPbCltUser.collection = value;
  return self;
}
- (PbCltUserBuilder*) setCollectionBuilder:(PbUserCollectionListBuilder*) builderForValue {
  return [self setCollection:[builderForValue build]];
}
- (PbCltUserBuilder*) mergeCollection:(PbUserCollectionList*) value {
  if (resultPbCltUser.hasCollection &&
      resultPbCltUser.collection != [PbUserCollectionList defaultInstance]) {
    resultPbCltUser.collection =
      [[[PbUserCollectionList builderWithPrototype:resultPbCltUser.collection] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.collection = value;
  }
  resultPbCltUser.hasCollection = YES;
  return self;
}
- (PbCltUserBuilder*) clearCollection {
  resultPbCltUser.hasCollection = NO;
  resultPbCltUser.collection = [PbUserCollectionList defaultInstance];
  return self;
}
- (BOOL) hasUpstreamTime {
  return resultPbCltUser.hasUpstreamTime;
}
- (SInt32) upstreamTime {
  return resultPbCltUser.upstreamTime;
}
- (PbCltUserBuilder*) setUpstreamTime:(SInt32) value {
  resultPbCltUser.hasUpstreamTime = YES;
  resultPbCltUser.upstreamTime = value;
  return self;
}
- (PbCltUserBuilder*) clearUpstreamTime {
  resultPbCltUser.hasUpstreamTime = NO;
  resultPbCltUser.upstreamTime = 0;
  return self;
}
- (BOOL) hasPrjRecordGroup {
  return resultPbCltUser.hasPrjRecordGroup;
}
- (PbCltGroup*) prjRecordGroup {
  return resultPbCltUser.prjRecordGroup;
}
- (PbCltUserBuilder*) setPrjRecordGroup:(PbCltGroup*) value {
  resultPbCltUser.hasPrjRecordGroup = YES;
  resultPbCltUser.prjRecordGroup = value;
  return self;
}
- (PbCltUserBuilder*) setPrjRecordGroupBuilder:(PbCltGroupBuilder*) builderForValue {
  return [self setPrjRecordGroup:[builderForValue build]];
}
- (PbCltUserBuilder*) mergePrjRecordGroup:(PbCltGroup*) value {
  if (resultPbCltUser.hasPrjRecordGroup &&
      resultPbCltUser.prjRecordGroup != [PbCltGroup defaultInstance]) {
    resultPbCltUser.prjRecordGroup =
      [[[PbCltGroup builderWithPrototype:resultPbCltUser.prjRecordGroup] mergeFrom:value] buildPartial];
  } else {
    resultPbCltUser.prjRecordGroup = value;
  }
  resultPbCltUser.hasPrjRecordGroup = YES;
  return self;
}
- (PbCltUserBuilder*) clearPrjRecordGroup {
  resultPbCltUser.hasPrjRecordGroup = NO;
  resultPbCltUser.prjRecordGroup = [PbCltGroup defaultInstance];
  return self;
}
@end

@interface PbImMsgAttach ()
@property (strong) NSString* attachName;
@property SInt32 attachType;
@property (strong) NSString* attachUrl;
@property SInt32 attachSize;
@property SInt32 attachPlaytime;
@property SInt32 attachUploadtime;
@property (strong) NSString* attachNameHl;
@property (strong) NSString* attachId;
@end

@implementation PbImMsgAttach

- (BOOL) hasAttachName {
  return !!hasAttachName_;
}
- (void) setHasAttachName:(BOOL) _value_ {
  hasAttachName_ = !!_value_;
}
@synthesize attachName;
- (BOOL) hasAttachType {
  return !!hasAttachType_;
}
- (void) setHasAttachType:(BOOL) _value_ {
  hasAttachType_ = !!_value_;
}
@synthesize attachType;
- (BOOL) hasAttachUrl {
  return !!hasAttachUrl_;
}
- (void) setHasAttachUrl:(BOOL) _value_ {
  hasAttachUrl_ = !!_value_;
}
@synthesize attachUrl;
- (BOOL) hasAttachSize {
  return !!hasAttachSize_;
}
- (void) setHasAttachSize:(BOOL) _value_ {
  hasAttachSize_ = !!_value_;
}
@synthesize attachSize;
- (BOOL) hasAttachPlaytime {
  return !!hasAttachPlaytime_;
}
- (void) setHasAttachPlaytime:(BOOL) _value_ {
  hasAttachPlaytime_ = !!_value_;
}
@synthesize attachPlaytime;
- (BOOL) hasAttachUploadtime {
  return !!hasAttachUploadtime_;
}
- (void) setHasAttachUploadtime:(BOOL) _value_ {
  hasAttachUploadtime_ = !!_value_;
}
@synthesize attachUploadtime;
- (BOOL) hasAttachNameHl {
  return !!hasAttachNameHl_;
}
- (void) setHasAttachNameHl:(BOOL) _value_ {
  hasAttachNameHl_ = !!_value_;
}
@synthesize attachNameHl;
- (BOOL) hasAttachId {
  return !!hasAttachId_;
}
- (void) setHasAttachId:(BOOL) _value_ {
  hasAttachId_ = !!_value_;
}
@synthesize attachId;
- (instancetype) init {
  if ((self = [super init])) {
    self.attachName = @"";
    self.attachType = 0;
    self.attachUrl = @"";
    self.attachSize = 0;
    self.attachPlaytime = 0;
    self.attachUploadtime = 0;
    self.attachNameHl = @"";
    self.attachId = @"";
  }
  return self;
}
static PbImMsgAttach* defaultPbImMsgAttachInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgAttach class]) {
    defaultPbImMsgAttachInstance = [[PbImMsgAttach alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgAttachInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgAttachInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAttachName) {
    [output writeString:1 value:self.attachName];
  }
  if (self.hasAttachType) {
    [output writeInt32:2 value:self.attachType];
  }
  if (self.hasAttachUrl) {
    [output writeString:3 value:self.attachUrl];
  }
  if (self.hasAttachSize) {
    [output writeInt32:4 value:self.attachSize];
  }
  if (self.hasAttachPlaytime) {
    [output writeInt32:5 value:self.attachPlaytime];
  }
  if (self.hasAttachUploadtime) {
    [output writeInt32:6 value:self.attachUploadtime];
  }
  if (self.hasAttachNameHl) {
    [output writeString:7 value:self.attachNameHl];
  }
  if (self.hasAttachId) {
    [output writeString:8 value:self.attachId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAttachName) {
    size_ += computeStringSize(1, self.attachName);
  }
  if (self.hasAttachType) {
    size_ += computeInt32Size(2, self.attachType);
  }
  if (self.hasAttachUrl) {
    size_ += computeStringSize(3, self.attachUrl);
  }
  if (self.hasAttachSize) {
    size_ += computeInt32Size(4, self.attachSize);
  }
  if (self.hasAttachPlaytime) {
    size_ += computeInt32Size(5, self.attachPlaytime);
  }
  if (self.hasAttachUploadtime) {
    size_ += computeInt32Size(6, self.attachUploadtime);
  }
  if (self.hasAttachNameHl) {
    size_ += computeStringSize(7, self.attachNameHl);
  }
  if (self.hasAttachId) {
    size_ += computeStringSize(8, self.attachId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgAttach*) parseFromData:(NSData*) data {
  return (PbImMsgAttach*)[[[PbImMsgAttach builder] mergeFromData:data] build];
}
+ (PbImMsgAttach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgAttach*)[[[PbImMsgAttach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgAttach*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgAttach*)[[[PbImMsgAttach builder] mergeFromInputStream:input] build];
}
+ (PbImMsgAttach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgAttach*)[[[PbImMsgAttach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgAttach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgAttach*)[[[PbImMsgAttach builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgAttach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgAttach*)[[[PbImMsgAttach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgAttachBuilder*) builder {
  return [[PbImMsgAttachBuilder alloc] init];
}
+ (PbImMsgAttachBuilder*) builderWithPrototype:(PbImMsgAttach*) prototype {
  return [[PbImMsgAttach builder] mergeFrom:prototype];
}
- (PbImMsgAttachBuilder*) builder {
  return [PbImMsgAttach builder];
}
- (PbImMsgAttachBuilder*) toBuilder {
  return [PbImMsgAttach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAttachName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachName", self.attachName];
  }
  if (self.hasAttachType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachType", [NSNumber numberWithInteger:self.attachType]];
  }
  if (self.hasAttachUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachUrl", self.attachUrl];
  }
  if (self.hasAttachSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachSize", [NSNumber numberWithInteger:self.attachSize]];
  }
  if (self.hasAttachPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachPlaytime", [NSNumber numberWithInteger:self.attachPlaytime]];
  }
  if (self.hasAttachUploadtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachUploadtime", [NSNumber numberWithInteger:self.attachUploadtime]];
  }
  if (self.hasAttachNameHl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachNameHl", self.attachNameHl];
  }
  if (self.hasAttachId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachId", self.attachId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAttachName) {
    [dictionary setObject: self.attachName forKey: @"attachName"];
  }
  if (self.hasAttachType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachType] forKey: @"attachType"];
  }
  if (self.hasAttachUrl) {
    [dictionary setObject: self.attachUrl forKey: @"attachUrl"];
  }
  if (self.hasAttachSize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachSize] forKey: @"attachSize"];
  }
  if (self.hasAttachPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachPlaytime] forKey: @"attachPlaytime"];
  }
  if (self.hasAttachUploadtime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachUploadtime] forKey: @"attachUploadtime"];
  }
  if (self.hasAttachNameHl) {
    [dictionary setObject: self.attachNameHl forKey: @"attachNameHl"];
  }
  if (self.hasAttachId) {
    [dictionary setObject: self.attachId forKey: @"attachId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgAttach class]]) {
    return NO;
  }
  PbImMsgAttach *otherMessage = other;
  return
      self.hasAttachName == otherMessage.hasAttachName &&
      (!self.hasAttachName || [self.attachName isEqual:otherMessage.attachName]) &&
      self.hasAttachType == otherMessage.hasAttachType &&
      (!self.hasAttachType || self.attachType == otherMessage.attachType) &&
      self.hasAttachUrl == otherMessage.hasAttachUrl &&
      (!self.hasAttachUrl || [self.attachUrl isEqual:otherMessage.attachUrl]) &&
      self.hasAttachSize == otherMessage.hasAttachSize &&
      (!self.hasAttachSize || self.attachSize == otherMessage.attachSize) &&
      self.hasAttachPlaytime == otherMessage.hasAttachPlaytime &&
      (!self.hasAttachPlaytime || self.attachPlaytime == otherMessage.attachPlaytime) &&
      self.hasAttachUploadtime == otherMessage.hasAttachUploadtime &&
      (!self.hasAttachUploadtime || self.attachUploadtime == otherMessage.attachUploadtime) &&
      self.hasAttachNameHl == otherMessage.hasAttachNameHl &&
      (!self.hasAttachNameHl || [self.attachNameHl isEqual:otherMessage.attachNameHl]) &&
      self.hasAttachId == otherMessage.hasAttachId &&
      (!self.hasAttachId || [self.attachId isEqual:otherMessage.attachId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAttachName) {
    hashCode = hashCode * 31 + [self.attachName hash];
  }
  if (self.hasAttachType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachType] hash];
  }
  if (self.hasAttachUrl) {
    hashCode = hashCode * 31 + [self.attachUrl hash];
  }
  if (self.hasAttachSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachSize] hash];
  }
  if (self.hasAttachPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachPlaytime] hash];
  }
  if (self.hasAttachUploadtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachUploadtime] hash];
  }
  if (self.hasAttachNameHl) {
    hashCode = hashCode * 31 + [self.attachNameHl hash];
  }
  if (self.hasAttachId) {
    hashCode = hashCode * 31 + [self.attachId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgAttachBuilder()
@property (strong) PbImMsgAttach* resultPbImMsgAttach;
@end

@implementation PbImMsgAttachBuilder
@synthesize resultPbImMsgAttach;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgAttach = [[PbImMsgAttach alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgAttach;
}
- (PbImMsgAttachBuilder*) clear {
  self.resultPbImMsgAttach = [[PbImMsgAttach alloc] init];
  return self;
}
- (PbImMsgAttachBuilder*) clone {
  return [PbImMsgAttach builderWithPrototype:resultPbImMsgAttach];
}
- (PbImMsgAttach*) defaultInstance {
  return [PbImMsgAttach defaultInstance];
}
- (PbImMsgAttach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgAttach*) buildPartial {
  PbImMsgAttach* returnMe = resultPbImMsgAttach;
  self.resultPbImMsgAttach = nil;
  return returnMe;
}
- (PbImMsgAttachBuilder*) mergeFrom:(PbImMsgAttach*) other {
  if (other == [PbImMsgAttach defaultInstance]) {
    return self;
  }
  if (other.hasAttachName) {
    [self setAttachName:other.attachName];
  }
  if (other.hasAttachType) {
    [self setAttachType:other.attachType];
  }
  if (other.hasAttachUrl) {
    [self setAttachUrl:other.attachUrl];
  }
  if (other.hasAttachSize) {
    [self setAttachSize:other.attachSize];
  }
  if (other.hasAttachPlaytime) {
    [self setAttachPlaytime:other.attachPlaytime];
  }
  if (other.hasAttachUploadtime) {
    [self setAttachUploadtime:other.attachUploadtime];
  }
  if (other.hasAttachNameHl) {
    [self setAttachNameHl:other.attachNameHl];
  }
  if (other.hasAttachId) {
    [self setAttachId:other.attachId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgAttachBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgAttachBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAttachName:[input readString]];
        break;
      }
      case 16: {
        [self setAttachType:[input readInt32]];
        break;
      }
      case 26: {
        [self setAttachUrl:[input readString]];
        break;
      }
      case 32: {
        [self setAttachSize:[input readInt32]];
        break;
      }
      case 40: {
        [self setAttachPlaytime:[input readInt32]];
        break;
      }
      case 48: {
        [self setAttachUploadtime:[input readInt32]];
        break;
      }
      case 58: {
        [self setAttachNameHl:[input readString]];
        break;
      }
      case 66: {
        [self setAttachId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAttachName {
  return resultPbImMsgAttach.hasAttachName;
}
- (NSString*) attachName {
  return resultPbImMsgAttach.attachName;
}
- (PbImMsgAttachBuilder*) setAttachName:(NSString*) value {
  resultPbImMsgAttach.hasAttachName = YES;
  resultPbImMsgAttach.attachName = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachName {
  resultPbImMsgAttach.hasAttachName = NO;
  resultPbImMsgAttach.attachName = @"";
  return self;
}
- (BOOL) hasAttachType {
  return resultPbImMsgAttach.hasAttachType;
}
- (SInt32) attachType {
  return resultPbImMsgAttach.attachType;
}
- (PbImMsgAttachBuilder*) setAttachType:(SInt32) value {
  resultPbImMsgAttach.hasAttachType = YES;
  resultPbImMsgAttach.attachType = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachType {
  resultPbImMsgAttach.hasAttachType = NO;
  resultPbImMsgAttach.attachType = 0;
  return self;
}
- (BOOL) hasAttachUrl {
  return resultPbImMsgAttach.hasAttachUrl;
}
- (NSString*) attachUrl {
  return resultPbImMsgAttach.attachUrl;
}
- (PbImMsgAttachBuilder*) setAttachUrl:(NSString*) value {
  resultPbImMsgAttach.hasAttachUrl = YES;
  resultPbImMsgAttach.attachUrl = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachUrl {
  resultPbImMsgAttach.hasAttachUrl = NO;
  resultPbImMsgAttach.attachUrl = @"";
  return self;
}
- (BOOL) hasAttachSize {
  return resultPbImMsgAttach.hasAttachSize;
}
- (SInt32) attachSize {
  return resultPbImMsgAttach.attachSize;
}
- (PbImMsgAttachBuilder*) setAttachSize:(SInt32) value {
  resultPbImMsgAttach.hasAttachSize = YES;
  resultPbImMsgAttach.attachSize = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachSize {
  resultPbImMsgAttach.hasAttachSize = NO;
  resultPbImMsgAttach.attachSize = 0;
  return self;
}
- (BOOL) hasAttachPlaytime {
  return resultPbImMsgAttach.hasAttachPlaytime;
}
- (SInt32) attachPlaytime {
  return resultPbImMsgAttach.attachPlaytime;
}
- (PbImMsgAttachBuilder*) setAttachPlaytime:(SInt32) value {
  resultPbImMsgAttach.hasAttachPlaytime = YES;
  resultPbImMsgAttach.attachPlaytime = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachPlaytime {
  resultPbImMsgAttach.hasAttachPlaytime = NO;
  resultPbImMsgAttach.attachPlaytime = 0;
  return self;
}
- (BOOL) hasAttachUploadtime {
  return resultPbImMsgAttach.hasAttachUploadtime;
}
- (SInt32) attachUploadtime {
  return resultPbImMsgAttach.attachUploadtime;
}
- (PbImMsgAttachBuilder*) setAttachUploadtime:(SInt32) value {
  resultPbImMsgAttach.hasAttachUploadtime = YES;
  resultPbImMsgAttach.attachUploadtime = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachUploadtime {
  resultPbImMsgAttach.hasAttachUploadtime = NO;
  resultPbImMsgAttach.attachUploadtime = 0;
  return self;
}
- (BOOL) hasAttachNameHl {
  return resultPbImMsgAttach.hasAttachNameHl;
}
- (NSString*) attachNameHl {
  return resultPbImMsgAttach.attachNameHl;
}
- (PbImMsgAttachBuilder*) setAttachNameHl:(NSString*) value {
  resultPbImMsgAttach.hasAttachNameHl = YES;
  resultPbImMsgAttach.attachNameHl = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachNameHl {
  resultPbImMsgAttach.hasAttachNameHl = NO;
  resultPbImMsgAttach.attachNameHl = @"";
  return self;
}
- (BOOL) hasAttachId {
  return resultPbImMsgAttach.hasAttachId;
}
- (NSString*) attachId {
  return resultPbImMsgAttach.attachId;
}
- (PbImMsgAttachBuilder*) setAttachId:(NSString*) value {
  resultPbImMsgAttach.hasAttachId = YES;
  resultPbImMsgAttach.attachId = value;
  return self;
}
- (PbImMsgAttachBuilder*) clearAttachId {
  resultPbImMsgAttach.hasAttachId = NO;
  resultPbImMsgAttach.attachId = @"";
  return self;
}
@end

@interface PbImMsgTask ()
@property (strong) NSString* taskId;
@property (strong) NSString* prjId;
@property SInt32 taskType;
@property (strong) NSString* taskDesc;
@property SInt32 taskDescType;
@property (strong) NSString* position;
@property (strong) PBAppendableArray * receiverUinArray;
@property SInt32 operateType;
@property (strong) NSString* assignDesc;
@property SInt32 taskEnd;
@property SInt32 taskStatus;
@property SInt32 operateStatus;
@property (strong) PBAppendableArray * operateUinArray;
@property SInt32 attachPlaytime;
@property SInt32 attachCount;
@property SInt32 jobType;
@property (strong) PbPrjTaskReport* lastReport;
@end

@implementation PbImMsgTask

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) _value_ {
  hasTaskId_ = !!_value_;
}
@synthesize taskId;
- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasTaskType {
  return !!hasTaskType_;
}
- (void) setHasTaskType:(BOOL) _value_ {
  hasTaskType_ = !!_value_;
}
@synthesize taskType;
- (BOOL) hasTaskDesc {
  return !!hasTaskDesc_;
}
- (void) setHasTaskDesc:(BOOL) _value_ {
  hasTaskDesc_ = !!_value_;
}
@synthesize taskDesc;
- (BOOL) hasTaskDescType {
  return !!hasTaskDescType_;
}
- (void) setHasTaskDescType:(BOOL) _value_ {
  hasTaskDescType_ = !!_value_;
}
@synthesize taskDescType;
- (BOOL) hasPosition {
  return !!hasPosition_;
}
- (void) setHasPosition:(BOOL) _value_ {
  hasPosition_ = !!_value_;
}
@synthesize position;
@synthesize receiverUinArray;
@dynamic receiverUin;
- (BOOL) hasOperateType {
  return !!hasOperateType_;
}
- (void) setHasOperateType:(BOOL) _value_ {
  hasOperateType_ = !!_value_;
}
@synthesize operateType;
- (BOOL) hasAssignDesc {
  return !!hasAssignDesc_;
}
- (void) setHasAssignDesc:(BOOL) _value_ {
  hasAssignDesc_ = !!_value_;
}
@synthesize assignDesc;
- (BOOL) hasTaskEnd {
  return !!hasTaskEnd_;
}
- (void) setHasTaskEnd:(BOOL) _value_ {
  hasTaskEnd_ = !!_value_;
}
@synthesize taskEnd;
- (BOOL) hasTaskStatus {
  return !!hasTaskStatus_;
}
- (void) setHasTaskStatus:(BOOL) _value_ {
  hasTaskStatus_ = !!_value_;
}
@synthesize taskStatus;
- (BOOL) hasOperateStatus {
  return !!hasOperateStatus_;
}
- (void) setHasOperateStatus:(BOOL) _value_ {
  hasOperateStatus_ = !!_value_;
}
@synthesize operateStatus;
@synthesize operateUinArray;
@dynamic operateUin;
- (BOOL) hasAttachPlaytime {
  return !!hasAttachPlaytime_;
}
- (void) setHasAttachPlaytime:(BOOL) _value_ {
  hasAttachPlaytime_ = !!_value_;
}
@synthesize attachPlaytime;
- (BOOL) hasAttachCount {
  return !!hasAttachCount_;
}
- (void) setHasAttachCount:(BOOL) _value_ {
  hasAttachCount_ = !!_value_;
}
@synthesize attachCount;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasLastReport {
  return !!hasLastReport_;
}
- (void) setHasLastReport:(BOOL) _value_ {
  hasLastReport_ = !!_value_;
}
@synthesize lastReport;
- (instancetype) init {
  if ((self = [super init])) {
    self.taskId = @"";
    self.prjId = @"";
    self.taskType = 0;
    self.taskDesc = @"";
    self.taskDescType = 0;
    self.position = @"";
    self.operateType = 0;
    self.assignDesc = @"";
    self.taskEnd = 0;
    self.taskStatus = 0;
    self.operateStatus = 0;
    self.attachPlaytime = 0;
    self.attachCount = 0;
    self.jobType = 0;
    self.lastReport = [PbPrjTaskReport defaultInstance];
  }
  return self;
}
static PbImMsgTask* defaultPbImMsgTaskInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgTask class]) {
    defaultPbImMsgTaskInstance = [[PbImMsgTask alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgTaskInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgTaskInstance;
}
- (PBArray *)receiverUin {
  return receiverUinArray;
}
- (SInt32)receiverUinAtIndex:(NSUInteger)index {
  return [receiverUinArray int32AtIndex:index];
}
- (PBArray *)operateUin {
  return operateUinArray;
}
- (SInt32)operateUinAtIndex:(NSUInteger)index {
  return [operateUinArray int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeString:1 value:self.taskId];
  }
  if (self.hasPrjId) {
    [output writeString:2 value:self.prjId];
  }
  if (self.hasTaskType) {
    [output writeInt32:3 value:self.taskType];
  }
  if (self.hasTaskDesc) {
    [output writeString:4 value:self.taskDesc];
  }
  if (self.hasTaskDescType) {
    [output writeInt32:5 value:self.taskDescType];
  }
  if (self.hasPosition) {
    [output writeString:6 value:self.position];
  }
  const NSUInteger receiverUinArrayCount = self.receiverUinArray.count;
  if (receiverUinArrayCount > 0) {
    const SInt32 *values = (const SInt32 *)self.receiverUinArray.data;
    for (NSUInteger i = 0; i < receiverUinArrayCount; ++i) {
      [output writeInt32:7 value:values[i]];
    }
  }
  if (self.hasOperateType) {
    [output writeInt32:8 value:self.operateType];
  }
  if (self.hasAssignDesc) {
    [output writeString:9 value:self.assignDesc];
  }
  if (self.hasTaskEnd) {
    [output writeInt32:10 value:self.taskEnd];
  }
  if (self.hasTaskStatus) {
    [output writeInt32:11 value:self.taskStatus];
  }
  if (self.hasOperateStatus) {
    [output writeInt32:12 value:self.operateStatus];
  }
  const NSUInteger operateUinArrayCount = self.operateUinArray.count;
  if (operateUinArrayCount > 0) {
    const SInt32 *values = (const SInt32 *)self.operateUinArray.data;
    for (NSUInteger i = 0; i < operateUinArrayCount; ++i) {
      [output writeInt32:13 value:values[i]];
    }
  }
  if (self.hasAttachPlaytime) {
    [output writeInt32:14 value:self.attachPlaytime];
  }
  if (self.hasAttachCount) {
    [output writeInt32:15 value:self.attachCount];
  }
  if (self.hasJobType) {
    [output writeInt32:16 value:self.jobType];
  }
  if (self.hasLastReport) {
    [output writeMessage:17 value:self.lastReport];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTaskId) {
    size_ += computeStringSize(1, self.taskId);
  }
  if (self.hasPrjId) {
    size_ += computeStringSize(2, self.prjId);
  }
  if (self.hasTaskType) {
    size_ += computeInt32Size(3, self.taskType);
  }
  if (self.hasTaskDesc) {
    size_ += computeStringSize(4, self.taskDesc);
  }
  if (self.hasTaskDescType) {
    size_ += computeInt32Size(5, self.taskDescType);
  }
  if (self.hasPosition) {
    size_ += computeStringSize(6, self.position);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.receiverUinArray.count;
    const SInt32 *values = (const SInt32 *)self.receiverUinArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasOperateType) {
    size_ += computeInt32Size(8, self.operateType);
  }
  if (self.hasAssignDesc) {
    size_ += computeStringSize(9, self.assignDesc);
  }
  if (self.hasTaskEnd) {
    size_ += computeInt32Size(10, self.taskEnd);
  }
  if (self.hasTaskStatus) {
    size_ += computeInt32Size(11, self.taskStatus);
  }
  if (self.hasOperateStatus) {
    size_ += computeInt32Size(12, self.operateStatus);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.operateUinArray.count;
    const SInt32 *values = (const SInt32 *)self.operateUinArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAttachPlaytime) {
    size_ += computeInt32Size(14, self.attachPlaytime);
  }
  if (self.hasAttachCount) {
    size_ += computeInt32Size(15, self.attachCount);
  }
  if (self.hasJobType) {
    size_ += computeInt32Size(16, self.jobType);
  }
  if (self.hasLastReport) {
    size_ += computeMessageSize(17, self.lastReport);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgTask*) parseFromData:(NSData*) data {
  return (PbImMsgTask*)[[[PbImMsgTask builder] mergeFromData:data] build];
}
+ (PbImMsgTask*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgTask*)[[[PbImMsgTask builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgTask*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgTask*)[[[PbImMsgTask builder] mergeFromInputStream:input] build];
}
+ (PbImMsgTask*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgTask*)[[[PbImMsgTask builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgTask*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgTask*)[[[PbImMsgTask builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgTask*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgTask*)[[[PbImMsgTask builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgTaskBuilder*) builder {
  return [[PbImMsgTaskBuilder alloc] init];
}
+ (PbImMsgTaskBuilder*) builderWithPrototype:(PbImMsgTask*) prototype {
  return [[PbImMsgTask builder] mergeFrom:prototype];
}
- (PbImMsgTaskBuilder*) builder {
  return [PbImMsgTask builder];
}
- (PbImMsgTaskBuilder*) toBuilder {
  return [PbImMsgTask builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", self.taskId];
  }
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasTaskType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskType", [NSNumber numberWithInteger:self.taskType]];
  }
  if (self.hasTaskDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDesc", self.taskDesc];
  }
  if (self.hasTaskDescType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDescType", [NSNumber numberWithInteger:self.taskDescType]];
  }
  if (self.hasPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"position", self.position];
  }
  [self.receiverUinArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receiverUin", obj];
  }];
  if (self.hasOperateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"operateType", [NSNumber numberWithInteger:self.operateType]];
  }
  if (self.hasAssignDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"assignDesc", self.assignDesc];
  }
  if (self.hasTaskEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskEnd", [NSNumber numberWithInteger:self.taskEnd]];
  }
  if (self.hasTaskStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskStatus", [NSNumber numberWithInteger:self.taskStatus]];
  }
  if (self.hasOperateStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"operateStatus", [NSNumber numberWithInteger:self.operateStatus]];
  }
  [self.operateUinArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"operateUin", obj];
  }];
  if (self.hasAttachPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachPlaytime", [NSNumber numberWithInteger:self.attachPlaytime]];
  }
  if (self.hasAttachCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachCount", [NSNumber numberWithInteger:self.attachCount]];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", [NSNumber numberWithInteger:self.jobType]];
  }
  if (self.hasLastReport) {
    [output appendFormat:@"%@%@ {\n", indent, @"lastReport"];
    [self.lastReport writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTaskId) {
    [dictionary setObject: self.taskId forKey: @"taskId"];
  }
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasTaskType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskType] forKey: @"taskType"];
  }
  if (self.hasTaskDesc) {
    [dictionary setObject: self.taskDesc forKey: @"taskDesc"];
  }
  if (self.hasTaskDescType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskDescType] forKey: @"taskDescType"];
  }
  if (self.hasPosition) {
    [dictionary setObject: self.position forKey: @"position"];
  }
  NSMutableArray * receiverUinArrayArray = [NSMutableArray new];
  NSUInteger receiverUinArrayCount=self.receiverUinArray.count;
  for(int i=0;i<receiverUinArrayCount;i++){
    [receiverUinArrayArray addObject: @([self.receiverUinArray int32AtIndex:i])];
  }
  [dictionary setObject: receiverUinArrayArray forKey: @"receiverUin"];
  if (self.hasOperateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.operateType] forKey: @"operateType"];
  }
  if (self.hasAssignDesc) {
    [dictionary setObject: self.assignDesc forKey: @"assignDesc"];
  }
  if (self.hasTaskEnd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskEnd] forKey: @"taskEnd"];
  }
  if (self.hasTaskStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskStatus] forKey: @"taskStatus"];
  }
  if (self.hasOperateStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.operateStatus] forKey: @"operateStatus"];
  }
  NSMutableArray * operateUinArrayArray = [NSMutableArray new];
  NSUInteger operateUinArrayCount=self.operateUinArray.count;
  for(int i=0;i<operateUinArrayCount;i++){
    [operateUinArrayArray addObject: @([self.operateUinArray int32AtIndex:i])];
  }
  [dictionary setObject: operateUinArrayArray forKey: @"operateUin"];
  if (self.hasAttachPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachPlaytime] forKey: @"attachPlaytime"];
  }
  if (self.hasAttachCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.attachCount] forKey: @"attachCount"];
  }
  if (self.hasJobType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.jobType] forKey: @"jobType"];
  }
  if (self.hasLastReport) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.lastReport storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"lastReport"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgTask class]]) {
    return NO;
  }
  PbImMsgTask *otherMessage = other;
  return
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || [self.taskId isEqual:otherMessage.taskId]) &&
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasTaskType == otherMessage.hasTaskType &&
      (!self.hasTaskType || self.taskType == otherMessage.taskType) &&
      self.hasTaskDesc == otherMessage.hasTaskDesc &&
      (!self.hasTaskDesc || [self.taskDesc isEqual:otherMessage.taskDesc]) &&
      self.hasTaskDescType == otherMessage.hasTaskDescType &&
      (!self.hasTaskDescType || self.taskDescType == otherMessage.taskDescType) &&
      self.hasPosition == otherMessage.hasPosition &&
      (!self.hasPosition || [self.position isEqual:otherMessage.position]) &&
      [self.receiverUinArray isEqualToArray:otherMessage.receiverUinArray] &&
      self.hasOperateType == otherMessage.hasOperateType &&
      (!self.hasOperateType || self.operateType == otherMessage.operateType) &&
      self.hasAssignDesc == otherMessage.hasAssignDesc &&
      (!self.hasAssignDesc || [self.assignDesc isEqual:otherMessage.assignDesc]) &&
      self.hasTaskEnd == otherMessage.hasTaskEnd &&
      (!self.hasTaskEnd || self.taskEnd == otherMessage.taskEnd) &&
      self.hasTaskStatus == otherMessage.hasTaskStatus &&
      (!self.hasTaskStatus || self.taskStatus == otherMessage.taskStatus) &&
      self.hasOperateStatus == otherMessage.hasOperateStatus &&
      (!self.hasOperateStatus || self.operateStatus == otherMessage.operateStatus) &&
      [self.operateUinArray isEqualToArray:otherMessage.operateUinArray] &&
      self.hasAttachPlaytime == otherMessage.hasAttachPlaytime &&
      (!self.hasAttachPlaytime || self.attachPlaytime == otherMessage.attachPlaytime) &&
      self.hasAttachCount == otherMessage.hasAttachCount &&
      (!self.hasAttachCount || self.attachCount == otherMessage.attachCount) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || self.jobType == otherMessage.jobType) &&
      self.hasLastReport == otherMessage.hasLastReport &&
      (!self.hasLastReport || [self.lastReport isEqual:otherMessage.lastReport]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [self.taskId hash];
  }
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasTaskType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskType] hash];
  }
  if (self.hasTaskDesc) {
    hashCode = hashCode * 31 + [self.taskDesc hash];
  }
  if (self.hasTaskDescType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskDescType] hash];
  }
  if (self.hasPosition) {
    hashCode = hashCode * 31 + [self.position hash];
  }
  [self.receiverUinArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasOperateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.operateType] hash];
  }
  if (self.hasAssignDesc) {
    hashCode = hashCode * 31 + [self.assignDesc hash];
  }
  if (self.hasTaskEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskEnd] hash];
  }
  if (self.hasTaskStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskStatus] hash];
  }
  if (self.hasOperateStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.operateStatus] hash];
  }
  [self.operateUinArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasAttachPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachPlaytime] hash];
  }
  if (self.hasAttachCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attachCount] hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.jobType] hash];
  }
  if (self.hasLastReport) {
    hashCode = hashCode * 31 + [self.lastReport hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgTaskBuilder()
@property (strong) PbImMsgTask* resultPbImMsgTask;
@end

@implementation PbImMsgTaskBuilder
@synthesize resultPbImMsgTask;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgTask = [[PbImMsgTask alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgTask;
}
- (PbImMsgTaskBuilder*) clear {
  self.resultPbImMsgTask = [[PbImMsgTask alloc] init];
  return self;
}
- (PbImMsgTaskBuilder*) clone {
  return [PbImMsgTask builderWithPrototype:resultPbImMsgTask];
}
- (PbImMsgTask*) defaultInstance {
  return [PbImMsgTask defaultInstance];
}
- (PbImMsgTask*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgTask*) buildPartial {
  PbImMsgTask* returnMe = resultPbImMsgTask;
  self.resultPbImMsgTask = nil;
  return returnMe;
}
- (PbImMsgTaskBuilder*) mergeFrom:(PbImMsgTask*) other {
  if (other == [PbImMsgTask defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasTaskType) {
    [self setTaskType:other.taskType];
  }
  if (other.hasTaskDesc) {
    [self setTaskDesc:other.taskDesc];
  }
  if (other.hasTaskDescType) {
    [self setTaskDescType:other.taskDescType];
  }
  if (other.hasPosition) {
    [self setPosition:other.position];
  }
  if (other.receiverUinArray.count > 0) {
    if (resultPbImMsgTask.receiverUinArray == nil) {
      resultPbImMsgTask.receiverUinArray = [other.receiverUinArray copy];
    } else {
      [resultPbImMsgTask.receiverUinArray appendArray:other.receiverUinArray];
    }
  }
  if (other.hasOperateType) {
    [self setOperateType:other.operateType];
  }
  if (other.hasAssignDesc) {
    [self setAssignDesc:other.assignDesc];
  }
  if (other.hasTaskEnd) {
    [self setTaskEnd:other.taskEnd];
  }
  if (other.hasTaskStatus) {
    [self setTaskStatus:other.taskStatus];
  }
  if (other.hasOperateStatus) {
    [self setOperateStatus:other.operateStatus];
  }
  if (other.operateUinArray.count > 0) {
    if (resultPbImMsgTask.operateUinArray == nil) {
      resultPbImMsgTask.operateUinArray = [other.operateUinArray copy];
    } else {
      [resultPbImMsgTask.operateUinArray appendArray:other.operateUinArray];
    }
  }
  if (other.hasAttachPlaytime) {
    [self setAttachPlaytime:other.attachPlaytime];
  }
  if (other.hasAttachCount) {
    [self setAttachCount:other.attachCount];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasLastReport) {
    [self mergeLastReport:other.lastReport];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTaskId:[input readString]];
        break;
      }
      case 18: {
        [self setPrjId:[input readString]];
        break;
      }
      case 24: {
        [self setTaskType:[input readInt32]];
        break;
      }
      case 34: {
        [self setTaskDesc:[input readString]];
        break;
      }
      case 40: {
        [self setTaskDescType:[input readInt32]];
        break;
      }
      case 50: {
        [self setPosition:[input readString]];
        break;
      }
      case 56: {
        [self addReceiverUin:[input readInt32]];
        break;
      }
      case 64: {
        [self setOperateType:[input readInt32]];
        break;
      }
      case 74: {
        [self setAssignDesc:[input readString]];
        break;
      }
      case 80: {
        [self setTaskEnd:[input readInt32]];
        break;
      }
      case 88: {
        [self setTaskStatus:[input readInt32]];
        break;
      }
      case 96: {
        [self setOperateStatus:[input readInt32]];
        break;
      }
      case 104: {
        [self addOperateUin:[input readInt32]];
        break;
      }
      case 112: {
        [self setAttachPlaytime:[input readInt32]];
        break;
      }
      case 120: {
        [self setAttachCount:[input readInt32]];
        break;
      }
      case 128: {
        [self setJobType:[input readInt32]];
        break;
      }
      case 138: {
        PbPrjTaskReportBuilder* subBuilder = [PbPrjTaskReport builder];
        if (self.hasLastReport) {
          [subBuilder mergeFrom:self.lastReport];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLastReport:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return resultPbImMsgTask.hasTaskId;
}
- (NSString*) taskId {
  return resultPbImMsgTask.taskId;
}
- (PbImMsgTaskBuilder*) setTaskId:(NSString*) value {
  resultPbImMsgTask.hasTaskId = YES;
  resultPbImMsgTask.taskId = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearTaskId {
  resultPbImMsgTask.hasTaskId = NO;
  resultPbImMsgTask.taskId = @"";
  return self;
}
- (BOOL) hasPrjId {
  return resultPbImMsgTask.hasPrjId;
}
- (NSString*) prjId {
  return resultPbImMsgTask.prjId;
}
- (PbImMsgTaskBuilder*) setPrjId:(NSString*) value {
  resultPbImMsgTask.hasPrjId = YES;
  resultPbImMsgTask.prjId = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearPrjId {
  resultPbImMsgTask.hasPrjId = NO;
  resultPbImMsgTask.prjId = @"";
  return self;
}
- (BOOL) hasTaskType {
  return resultPbImMsgTask.hasTaskType;
}
- (SInt32) taskType {
  return resultPbImMsgTask.taskType;
}
- (PbImMsgTaskBuilder*) setTaskType:(SInt32) value {
  resultPbImMsgTask.hasTaskType = YES;
  resultPbImMsgTask.taskType = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearTaskType {
  resultPbImMsgTask.hasTaskType = NO;
  resultPbImMsgTask.taskType = 0;
  return self;
}
- (BOOL) hasTaskDesc {
  return resultPbImMsgTask.hasTaskDesc;
}
- (NSString*) taskDesc {
  return resultPbImMsgTask.taskDesc;
}
- (PbImMsgTaskBuilder*) setTaskDesc:(NSString*) value {
  resultPbImMsgTask.hasTaskDesc = YES;
  resultPbImMsgTask.taskDesc = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearTaskDesc {
  resultPbImMsgTask.hasTaskDesc = NO;
  resultPbImMsgTask.taskDesc = @"";
  return self;
}
- (BOOL) hasTaskDescType {
  return resultPbImMsgTask.hasTaskDescType;
}
- (SInt32) taskDescType {
  return resultPbImMsgTask.taskDescType;
}
- (PbImMsgTaskBuilder*) setTaskDescType:(SInt32) value {
  resultPbImMsgTask.hasTaskDescType = YES;
  resultPbImMsgTask.taskDescType = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearTaskDescType {
  resultPbImMsgTask.hasTaskDescType = NO;
  resultPbImMsgTask.taskDescType = 0;
  return self;
}
- (BOOL) hasPosition {
  return resultPbImMsgTask.hasPosition;
}
- (NSString*) position {
  return resultPbImMsgTask.position;
}
- (PbImMsgTaskBuilder*) setPosition:(NSString*) value {
  resultPbImMsgTask.hasPosition = YES;
  resultPbImMsgTask.position = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearPosition {
  resultPbImMsgTask.hasPosition = NO;
  resultPbImMsgTask.position = @"";
  return self;
}
- (PBAppendableArray *)receiverUin {
  return resultPbImMsgTask.receiverUinArray;
}
- (SInt32)receiverUinAtIndex:(NSUInteger)index {
  return [resultPbImMsgTask receiverUinAtIndex:index];
}
- (PbImMsgTaskBuilder *)addReceiverUin:(SInt32)value {
  if (resultPbImMsgTask.receiverUinArray == nil) {
    resultPbImMsgTask.receiverUinArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultPbImMsgTask.receiverUinArray addInt32:value];
  return self;
}
- (PbImMsgTaskBuilder *)setReceiverUinArray:(NSArray *)array {
  resultPbImMsgTask.receiverUinArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (PbImMsgTaskBuilder *)setReceiverUinValues:(const SInt32 *)values count:(NSUInteger)count {
  resultPbImMsgTask.receiverUinArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (PbImMsgTaskBuilder *)clearReceiverUin {
  resultPbImMsgTask.receiverUinArray = nil;
  return self;
}
- (BOOL) hasOperateType {
  return resultPbImMsgTask.hasOperateType;
}
- (SInt32) operateType {
  return resultPbImMsgTask.operateType;
}
- (PbImMsgTaskBuilder*) setOperateType:(SInt32) value {
  resultPbImMsgTask.hasOperateType = YES;
  resultPbImMsgTask.operateType = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearOperateType {
  resultPbImMsgTask.hasOperateType = NO;
  resultPbImMsgTask.operateType = 0;
  return self;
}
- (BOOL) hasAssignDesc {
  return resultPbImMsgTask.hasAssignDesc;
}
- (NSString*) assignDesc {
  return resultPbImMsgTask.assignDesc;
}
- (PbImMsgTaskBuilder*) setAssignDesc:(NSString*) value {
  resultPbImMsgTask.hasAssignDesc = YES;
  resultPbImMsgTask.assignDesc = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearAssignDesc {
  resultPbImMsgTask.hasAssignDesc = NO;
  resultPbImMsgTask.assignDesc = @"";
  return self;
}
- (BOOL) hasTaskEnd {
  return resultPbImMsgTask.hasTaskEnd;
}
- (SInt32) taskEnd {
  return resultPbImMsgTask.taskEnd;
}
- (PbImMsgTaskBuilder*) setTaskEnd:(SInt32) value {
  resultPbImMsgTask.hasTaskEnd = YES;
  resultPbImMsgTask.taskEnd = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearTaskEnd {
  resultPbImMsgTask.hasTaskEnd = NO;
  resultPbImMsgTask.taskEnd = 0;
  return self;
}
- (BOOL) hasTaskStatus {
  return resultPbImMsgTask.hasTaskStatus;
}
- (SInt32) taskStatus {
  return resultPbImMsgTask.taskStatus;
}
- (PbImMsgTaskBuilder*) setTaskStatus:(SInt32) value {
  resultPbImMsgTask.hasTaskStatus = YES;
  resultPbImMsgTask.taskStatus = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearTaskStatus {
  resultPbImMsgTask.hasTaskStatus = NO;
  resultPbImMsgTask.taskStatus = 0;
  return self;
}
- (BOOL) hasOperateStatus {
  return resultPbImMsgTask.hasOperateStatus;
}
- (SInt32) operateStatus {
  return resultPbImMsgTask.operateStatus;
}
- (PbImMsgTaskBuilder*) setOperateStatus:(SInt32) value {
  resultPbImMsgTask.hasOperateStatus = YES;
  resultPbImMsgTask.operateStatus = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearOperateStatus {
  resultPbImMsgTask.hasOperateStatus = NO;
  resultPbImMsgTask.operateStatus = 0;
  return self;
}
- (PBAppendableArray *)operateUin {
  return resultPbImMsgTask.operateUinArray;
}
- (SInt32)operateUinAtIndex:(NSUInteger)index {
  return [resultPbImMsgTask operateUinAtIndex:index];
}
- (PbImMsgTaskBuilder *)addOperateUin:(SInt32)value {
  if (resultPbImMsgTask.operateUinArray == nil) {
    resultPbImMsgTask.operateUinArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultPbImMsgTask.operateUinArray addInt32:value];
  return self;
}
- (PbImMsgTaskBuilder *)setOperateUinArray:(NSArray *)array {
  resultPbImMsgTask.operateUinArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (PbImMsgTaskBuilder *)setOperateUinValues:(const SInt32 *)values count:(NSUInteger)count {
  resultPbImMsgTask.operateUinArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (PbImMsgTaskBuilder *)clearOperateUin {
  resultPbImMsgTask.operateUinArray = nil;
  return self;
}
- (BOOL) hasAttachPlaytime {
  return resultPbImMsgTask.hasAttachPlaytime;
}
- (SInt32) attachPlaytime {
  return resultPbImMsgTask.attachPlaytime;
}
- (PbImMsgTaskBuilder*) setAttachPlaytime:(SInt32) value {
  resultPbImMsgTask.hasAttachPlaytime = YES;
  resultPbImMsgTask.attachPlaytime = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearAttachPlaytime {
  resultPbImMsgTask.hasAttachPlaytime = NO;
  resultPbImMsgTask.attachPlaytime = 0;
  return self;
}
- (BOOL) hasAttachCount {
  return resultPbImMsgTask.hasAttachCount;
}
- (SInt32) attachCount {
  return resultPbImMsgTask.attachCount;
}
- (PbImMsgTaskBuilder*) setAttachCount:(SInt32) value {
  resultPbImMsgTask.hasAttachCount = YES;
  resultPbImMsgTask.attachCount = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearAttachCount {
  resultPbImMsgTask.hasAttachCount = NO;
  resultPbImMsgTask.attachCount = 0;
  return self;
}
- (BOOL) hasJobType {
  return resultPbImMsgTask.hasJobType;
}
- (SInt32) jobType {
  return resultPbImMsgTask.jobType;
}
- (PbImMsgTaskBuilder*) setJobType:(SInt32) value {
  resultPbImMsgTask.hasJobType = YES;
  resultPbImMsgTask.jobType = value;
  return self;
}
- (PbImMsgTaskBuilder*) clearJobType {
  resultPbImMsgTask.hasJobType = NO;
  resultPbImMsgTask.jobType = 0;
  return self;
}
- (BOOL) hasLastReport {
  return resultPbImMsgTask.hasLastReport;
}
- (PbPrjTaskReport*) lastReport {
  return resultPbImMsgTask.lastReport;
}
- (PbImMsgTaskBuilder*) setLastReport:(PbPrjTaskReport*) value {
  resultPbImMsgTask.hasLastReport = YES;
  resultPbImMsgTask.lastReport = value;
  return self;
}
- (PbImMsgTaskBuilder*) setLastReportBuilder:(PbPrjTaskReportBuilder*) builderForValue {
  return [self setLastReport:[builderForValue build]];
}
- (PbImMsgTaskBuilder*) mergeLastReport:(PbPrjTaskReport*) value {
  if (resultPbImMsgTask.hasLastReport &&
      resultPbImMsgTask.lastReport != [PbPrjTaskReport defaultInstance]) {
    resultPbImMsgTask.lastReport =
      [[[PbPrjTaskReport builderWithPrototype:resultPbImMsgTask.lastReport] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgTask.lastReport = value;
  }
  resultPbImMsgTask.hasLastReport = YES;
  return self;
}
- (PbImMsgTaskBuilder*) clearLastReport {
  resultPbImMsgTask.hasLastReport = NO;
  resultPbImMsgTask.lastReport = [PbPrjTaskReport defaultInstance];
  return self;
}
@end

@interface PbImMsgWeather ()
@property (strong) NSString* prjId;
@property (strong) NSString* prjName;
@property (strong) PbPrjWeatherBase* weather;
@end

@implementation PbImMsgWeather

- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasPrjName {
  return !!hasPrjName_;
}
- (void) setHasPrjName:(BOOL) _value_ {
  hasPrjName_ = !!_value_;
}
@synthesize prjName;
- (BOOL) hasWeather {
  return !!hasWeather_;
}
- (void) setHasWeather:(BOOL) _value_ {
  hasWeather_ = !!_value_;
}
@synthesize weather;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjId = @"";
    self.prjName = @"";
    self.weather = [PbPrjWeatherBase defaultInstance];
  }
  return self;
}
static PbImMsgWeather* defaultPbImMsgWeatherInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgWeather class]) {
    defaultPbImMsgWeatherInstance = [[PbImMsgWeather alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgWeatherInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgWeatherInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjId) {
    [output writeString:1 value:self.prjId];
  }
  if (self.hasPrjName) {
    [output writeString:2 value:self.prjName];
  }
  if (self.hasWeather) {
    [output writeMessage:3 value:self.weather];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjId) {
    size_ += computeStringSize(1, self.prjId);
  }
  if (self.hasPrjName) {
    size_ += computeStringSize(2, self.prjName);
  }
  if (self.hasWeather) {
    size_ += computeMessageSize(3, self.weather);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgWeather*) parseFromData:(NSData*) data {
  return (PbImMsgWeather*)[[[PbImMsgWeather builder] mergeFromData:data] build];
}
+ (PbImMsgWeather*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgWeather*)[[[PbImMsgWeather builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgWeather*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgWeather*)[[[PbImMsgWeather builder] mergeFromInputStream:input] build];
}
+ (PbImMsgWeather*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgWeather*)[[[PbImMsgWeather builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgWeather*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgWeather*)[[[PbImMsgWeather builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgWeather*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgWeather*)[[[PbImMsgWeather builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgWeatherBuilder*) builder {
  return [[PbImMsgWeatherBuilder alloc] init];
}
+ (PbImMsgWeatherBuilder*) builderWithPrototype:(PbImMsgWeather*) prototype {
  return [[PbImMsgWeather builder] mergeFrom:prototype];
}
- (PbImMsgWeatherBuilder*) builder {
  return [PbImMsgWeather builder];
}
- (PbImMsgWeatherBuilder*) toBuilder {
  return [PbImMsgWeather builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasPrjName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjName", self.prjName];
  }
  if (self.hasWeather) {
    [output appendFormat:@"%@%@ {\n", indent, @"weather"];
    [self.weather writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasPrjName) {
    [dictionary setObject: self.prjName forKey: @"prjName"];
  }
  if (self.hasWeather) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.weather storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"weather"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgWeather class]]) {
    return NO;
  }
  PbImMsgWeather *otherMessage = other;
  return
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasPrjName == otherMessage.hasPrjName &&
      (!self.hasPrjName || [self.prjName isEqual:otherMessage.prjName]) &&
      self.hasWeather == otherMessage.hasWeather &&
      (!self.hasWeather || [self.weather isEqual:otherMessage.weather]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasPrjName) {
    hashCode = hashCode * 31 + [self.prjName hash];
  }
  if (self.hasWeather) {
    hashCode = hashCode * 31 + [self.weather hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgWeatherBuilder()
@property (strong) PbImMsgWeather* resultPbImMsgWeather;
@end

@implementation PbImMsgWeatherBuilder
@synthesize resultPbImMsgWeather;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgWeather = [[PbImMsgWeather alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgWeather;
}
- (PbImMsgWeatherBuilder*) clear {
  self.resultPbImMsgWeather = [[PbImMsgWeather alloc] init];
  return self;
}
- (PbImMsgWeatherBuilder*) clone {
  return [PbImMsgWeather builderWithPrototype:resultPbImMsgWeather];
}
- (PbImMsgWeather*) defaultInstance {
  return [PbImMsgWeather defaultInstance];
}
- (PbImMsgWeather*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgWeather*) buildPartial {
  PbImMsgWeather* returnMe = resultPbImMsgWeather;
  self.resultPbImMsgWeather = nil;
  return returnMe;
}
- (PbImMsgWeatherBuilder*) mergeFrom:(PbImMsgWeather*) other {
  if (other == [PbImMsgWeather defaultInstance]) {
    return self;
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasPrjName) {
    [self setPrjName:other.prjName];
  }
  if (other.hasWeather) {
    [self mergeWeather:other.weather];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgWeatherBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgWeatherBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjId:[input readString]];
        break;
      }
      case 18: {
        [self setPrjName:[input readString]];
        break;
      }
      case 26: {
        PbPrjWeatherBaseBuilder* subBuilder = [PbPrjWeatherBase builder];
        if (self.hasWeather) {
          [subBuilder mergeFrom:self.weather];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWeather:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjId {
  return resultPbImMsgWeather.hasPrjId;
}
- (NSString*) prjId {
  return resultPbImMsgWeather.prjId;
}
- (PbImMsgWeatherBuilder*) setPrjId:(NSString*) value {
  resultPbImMsgWeather.hasPrjId = YES;
  resultPbImMsgWeather.prjId = value;
  return self;
}
- (PbImMsgWeatherBuilder*) clearPrjId {
  resultPbImMsgWeather.hasPrjId = NO;
  resultPbImMsgWeather.prjId = @"";
  return self;
}
- (BOOL) hasPrjName {
  return resultPbImMsgWeather.hasPrjName;
}
- (NSString*) prjName {
  return resultPbImMsgWeather.prjName;
}
- (PbImMsgWeatherBuilder*) setPrjName:(NSString*) value {
  resultPbImMsgWeather.hasPrjName = YES;
  resultPbImMsgWeather.prjName = value;
  return self;
}
- (PbImMsgWeatherBuilder*) clearPrjName {
  resultPbImMsgWeather.hasPrjName = NO;
  resultPbImMsgWeather.prjName = @"";
  return self;
}
- (BOOL) hasWeather {
  return resultPbImMsgWeather.hasWeather;
}
- (PbPrjWeatherBase*) weather {
  return resultPbImMsgWeather.weather;
}
- (PbImMsgWeatherBuilder*) setWeather:(PbPrjWeatherBase*) value {
  resultPbImMsgWeather.hasWeather = YES;
  resultPbImMsgWeather.weather = value;
  return self;
}
- (PbImMsgWeatherBuilder*) setWeatherBuilder:(PbPrjWeatherBaseBuilder*) builderForValue {
  return [self setWeather:[builderForValue build]];
}
- (PbImMsgWeatherBuilder*) mergeWeather:(PbPrjWeatherBase*) value {
  if (resultPbImMsgWeather.hasWeather &&
      resultPbImMsgWeather.weather != [PbPrjWeatherBase defaultInstance]) {
    resultPbImMsgWeather.weather =
      [[[PbPrjWeatherBase builderWithPrototype:resultPbImMsgWeather.weather] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgWeather.weather = value;
  }
  resultPbImMsgWeather.hasWeather = YES;
  return self;
}
- (PbImMsgWeatherBuilder*) clearWeather {
  resultPbImMsgWeather.hasWeather = NO;
  resultPbImMsgWeather.weather = [PbPrjWeatherBase defaultInstance];
  return self;
}
@end

@interface PbImMsgBook ()
@property SInt32 bookType;
@property (strong) NSString* bookId;
@property (strong) NSString* bookName;
@property (strong) NSString* bookCataId;
@property (strong) NSString* bookCataInfo;
@property (strong) NSString* bookSubcataId;
@property (strong) NSString* bookSubcataInfo;
@property (strong) NSString* bookInfoId;
@property (strong) NSString* bookInfo;
@end

@implementation PbImMsgBook

- (BOOL) hasBookType {
  return !!hasBookType_;
}
- (void) setHasBookType:(BOOL) _value_ {
  hasBookType_ = !!_value_;
}
@synthesize bookType;
- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (BOOL) hasBookName {
  return !!hasBookName_;
}
- (void) setHasBookName:(BOOL) _value_ {
  hasBookName_ = !!_value_;
}
@synthesize bookName;
- (BOOL) hasBookCataId {
  return !!hasBookCataId_;
}
- (void) setHasBookCataId:(BOOL) _value_ {
  hasBookCataId_ = !!_value_;
}
@synthesize bookCataId;
- (BOOL) hasBookCataInfo {
  return !!hasBookCataInfo_;
}
- (void) setHasBookCataInfo:(BOOL) _value_ {
  hasBookCataInfo_ = !!_value_;
}
@synthesize bookCataInfo;
- (BOOL) hasBookSubcataId {
  return !!hasBookSubcataId_;
}
- (void) setHasBookSubcataId:(BOOL) _value_ {
  hasBookSubcataId_ = !!_value_;
}
@synthesize bookSubcataId;
- (BOOL) hasBookSubcataInfo {
  return !!hasBookSubcataInfo_;
}
- (void) setHasBookSubcataInfo:(BOOL) _value_ {
  hasBookSubcataInfo_ = !!_value_;
}
@synthesize bookSubcataInfo;
- (BOOL) hasBookInfoId {
  return !!hasBookInfoId_;
}
- (void) setHasBookInfoId:(BOOL) _value_ {
  hasBookInfoId_ = !!_value_;
}
@synthesize bookInfoId;
- (BOOL) hasBookInfo {
  return !!hasBookInfo_;
}
- (void) setHasBookInfo:(BOOL) _value_ {
  hasBookInfo_ = !!_value_;
}
@synthesize bookInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.bookType = 0;
    self.bookId = @"";
    self.bookName = @"";
    self.bookCataId = @"";
    self.bookCataInfo = @"";
    self.bookSubcataId = @"";
    self.bookSubcataInfo = @"";
    self.bookInfoId = @"";
    self.bookInfo = @"";
  }
  return self;
}
static PbImMsgBook* defaultPbImMsgBookInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgBook class]) {
    defaultPbImMsgBookInstance = [[PbImMsgBook alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgBookInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgBookInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookType) {
    [output writeInt32:1 value:self.bookType];
  }
  if (self.hasBookId) {
    [output writeString:2 value:self.bookId];
  }
  if (self.hasBookName) {
    [output writeString:3 value:self.bookName];
  }
  if (self.hasBookCataId) {
    [output writeString:4 value:self.bookCataId];
  }
  if (self.hasBookCataInfo) {
    [output writeString:5 value:self.bookCataInfo];
  }
  if (self.hasBookSubcataId) {
    [output writeString:6 value:self.bookSubcataId];
  }
  if (self.hasBookSubcataInfo) {
    [output writeString:7 value:self.bookSubcataInfo];
  }
  if (self.hasBookInfoId) {
    [output writeString:8 value:self.bookInfoId];
  }
  if (self.hasBookInfo) {
    [output writeString:9 value:self.bookInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBookType) {
    size_ += computeInt32Size(1, self.bookType);
  }
  if (self.hasBookId) {
    size_ += computeStringSize(2, self.bookId);
  }
  if (self.hasBookName) {
    size_ += computeStringSize(3, self.bookName);
  }
  if (self.hasBookCataId) {
    size_ += computeStringSize(4, self.bookCataId);
  }
  if (self.hasBookCataInfo) {
    size_ += computeStringSize(5, self.bookCataInfo);
  }
  if (self.hasBookSubcataId) {
    size_ += computeStringSize(6, self.bookSubcataId);
  }
  if (self.hasBookSubcataInfo) {
    size_ += computeStringSize(7, self.bookSubcataInfo);
  }
  if (self.hasBookInfoId) {
    size_ += computeStringSize(8, self.bookInfoId);
  }
  if (self.hasBookInfo) {
    size_ += computeStringSize(9, self.bookInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgBook*) parseFromData:(NSData*) data {
  return (PbImMsgBook*)[[[PbImMsgBook builder] mergeFromData:data] build];
}
+ (PbImMsgBook*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgBook*)[[[PbImMsgBook builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgBook*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgBook*)[[[PbImMsgBook builder] mergeFromInputStream:input] build];
}
+ (PbImMsgBook*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgBook*)[[[PbImMsgBook builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgBook*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgBook*)[[[PbImMsgBook builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgBook*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgBook*)[[[PbImMsgBook builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgBookBuilder*) builder {
  return [[PbImMsgBookBuilder alloc] init];
}
+ (PbImMsgBookBuilder*) builderWithPrototype:(PbImMsgBook*) prototype {
  return [[PbImMsgBook builder] mergeFrom:prototype];
}
- (PbImMsgBookBuilder*) builder {
  return [PbImMsgBook builder];
}
- (PbImMsgBookBuilder*) toBuilder {
  return [PbImMsgBook builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBookType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookType", [NSNumber numberWithInteger:self.bookType]];
  }
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", self.bookId];
  }
  if (self.hasBookName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookName", self.bookName];
  }
  if (self.hasBookCataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookCataId", self.bookCataId];
  }
  if (self.hasBookCataInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookCataInfo", self.bookCataInfo];
  }
  if (self.hasBookSubcataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookSubcataId", self.bookSubcataId];
  }
  if (self.hasBookSubcataInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookSubcataInfo", self.bookSubcataInfo];
  }
  if (self.hasBookInfoId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookInfoId", self.bookInfoId];
  }
  if (self.hasBookInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookInfo", self.bookInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBookType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookType] forKey: @"bookType"];
  }
  if (self.hasBookId) {
    [dictionary setObject: self.bookId forKey: @"bookId"];
  }
  if (self.hasBookName) {
    [dictionary setObject: self.bookName forKey: @"bookName"];
  }
  if (self.hasBookCataId) {
    [dictionary setObject: self.bookCataId forKey: @"bookCataId"];
  }
  if (self.hasBookCataInfo) {
    [dictionary setObject: self.bookCataInfo forKey: @"bookCataInfo"];
  }
  if (self.hasBookSubcataId) {
    [dictionary setObject: self.bookSubcataId forKey: @"bookSubcataId"];
  }
  if (self.hasBookSubcataInfo) {
    [dictionary setObject: self.bookSubcataInfo forKey: @"bookSubcataInfo"];
  }
  if (self.hasBookInfoId) {
    [dictionary setObject: self.bookInfoId forKey: @"bookInfoId"];
  }
  if (self.hasBookInfo) {
    [dictionary setObject: self.bookInfo forKey: @"bookInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgBook class]]) {
    return NO;
  }
  PbImMsgBook *otherMessage = other;
  return
      self.hasBookType == otherMessage.hasBookType &&
      (!self.hasBookType || self.bookType == otherMessage.bookType) &&
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || [self.bookId isEqual:otherMessage.bookId]) &&
      self.hasBookName == otherMessage.hasBookName &&
      (!self.hasBookName || [self.bookName isEqual:otherMessage.bookName]) &&
      self.hasBookCataId == otherMessage.hasBookCataId &&
      (!self.hasBookCataId || [self.bookCataId isEqual:otherMessage.bookCataId]) &&
      self.hasBookCataInfo == otherMessage.hasBookCataInfo &&
      (!self.hasBookCataInfo || [self.bookCataInfo isEqual:otherMessage.bookCataInfo]) &&
      self.hasBookSubcataId == otherMessage.hasBookSubcataId &&
      (!self.hasBookSubcataId || [self.bookSubcataId isEqual:otherMessage.bookSubcataId]) &&
      self.hasBookSubcataInfo == otherMessage.hasBookSubcataInfo &&
      (!self.hasBookSubcataInfo || [self.bookSubcataInfo isEqual:otherMessage.bookSubcataInfo]) &&
      self.hasBookInfoId == otherMessage.hasBookInfoId &&
      (!self.hasBookInfoId || [self.bookInfoId isEqual:otherMessage.bookInfoId]) &&
      self.hasBookInfo == otherMessage.hasBookInfo &&
      (!self.hasBookInfo || [self.bookInfo isEqual:otherMessage.bookInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBookType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookType] hash];
  }
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [self.bookId hash];
  }
  if (self.hasBookName) {
    hashCode = hashCode * 31 + [self.bookName hash];
  }
  if (self.hasBookCataId) {
    hashCode = hashCode * 31 + [self.bookCataId hash];
  }
  if (self.hasBookCataInfo) {
    hashCode = hashCode * 31 + [self.bookCataInfo hash];
  }
  if (self.hasBookSubcataId) {
    hashCode = hashCode * 31 + [self.bookSubcataId hash];
  }
  if (self.hasBookSubcataInfo) {
    hashCode = hashCode * 31 + [self.bookSubcataInfo hash];
  }
  if (self.hasBookInfoId) {
    hashCode = hashCode * 31 + [self.bookInfoId hash];
  }
  if (self.hasBookInfo) {
    hashCode = hashCode * 31 + [self.bookInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgBookBuilder()
@property (strong) PbImMsgBook* resultPbImMsgBook;
@end

@implementation PbImMsgBookBuilder
@synthesize resultPbImMsgBook;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgBook = [[PbImMsgBook alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgBook;
}
- (PbImMsgBookBuilder*) clear {
  self.resultPbImMsgBook = [[PbImMsgBook alloc] init];
  return self;
}
- (PbImMsgBookBuilder*) clone {
  return [PbImMsgBook builderWithPrototype:resultPbImMsgBook];
}
- (PbImMsgBook*) defaultInstance {
  return [PbImMsgBook defaultInstance];
}
- (PbImMsgBook*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgBook*) buildPartial {
  PbImMsgBook* returnMe = resultPbImMsgBook;
  self.resultPbImMsgBook = nil;
  return returnMe;
}
- (PbImMsgBookBuilder*) mergeFrom:(PbImMsgBook*) other {
  if (other == [PbImMsgBook defaultInstance]) {
    return self;
  }
  if (other.hasBookType) {
    [self setBookType:other.bookType];
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  if (other.hasBookName) {
    [self setBookName:other.bookName];
  }
  if (other.hasBookCataId) {
    [self setBookCataId:other.bookCataId];
  }
  if (other.hasBookCataInfo) {
    [self setBookCataInfo:other.bookCataInfo];
  }
  if (other.hasBookSubcataId) {
    [self setBookSubcataId:other.bookSubcataId];
  }
  if (other.hasBookSubcataInfo) {
    [self setBookSubcataInfo:other.bookSubcataInfo];
  }
  if (other.hasBookInfoId) {
    [self setBookInfoId:other.bookInfoId];
  }
  if (other.hasBookInfo) {
    [self setBookInfo:other.bookInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgBookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgBookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBookType:[input readInt32]];
        break;
      }
      case 18: {
        [self setBookId:[input readString]];
        break;
      }
      case 26: {
        [self setBookName:[input readString]];
        break;
      }
      case 34: {
        [self setBookCataId:[input readString]];
        break;
      }
      case 42: {
        [self setBookCataInfo:[input readString]];
        break;
      }
      case 50: {
        [self setBookSubcataId:[input readString]];
        break;
      }
      case 58: {
        [self setBookSubcataInfo:[input readString]];
        break;
      }
      case 66: {
        [self setBookInfoId:[input readString]];
        break;
      }
      case 74: {
        [self setBookInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasBookType {
  return resultPbImMsgBook.hasBookType;
}
- (SInt32) bookType {
  return resultPbImMsgBook.bookType;
}
- (PbImMsgBookBuilder*) setBookType:(SInt32) value {
  resultPbImMsgBook.hasBookType = YES;
  resultPbImMsgBook.bookType = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookType {
  resultPbImMsgBook.hasBookType = NO;
  resultPbImMsgBook.bookType = 0;
  return self;
}
- (BOOL) hasBookId {
  return resultPbImMsgBook.hasBookId;
}
- (NSString*) bookId {
  return resultPbImMsgBook.bookId;
}
- (PbImMsgBookBuilder*) setBookId:(NSString*) value {
  resultPbImMsgBook.hasBookId = YES;
  resultPbImMsgBook.bookId = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookId {
  resultPbImMsgBook.hasBookId = NO;
  resultPbImMsgBook.bookId = @"";
  return self;
}
- (BOOL) hasBookName {
  return resultPbImMsgBook.hasBookName;
}
- (NSString*) bookName {
  return resultPbImMsgBook.bookName;
}
- (PbImMsgBookBuilder*) setBookName:(NSString*) value {
  resultPbImMsgBook.hasBookName = YES;
  resultPbImMsgBook.bookName = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookName {
  resultPbImMsgBook.hasBookName = NO;
  resultPbImMsgBook.bookName = @"";
  return self;
}
- (BOOL) hasBookCataId {
  return resultPbImMsgBook.hasBookCataId;
}
- (NSString*) bookCataId {
  return resultPbImMsgBook.bookCataId;
}
- (PbImMsgBookBuilder*) setBookCataId:(NSString*) value {
  resultPbImMsgBook.hasBookCataId = YES;
  resultPbImMsgBook.bookCataId = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookCataId {
  resultPbImMsgBook.hasBookCataId = NO;
  resultPbImMsgBook.bookCataId = @"";
  return self;
}
- (BOOL) hasBookCataInfo {
  return resultPbImMsgBook.hasBookCataInfo;
}
- (NSString*) bookCataInfo {
  return resultPbImMsgBook.bookCataInfo;
}
- (PbImMsgBookBuilder*) setBookCataInfo:(NSString*) value {
  resultPbImMsgBook.hasBookCataInfo = YES;
  resultPbImMsgBook.bookCataInfo = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookCataInfo {
  resultPbImMsgBook.hasBookCataInfo = NO;
  resultPbImMsgBook.bookCataInfo = @"";
  return self;
}
- (BOOL) hasBookSubcataId {
  return resultPbImMsgBook.hasBookSubcataId;
}
- (NSString*) bookSubcataId {
  return resultPbImMsgBook.bookSubcataId;
}
- (PbImMsgBookBuilder*) setBookSubcataId:(NSString*) value {
  resultPbImMsgBook.hasBookSubcataId = YES;
  resultPbImMsgBook.bookSubcataId = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookSubcataId {
  resultPbImMsgBook.hasBookSubcataId = NO;
  resultPbImMsgBook.bookSubcataId = @"";
  return self;
}
- (BOOL) hasBookSubcataInfo {
  return resultPbImMsgBook.hasBookSubcataInfo;
}
- (NSString*) bookSubcataInfo {
  return resultPbImMsgBook.bookSubcataInfo;
}
- (PbImMsgBookBuilder*) setBookSubcataInfo:(NSString*) value {
  resultPbImMsgBook.hasBookSubcataInfo = YES;
  resultPbImMsgBook.bookSubcataInfo = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookSubcataInfo {
  resultPbImMsgBook.hasBookSubcataInfo = NO;
  resultPbImMsgBook.bookSubcataInfo = @"";
  return self;
}
- (BOOL) hasBookInfoId {
  return resultPbImMsgBook.hasBookInfoId;
}
- (NSString*) bookInfoId {
  return resultPbImMsgBook.bookInfoId;
}
- (PbImMsgBookBuilder*) setBookInfoId:(NSString*) value {
  resultPbImMsgBook.hasBookInfoId = YES;
  resultPbImMsgBook.bookInfoId = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookInfoId {
  resultPbImMsgBook.hasBookInfoId = NO;
  resultPbImMsgBook.bookInfoId = @"";
  return self;
}
- (BOOL) hasBookInfo {
  return resultPbImMsgBook.hasBookInfo;
}
- (NSString*) bookInfo {
  return resultPbImMsgBook.bookInfo;
}
- (PbImMsgBookBuilder*) setBookInfo:(NSString*) value {
  resultPbImMsgBook.hasBookInfo = YES;
  resultPbImMsgBook.bookInfo = value;
  return self;
}
- (PbImMsgBookBuilder*) clearBookInfo {
  resultPbImMsgBook.hasBookInfo = NO;
  resultPbImMsgBook.bookInfo = @"";
  return self;
}
@end

@interface PbImMsgCard ()
@property (strong) NSString* cardTitle;
@property (strong) NSString* cardImg;
@property (strong) NSString* cardDesc;
@property (strong) NSString* cardAtction;
@property (strong) NSString* cardFrominfo;
@property (strong) NSString* cardFinish;
@property (strong) NSString* cardFinishAction;
@property (strong) NSString* cardExtrc;
@end

@implementation PbImMsgCard

- (BOOL) hasCardTitle {
  return !!hasCardTitle_;
}
- (void) setHasCardTitle:(BOOL) _value_ {
  hasCardTitle_ = !!_value_;
}
@synthesize cardTitle;
- (BOOL) hasCardImg {
  return !!hasCardImg_;
}
- (void) setHasCardImg:(BOOL) _value_ {
  hasCardImg_ = !!_value_;
}
@synthesize cardImg;
- (BOOL) hasCardDesc {
  return !!hasCardDesc_;
}
- (void) setHasCardDesc:(BOOL) _value_ {
  hasCardDesc_ = !!_value_;
}
@synthesize cardDesc;
- (BOOL) hasCardAtction {
  return !!hasCardAtction_;
}
- (void) setHasCardAtction:(BOOL) _value_ {
  hasCardAtction_ = !!_value_;
}
@synthesize cardAtction;
- (BOOL) hasCardFrominfo {
  return !!hasCardFrominfo_;
}
- (void) setHasCardFrominfo:(BOOL) _value_ {
  hasCardFrominfo_ = !!_value_;
}
@synthesize cardFrominfo;
- (BOOL) hasCardFinish {
  return !!hasCardFinish_;
}
- (void) setHasCardFinish:(BOOL) _value_ {
  hasCardFinish_ = !!_value_;
}
@synthesize cardFinish;
- (BOOL) hasCardFinishAction {
  return !!hasCardFinishAction_;
}
- (void) setHasCardFinishAction:(BOOL) _value_ {
  hasCardFinishAction_ = !!_value_;
}
@synthesize cardFinishAction;
- (BOOL) hasCardExtrc {
  return !!hasCardExtrc_;
}
- (void) setHasCardExtrc:(BOOL) _value_ {
  hasCardExtrc_ = !!_value_;
}
@synthesize cardExtrc;
- (instancetype) init {
  if ((self = [super init])) {
    self.cardTitle = @"";
    self.cardImg = @"";
    self.cardDesc = @"";
    self.cardAtction = @"";
    self.cardFrominfo = @"";
    self.cardFinish = @"";
    self.cardFinishAction = @"";
    self.cardExtrc = @"";
  }
  return self;
}
static PbImMsgCard* defaultPbImMsgCardInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgCard class]) {
    defaultPbImMsgCardInstance = [[PbImMsgCard alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgCardInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgCardInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCardTitle) {
    [output writeString:1 value:self.cardTitle];
  }
  if (self.hasCardImg) {
    [output writeString:2 value:self.cardImg];
  }
  if (self.hasCardDesc) {
    [output writeString:3 value:self.cardDesc];
  }
  if (self.hasCardAtction) {
    [output writeString:4 value:self.cardAtction];
  }
  if (self.hasCardFrominfo) {
    [output writeString:5 value:self.cardFrominfo];
  }
  if (self.hasCardFinish) {
    [output writeString:6 value:self.cardFinish];
  }
  if (self.hasCardFinishAction) {
    [output writeString:7 value:self.cardFinishAction];
  }
  if (self.hasCardExtrc) {
    [output writeString:8 value:self.cardExtrc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCardTitle) {
    size_ += computeStringSize(1, self.cardTitle);
  }
  if (self.hasCardImg) {
    size_ += computeStringSize(2, self.cardImg);
  }
  if (self.hasCardDesc) {
    size_ += computeStringSize(3, self.cardDesc);
  }
  if (self.hasCardAtction) {
    size_ += computeStringSize(4, self.cardAtction);
  }
  if (self.hasCardFrominfo) {
    size_ += computeStringSize(5, self.cardFrominfo);
  }
  if (self.hasCardFinish) {
    size_ += computeStringSize(6, self.cardFinish);
  }
  if (self.hasCardFinishAction) {
    size_ += computeStringSize(7, self.cardFinishAction);
  }
  if (self.hasCardExtrc) {
    size_ += computeStringSize(8, self.cardExtrc);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgCard*) parseFromData:(NSData*) data {
  return (PbImMsgCard*)[[[PbImMsgCard builder] mergeFromData:data] build];
}
+ (PbImMsgCard*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgCard*)[[[PbImMsgCard builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgCard*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgCard*)[[[PbImMsgCard builder] mergeFromInputStream:input] build];
}
+ (PbImMsgCard*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgCard*)[[[PbImMsgCard builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgCard*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgCard*)[[[PbImMsgCard builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgCard*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgCard*)[[[PbImMsgCard builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgCardBuilder*) builder {
  return [[PbImMsgCardBuilder alloc] init];
}
+ (PbImMsgCardBuilder*) builderWithPrototype:(PbImMsgCard*) prototype {
  return [[PbImMsgCard builder] mergeFrom:prototype];
}
- (PbImMsgCardBuilder*) builder {
  return [PbImMsgCard builder];
}
- (PbImMsgCardBuilder*) toBuilder {
  return [PbImMsgCard builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCardTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardTitle", self.cardTitle];
  }
  if (self.hasCardImg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardImg", self.cardImg];
  }
  if (self.hasCardDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardDesc", self.cardDesc];
  }
  if (self.hasCardAtction) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardAtction", self.cardAtction];
  }
  if (self.hasCardFrominfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardFrominfo", self.cardFrominfo];
  }
  if (self.hasCardFinish) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardFinish", self.cardFinish];
  }
  if (self.hasCardFinishAction) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardFinishAction", self.cardFinishAction];
  }
  if (self.hasCardExtrc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardExtrc", self.cardExtrc];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCardTitle) {
    [dictionary setObject: self.cardTitle forKey: @"cardTitle"];
  }
  if (self.hasCardImg) {
    [dictionary setObject: self.cardImg forKey: @"cardImg"];
  }
  if (self.hasCardDesc) {
    [dictionary setObject: self.cardDesc forKey: @"cardDesc"];
  }
  if (self.hasCardAtction) {
    [dictionary setObject: self.cardAtction forKey: @"cardAtction"];
  }
  if (self.hasCardFrominfo) {
    [dictionary setObject: self.cardFrominfo forKey: @"cardFrominfo"];
  }
  if (self.hasCardFinish) {
    [dictionary setObject: self.cardFinish forKey: @"cardFinish"];
  }
  if (self.hasCardFinishAction) {
    [dictionary setObject: self.cardFinishAction forKey: @"cardFinishAction"];
  }
  if (self.hasCardExtrc) {
    [dictionary setObject: self.cardExtrc forKey: @"cardExtrc"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgCard class]]) {
    return NO;
  }
  PbImMsgCard *otherMessage = other;
  return
      self.hasCardTitle == otherMessage.hasCardTitle &&
      (!self.hasCardTitle || [self.cardTitle isEqual:otherMessage.cardTitle]) &&
      self.hasCardImg == otherMessage.hasCardImg &&
      (!self.hasCardImg || [self.cardImg isEqual:otherMessage.cardImg]) &&
      self.hasCardDesc == otherMessage.hasCardDesc &&
      (!self.hasCardDesc || [self.cardDesc isEqual:otherMessage.cardDesc]) &&
      self.hasCardAtction == otherMessage.hasCardAtction &&
      (!self.hasCardAtction || [self.cardAtction isEqual:otherMessage.cardAtction]) &&
      self.hasCardFrominfo == otherMessage.hasCardFrominfo &&
      (!self.hasCardFrominfo || [self.cardFrominfo isEqual:otherMessage.cardFrominfo]) &&
      self.hasCardFinish == otherMessage.hasCardFinish &&
      (!self.hasCardFinish || [self.cardFinish isEqual:otherMessage.cardFinish]) &&
      self.hasCardFinishAction == otherMessage.hasCardFinishAction &&
      (!self.hasCardFinishAction || [self.cardFinishAction isEqual:otherMessage.cardFinishAction]) &&
      self.hasCardExtrc == otherMessage.hasCardExtrc &&
      (!self.hasCardExtrc || [self.cardExtrc isEqual:otherMessage.cardExtrc]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCardTitle) {
    hashCode = hashCode * 31 + [self.cardTitle hash];
  }
  if (self.hasCardImg) {
    hashCode = hashCode * 31 + [self.cardImg hash];
  }
  if (self.hasCardDesc) {
    hashCode = hashCode * 31 + [self.cardDesc hash];
  }
  if (self.hasCardAtction) {
    hashCode = hashCode * 31 + [self.cardAtction hash];
  }
  if (self.hasCardFrominfo) {
    hashCode = hashCode * 31 + [self.cardFrominfo hash];
  }
  if (self.hasCardFinish) {
    hashCode = hashCode * 31 + [self.cardFinish hash];
  }
  if (self.hasCardFinishAction) {
    hashCode = hashCode * 31 + [self.cardFinishAction hash];
  }
  if (self.hasCardExtrc) {
    hashCode = hashCode * 31 + [self.cardExtrc hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgCardBuilder()
@property (strong) PbImMsgCard* resultPbImMsgCard;
@end

@implementation PbImMsgCardBuilder
@synthesize resultPbImMsgCard;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgCard = [[PbImMsgCard alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgCard;
}
- (PbImMsgCardBuilder*) clear {
  self.resultPbImMsgCard = [[PbImMsgCard alloc] init];
  return self;
}
- (PbImMsgCardBuilder*) clone {
  return [PbImMsgCard builderWithPrototype:resultPbImMsgCard];
}
- (PbImMsgCard*) defaultInstance {
  return [PbImMsgCard defaultInstance];
}
- (PbImMsgCard*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgCard*) buildPartial {
  PbImMsgCard* returnMe = resultPbImMsgCard;
  self.resultPbImMsgCard = nil;
  return returnMe;
}
- (PbImMsgCardBuilder*) mergeFrom:(PbImMsgCard*) other {
  if (other == [PbImMsgCard defaultInstance]) {
    return self;
  }
  if (other.hasCardTitle) {
    [self setCardTitle:other.cardTitle];
  }
  if (other.hasCardImg) {
    [self setCardImg:other.cardImg];
  }
  if (other.hasCardDesc) {
    [self setCardDesc:other.cardDesc];
  }
  if (other.hasCardAtction) {
    [self setCardAtction:other.cardAtction];
  }
  if (other.hasCardFrominfo) {
    [self setCardFrominfo:other.cardFrominfo];
  }
  if (other.hasCardFinish) {
    [self setCardFinish:other.cardFinish];
  }
  if (other.hasCardFinishAction) {
    [self setCardFinishAction:other.cardFinishAction];
  }
  if (other.hasCardExtrc) {
    [self setCardExtrc:other.cardExtrc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgCardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgCardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCardTitle:[input readString]];
        break;
      }
      case 18: {
        [self setCardImg:[input readString]];
        break;
      }
      case 26: {
        [self setCardDesc:[input readString]];
        break;
      }
      case 34: {
        [self setCardAtction:[input readString]];
        break;
      }
      case 42: {
        [self setCardFrominfo:[input readString]];
        break;
      }
      case 50: {
        [self setCardFinish:[input readString]];
        break;
      }
      case 58: {
        [self setCardFinishAction:[input readString]];
        break;
      }
      case 66: {
        [self setCardExtrc:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCardTitle {
  return resultPbImMsgCard.hasCardTitle;
}
- (NSString*) cardTitle {
  return resultPbImMsgCard.cardTitle;
}
- (PbImMsgCardBuilder*) setCardTitle:(NSString*) value {
  resultPbImMsgCard.hasCardTitle = YES;
  resultPbImMsgCard.cardTitle = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardTitle {
  resultPbImMsgCard.hasCardTitle = NO;
  resultPbImMsgCard.cardTitle = @"";
  return self;
}
- (BOOL) hasCardImg {
  return resultPbImMsgCard.hasCardImg;
}
- (NSString*) cardImg {
  return resultPbImMsgCard.cardImg;
}
- (PbImMsgCardBuilder*) setCardImg:(NSString*) value {
  resultPbImMsgCard.hasCardImg = YES;
  resultPbImMsgCard.cardImg = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardImg {
  resultPbImMsgCard.hasCardImg = NO;
  resultPbImMsgCard.cardImg = @"";
  return self;
}
- (BOOL) hasCardDesc {
  return resultPbImMsgCard.hasCardDesc;
}
- (NSString*) cardDesc {
  return resultPbImMsgCard.cardDesc;
}
- (PbImMsgCardBuilder*) setCardDesc:(NSString*) value {
  resultPbImMsgCard.hasCardDesc = YES;
  resultPbImMsgCard.cardDesc = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardDesc {
  resultPbImMsgCard.hasCardDesc = NO;
  resultPbImMsgCard.cardDesc = @"";
  return self;
}
- (BOOL) hasCardAtction {
  return resultPbImMsgCard.hasCardAtction;
}
- (NSString*) cardAtction {
  return resultPbImMsgCard.cardAtction;
}
- (PbImMsgCardBuilder*) setCardAtction:(NSString*) value {
  resultPbImMsgCard.hasCardAtction = YES;
  resultPbImMsgCard.cardAtction = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardAtction {
  resultPbImMsgCard.hasCardAtction = NO;
  resultPbImMsgCard.cardAtction = @"";
  return self;
}
- (BOOL) hasCardFrominfo {
  return resultPbImMsgCard.hasCardFrominfo;
}
- (NSString*) cardFrominfo {
  return resultPbImMsgCard.cardFrominfo;
}
- (PbImMsgCardBuilder*) setCardFrominfo:(NSString*) value {
  resultPbImMsgCard.hasCardFrominfo = YES;
  resultPbImMsgCard.cardFrominfo = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardFrominfo {
  resultPbImMsgCard.hasCardFrominfo = NO;
  resultPbImMsgCard.cardFrominfo = @"";
  return self;
}
- (BOOL) hasCardFinish {
  return resultPbImMsgCard.hasCardFinish;
}
- (NSString*) cardFinish {
  return resultPbImMsgCard.cardFinish;
}
- (PbImMsgCardBuilder*) setCardFinish:(NSString*) value {
  resultPbImMsgCard.hasCardFinish = YES;
  resultPbImMsgCard.cardFinish = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardFinish {
  resultPbImMsgCard.hasCardFinish = NO;
  resultPbImMsgCard.cardFinish = @"";
  return self;
}
- (BOOL) hasCardFinishAction {
  return resultPbImMsgCard.hasCardFinishAction;
}
- (NSString*) cardFinishAction {
  return resultPbImMsgCard.cardFinishAction;
}
- (PbImMsgCardBuilder*) setCardFinishAction:(NSString*) value {
  resultPbImMsgCard.hasCardFinishAction = YES;
  resultPbImMsgCard.cardFinishAction = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardFinishAction {
  resultPbImMsgCard.hasCardFinishAction = NO;
  resultPbImMsgCard.cardFinishAction = @"";
  return self;
}
- (BOOL) hasCardExtrc {
  return resultPbImMsgCard.hasCardExtrc;
}
- (NSString*) cardExtrc {
  return resultPbImMsgCard.cardExtrc;
}
- (PbImMsgCardBuilder*) setCardExtrc:(NSString*) value {
  resultPbImMsgCard.hasCardExtrc = YES;
  resultPbImMsgCard.cardExtrc = value;
  return self;
}
- (PbImMsgCardBuilder*) clearCardExtrc {
  resultPbImMsgCard.hasCardExtrc = NO;
  resultPbImMsgCard.cardExtrc = @"";
  return self;
}
@end

@interface PbImMsgHotspot ()
@property (strong) NSString* hotspotId;
@property (strong) NSString* hotspotTitle;
@property (strong) NSString* hotspotFirstImage;
@property (strong) NSString* hotspotSourceSite;
@end

@implementation PbImMsgHotspot

- (BOOL) hasHotspotId {
  return !!hasHotspotId_;
}
- (void) setHasHotspotId:(BOOL) _value_ {
  hasHotspotId_ = !!_value_;
}
@synthesize hotspotId;
- (BOOL) hasHotspotTitle {
  return !!hasHotspotTitle_;
}
- (void) setHasHotspotTitle:(BOOL) _value_ {
  hasHotspotTitle_ = !!_value_;
}
@synthesize hotspotTitle;
- (BOOL) hasHotspotFirstImage {
  return !!hasHotspotFirstImage_;
}
- (void) setHasHotspotFirstImage:(BOOL) _value_ {
  hasHotspotFirstImage_ = !!_value_;
}
@synthesize hotspotFirstImage;
- (BOOL) hasHotspotSourceSite {
  return !!hasHotspotSourceSite_;
}
- (void) setHasHotspotSourceSite:(BOOL) _value_ {
  hasHotspotSourceSite_ = !!_value_;
}
@synthesize hotspotSourceSite;
- (instancetype) init {
  if ((self = [super init])) {
    self.hotspotId = @"";
    self.hotspotTitle = @"";
    self.hotspotFirstImage = @"";
    self.hotspotSourceSite = @"";
  }
  return self;
}
static PbImMsgHotspot* defaultPbImMsgHotspotInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgHotspot class]) {
    defaultPbImMsgHotspotInstance = [[PbImMsgHotspot alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgHotspotInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgHotspotInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHotspotId) {
    [output writeString:1 value:self.hotspotId];
  }
  if (self.hasHotspotTitle) {
    [output writeString:2 value:self.hotspotTitle];
  }
  if (self.hasHotspotFirstImage) {
    [output writeString:3 value:self.hotspotFirstImage];
  }
  if (self.hasHotspotSourceSite) {
    [output writeString:4 value:self.hotspotSourceSite];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHotspotId) {
    size_ += computeStringSize(1, self.hotspotId);
  }
  if (self.hasHotspotTitle) {
    size_ += computeStringSize(2, self.hotspotTitle);
  }
  if (self.hasHotspotFirstImage) {
    size_ += computeStringSize(3, self.hotspotFirstImage);
  }
  if (self.hasHotspotSourceSite) {
    size_ += computeStringSize(4, self.hotspotSourceSite);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgHotspot*) parseFromData:(NSData*) data {
  return (PbImMsgHotspot*)[[[PbImMsgHotspot builder] mergeFromData:data] build];
}
+ (PbImMsgHotspot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgHotspot*)[[[PbImMsgHotspot builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgHotspot*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgHotspot*)[[[PbImMsgHotspot builder] mergeFromInputStream:input] build];
}
+ (PbImMsgHotspot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgHotspot*)[[[PbImMsgHotspot builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgHotspot*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgHotspot*)[[[PbImMsgHotspot builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgHotspot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgHotspot*)[[[PbImMsgHotspot builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgHotspotBuilder*) builder {
  return [[PbImMsgHotspotBuilder alloc] init];
}
+ (PbImMsgHotspotBuilder*) builderWithPrototype:(PbImMsgHotspot*) prototype {
  return [[PbImMsgHotspot builder] mergeFrom:prototype];
}
- (PbImMsgHotspotBuilder*) builder {
  return [PbImMsgHotspot builder];
}
- (PbImMsgHotspotBuilder*) toBuilder {
  return [PbImMsgHotspot builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHotspotId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotId", self.hotspotId];
  }
  if (self.hasHotspotTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotTitle", self.hotspotTitle];
  }
  if (self.hasHotspotFirstImage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotFirstImage", self.hotspotFirstImage];
  }
  if (self.hasHotspotSourceSite) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hotspotSourceSite", self.hotspotSourceSite];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHotspotId) {
    [dictionary setObject: self.hotspotId forKey: @"hotspotId"];
  }
  if (self.hasHotspotTitle) {
    [dictionary setObject: self.hotspotTitle forKey: @"hotspotTitle"];
  }
  if (self.hasHotspotFirstImage) {
    [dictionary setObject: self.hotspotFirstImage forKey: @"hotspotFirstImage"];
  }
  if (self.hasHotspotSourceSite) {
    [dictionary setObject: self.hotspotSourceSite forKey: @"hotspotSourceSite"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgHotspot class]]) {
    return NO;
  }
  PbImMsgHotspot *otherMessage = other;
  return
      self.hasHotspotId == otherMessage.hasHotspotId &&
      (!self.hasHotspotId || [self.hotspotId isEqual:otherMessage.hotspotId]) &&
      self.hasHotspotTitle == otherMessage.hasHotspotTitle &&
      (!self.hasHotspotTitle || [self.hotspotTitle isEqual:otherMessage.hotspotTitle]) &&
      self.hasHotspotFirstImage == otherMessage.hasHotspotFirstImage &&
      (!self.hasHotspotFirstImage || [self.hotspotFirstImage isEqual:otherMessage.hotspotFirstImage]) &&
      self.hasHotspotSourceSite == otherMessage.hasHotspotSourceSite &&
      (!self.hasHotspotSourceSite || [self.hotspotSourceSite isEqual:otherMessage.hotspotSourceSite]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHotspotId) {
    hashCode = hashCode * 31 + [self.hotspotId hash];
  }
  if (self.hasHotspotTitle) {
    hashCode = hashCode * 31 + [self.hotspotTitle hash];
  }
  if (self.hasHotspotFirstImage) {
    hashCode = hashCode * 31 + [self.hotspotFirstImage hash];
  }
  if (self.hasHotspotSourceSite) {
    hashCode = hashCode * 31 + [self.hotspotSourceSite hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgHotspotBuilder()
@property (strong) PbImMsgHotspot* resultPbImMsgHotspot;
@end

@implementation PbImMsgHotspotBuilder
@synthesize resultPbImMsgHotspot;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgHotspot = [[PbImMsgHotspot alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgHotspot;
}
- (PbImMsgHotspotBuilder*) clear {
  self.resultPbImMsgHotspot = [[PbImMsgHotspot alloc] init];
  return self;
}
- (PbImMsgHotspotBuilder*) clone {
  return [PbImMsgHotspot builderWithPrototype:resultPbImMsgHotspot];
}
- (PbImMsgHotspot*) defaultInstance {
  return [PbImMsgHotspot defaultInstance];
}
- (PbImMsgHotspot*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgHotspot*) buildPartial {
  PbImMsgHotspot* returnMe = resultPbImMsgHotspot;
  self.resultPbImMsgHotspot = nil;
  return returnMe;
}
- (PbImMsgHotspotBuilder*) mergeFrom:(PbImMsgHotspot*) other {
  if (other == [PbImMsgHotspot defaultInstance]) {
    return self;
  }
  if (other.hasHotspotId) {
    [self setHotspotId:other.hotspotId];
  }
  if (other.hasHotspotTitle) {
    [self setHotspotTitle:other.hotspotTitle];
  }
  if (other.hasHotspotFirstImage) {
    [self setHotspotFirstImage:other.hotspotFirstImage];
  }
  if (other.hasHotspotSourceSite) {
    [self setHotspotSourceSite:other.hotspotSourceSite];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgHotspotBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgHotspotBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setHotspotId:[input readString]];
        break;
      }
      case 18: {
        [self setHotspotTitle:[input readString]];
        break;
      }
      case 26: {
        [self setHotspotFirstImage:[input readString]];
        break;
      }
      case 34: {
        [self setHotspotSourceSite:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasHotspotId {
  return resultPbImMsgHotspot.hasHotspotId;
}
- (NSString*) hotspotId {
  return resultPbImMsgHotspot.hotspotId;
}
- (PbImMsgHotspotBuilder*) setHotspotId:(NSString*) value {
  resultPbImMsgHotspot.hasHotspotId = YES;
  resultPbImMsgHotspot.hotspotId = value;
  return self;
}
- (PbImMsgHotspotBuilder*) clearHotspotId {
  resultPbImMsgHotspot.hasHotspotId = NO;
  resultPbImMsgHotspot.hotspotId = @"";
  return self;
}
- (BOOL) hasHotspotTitle {
  return resultPbImMsgHotspot.hasHotspotTitle;
}
- (NSString*) hotspotTitle {
  return resultPbImMsgHotspot.hotspotTitle;
}
- (PbImMsgHotspotBuilder*) setHotspotTitle:(NSString*) value {
  resultPbImMsgHotspot.hasHotspotTitle = YES;
  resultPbImMsgHotspot.hotspotTitle = value;
  return self;
}
- (PbImMsgHotspotBuilder*) clearHotspotTitle {
  resultPbImMsgHotspot.hasHotspotTitle = NO;
  resultPbImMsgHotspot.hotspotTitle = @"";
  return self;
}
- (BOOL) hasHotspotFirstImage {
  return resultPbImMsgHotspot.hasHotspotFirstImage;
}
- (NSString*) hotspotFirstImage {
  return resultPbImMsgHotspot.hotspotFirstImage;
}
- (PbImMsgHotspotBuilder*) setHotspotFirstImage:(NSString*) value {
  resultPbImMsgHotspot.hasHotspotFirstImage = YES;
  resultPbImMsgHotspot.hotspotFirstImage = value;
  return self;
}
- (PbImMsgHotspotBuilder*) clearHotspotFirstImage {
  resultPbImMsgHotspot.hasHotspotFirstImage = NO;
  resultPbImMsgHotspot.hotspotFirstImage = @"";
  return self;
}
- (BOOL) hasHotspotSourceSite {
  return resultPbImMsgHotspot.hasHotspotSourceSite;
}
- (NSString*) hotspotSourceSite {
  return resultPbImMsgHotspot.hotspotSourceSite;
}
- (PbImMsgHotspotBuilder*) setHotspotSourceSite:(NSString*) value {
  resultPbImMsgHotspot.hasHotspotSourceSite = YES;
  resultPbImMsgHotspot.hotspotSourceSite = value;
  return self;
}
- (PbImMsgHotspotBuilder*) clearHotspotSourceSite {
  resultPbImMsgHotspot.hasHotspotSourceSite = NO;
  resultPbImMsgHotspot.hotspotSourceSite = @"";
  return self;
}
@end

@interface PbImMsgPrjRecordBaseUser ()
@property SInt32 uid;
@property (strong) NSString* name;
@property (strong) NSString* jobType;
@end

@implementation PbImMsgPrjRecordBaseUser

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0;
    self.name = @"";
    self.jobType = @"";
  }
  return self;
}
static PbImMsgPrjRecordBaseUser* defaultPbImMsgPrjRecordBaseUserInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgPrjRecordBaseUser class]) {
    defaultPbImMsgPrjRecordBaseUserInstance = [[PbImMsgPrjRecordBaseUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgPrjRecordBaseUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgPrjRecordBaseUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeInt32:1 value:self.uid];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasJobType) {
    [output writeString:3 value:self.jobType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeInt32Size(1, self.uid);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(3, self.jobType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgPrjRecordBaseUser*) parseFromData:(NSData*) data {
  return (PbImMsgPrjRecordBaseUser*)[[[PbImMsgPrjRecordBaseUser builder] mergeFromData:data] build];
}
+ (PbImMsgPrjRecordBaseUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgPrjRecordBaseUser*)[[[PbImMsgPrjRecordBaseUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgPrjRecordBaseUser*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgPrjRecordBaseUser*)[[[PbImMsgPrjRecordBaseUser builder] mergeFromInputStream:input] build];
}
+ (PbImMsgPrjRecordBaseUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgPrjRecordBaseUser*)[[[PbImMsgPrjRecordBaseUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgPrjRecordBaseUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgPrjRecordBaseUser*)[[[PbImMsgPrjRecordBaseUser builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgPrjRecordBaseUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgPrjRecordBaseUser*)[[[PbImMsgPrjRecordBaseUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgPrjRecordBaseUserBuilder*) builder {
  return [[PbImMsgPrjRecordBaseUserBuilder alloc] init];
}
+ (PbImMsgPrjRecordBaseUserBuilder*) builderWithPrototype:(PbImMsgPrjRecordBaseUser*) prototype {
  return [[PbImMsgPrjRecordBaseUser builder] mergeFrom:prototype];
}
- (PbImMsgPrjRecordBaseUserBuilder*) builder {
  return [PbImMsgPrjRecordBaseUser builder];
}
- (PbImMsgPrjRecordBaseUserBuilder*) toBuilder {
  return [PbImMsgPrjRecordBaseUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithInteger:self.uid]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uid] forKey: @"uid"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgPrjRecordBaseUser class]]) {
    return NO;
  }
  PbImMsgPrjRecordBaseUser *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uid] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgPrjRecordBaseUserBuilder()
@property (strong) PbImMsgPrjRecordBaseUser* resultPbImMsgPrjRecordBaseUser;
@end

@implementation PbImMsgPrjRecordBaseUserBuilder
@synthesize resultPbImMsgPrjRecordBaseUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgPrjRecordBaseUser = [[PbImMsgPrjRecordBaseUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgPrjRecordBaseUser;
}
- (PbImMsgPrjRecordBaseUserBuilder*) clear {
  self.resultPbImMsgPrjRecordBaseUser = [[PbImMsgPrjRecordBaseUser alloc] init];
  return self;
}
- (PbImMsgPrjRecordBaseUserBuilder*) clone {
  return [PbImMsgPrjRecordBaseUser builderWithPrototype:resultPbImMsgPrjRecordBaseUser];
}
- (PbImMsgPrjRecordBaseUser*) defaultInstance {
  return [PbImMsgPrjRecordBaseUser defaultInstance];
}
- (PbImMsgPrjRecordBaseUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgPrjRecordBaseUser*) buildPartial {
  PbImMsgPrjRecordBaseUser* returnMe = resultPbImMsgPrjRecordBaseUser;
  self.resultPbImMsgPrjRecordBaseUser = nil;
  return returnMe;
}
- (PbImMsgPrjRecordBaseUserBuilder*) mergeFrom:(PbImMsgPrjRecordBaseUser*) other {
  if (other == [PbImMsgPrjRecordBaseUser defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgPrjRecordBaseUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgPrjRecordBaseUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setJobType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultPbImMsgPrjRecordBaseUser.hasUid;
}
- (SInt32) uid {
  return resultPbImMsgPrjRecordBaseUser.uid;
}
- (PbImMsgPrjRecordBaseUserBuilder*) setUid:(SInt32) value {
  resultPbImMsgPrjRecordBaseUser.hasUid = YES;
  resultPbImMsgPrjRecordBaseUser.uid = value;
  return self;
}
- (PbImMsgPrjRecordBaseUserBuilder*) clearUid {
  resultPbImMsgPrjRecordBaseUser.hasUid = NO;
  resultPbImMsgPrjRecordBaseUser.uid = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbImMsgPrjRecordBaseUser.hasName;
}
- (NSString*) name {
  return resultPbImMsgPrjRecordBaseUser.name;
}
- (PbImMsgPrjRecordBaseUserBuilder*) setName:(NSString*) value {
  resultPbImMsgPrjRecordBaseUser.hasName = YES;
  resultPbImMsgPrjRecordBaseUser.name = value;
  return self;
}
- (PbImMsgPrjRecordBaseUserBuilder*) clearName {
  resultPbImMsgPrjRecordBaseUser.hasName = NO;
  resultPbImMsgPrjRecordBaseUser.name = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbImMsgPrjRecordBaseUser.hasJobType;
}
- (NSString*) jobType {
  return resultPbImMsgPrjRecordBaseUser.jobType;
}
- (PbImMsgPrjRecordBaseUserBuilder*) setJobType:(NSString*) value {
  resultPbImMsgPrjRecordBaseUser.hasJobType = YES;
  resultPbImMsgPrjRecordBaseUser.jobType = value;
  return self;
}
- (PbImMsgPrjRecordBaseUserBuilder*) clearJobType {
  resultPbImMsgPrjRecordBaseUser.hasJobType = NO;
  resultPbImMsgPrjRecordBaseUser.jobType = @"";
  return self;
}
@end

@interface PbImMsgPrjRecord ()
@property (strong) NSString* prjId;
@property (strong) PbImMsgPrjRecordBaseUser* sender;
@property (strong) NSMutableArray * receiversArray;
@property SInt32 recordType;
@property (strong) PbImMsgTask* taskInfo;
@property (strong) PbPrjInfo* prjInfo;
@property (strong) NSMutableArray * filesArray;
@end

@implementation PbImMsgPrjRecord

- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) _value_ {
  hasSender_ = !!_value_;
}
@synthesize sender;
@synthesize receiversArray;
@dynamic receivers;
- (BOOL) hasRecordType {
  return !!hasRecordType_;
}
- (void) setHasRecordType:(BOOL) _value_ {
  hasRecordType_ = !!_value_;
}
@synthesize recordType;
- (BOOL) hasTaskInfo {
  return !!hasTaskInfo_;
}
- (void) setHasTaskInfo:(BOOL) _value_ {
  hasTaskInfo_ = !!_value_;
}
@synthesize taskInfo;
- (BOOL) hasPrjInfo {
  return !!hasPrjInfo_;
}
- (void) setHasPrjInfo:(BOOL) _value_ {
  hasPrjInfo_ = !!_value_;
}
@synthesize prjInfo;
@synthesize filesArray;
@dynamic files;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjId = @"";
    self.sender = [PbImMsgPrjRecordBaseUser defaultInstance];
    self.recordType = 0;
    self.taskInfo = [PbImMsgTask defaultInstance];
    self.prjInfo = [PbPrjInfo defaultInstance];
  }
  return self;
}
static PbImMsgPrjRecord* defaultPbImMsgPrjRecordInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgPrjRecord class]) {
    defaultPbImMsgPrjRecordInstance = [[PbImMsgPrjRecord alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgPrjRecordInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgPrjRecordInstance;
}
- (NSArray *)receivers {
  return receiversArray;
}
- (PbImMsgPrjRecordBaseUser*)receiversAtIndex:(NSUInteger)index {
  return [receiversArray objectAtIndex:index];
}
- (NSArray *)files {
  return filesArray;
}
- (PbPrjBaseFile*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjId) {
    [output writeString:1 value:self.prjId];
  }
  if (self.hasSender) {
    [output writeMessage:2 value:self.sender];
  }
  [self.receiversArray enumerateObjectsUsingBlock:^(PbImMsgPrjRecordBaseUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasRecordType) {
    [output writeInt32:4 value:self.recordType];
  }
  if (self.hasTaskInfo) {
    [output writeMessage:5 value:self.taskInfo];
  }
  if (self.hasPrjInfo) {
    [output writeMessage:6 value:self.prjInfo];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:7 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjId) {
    size_ += computeStringSize(1, self.prjId);
  }
  if (self.hasSender) {
    size_ += computeMessageSize(2, self.sender);
  }
  [self.receiversArray enumerateObjectsUsingBlock:^(PbImMsgPrjRecordBaseUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasRecordType) {
    size_ += computeInt32Size(4, self.recordType);
  }
  if (self.hasTaskInfo) {
    size_ += computeMessageSize(5, self.taskInfo);
  }
  if (self.hasPrjInfo) {
    size_ += computeMessageSize(6, self.prjInfo);
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(7, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgPrjRecord*) parseFromData:(NSData*) data {
  return (PbImMsgPrjRecord*)[[[PbImMsgPrjRecord builder] mergeFromData:data] build];
}
+ (PbImMsgPrjRecord*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgPrjRecord*)[[[PbImMsgPrjRecord builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgPrjRecord*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgPrjRecord*)[[[PbImMsgPrjRecord builder] mergeFromInputStream:input] build];
}
+ (PbImMsgPrjRecord*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgPrjRecord*)[[[PbImMsgPrjRecord builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgPrjRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgPrjRecord*)[[[PbImMsgPrjRecord builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgPrjRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgPrjRecord*)[[[PbImMsgPrjRecord builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgPrjRecordBuilder*) builder {
  return [[PbImMsgPrjRecordBuilder alloc] init];
}
+ (PbImMsgPrjRecordBuilder*) builderWithPrototype:(PbImMsgPrjRecord*) prototype {
  return [[PbImMsgPrjRecord builder] mergeFrom:prototype];
}
- (PbImMsgPrjRecordBuilder*) builder {
  return [PbImMsgPrjRecord builder];
}
- (PbImMsgPrjRecordBuilder*) toBuilder {
  return [PbImMsgPrjRecord builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.receiversArray enumerateObjectsUsingBlock:^(PbImMsgPrjRecordBaseUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"receivers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRecordType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recordType", [NSNumber numberWithInteger:self.recordType]];
  }
  if (self.hasTaskInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"taskInfo"];
    [self.taskInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPrjInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjInfo"];
    [self.prjInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"files"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasSender) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.sender storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"sender"];
  }
  for (PbImMsgPrjRecordBaseUser* element in self.receiversArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"receivers"];
  }
  if (self.hasRecordType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.recordType] forKey: @"recordType"];
  }
  if (self.hasTaskInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.taskInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"taskInfo"];
  }
  if (self.hasPrjInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.prjInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"prjInfo"];
  }
  for (PbPrjBaseFile* element in self.filesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"files"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgPrjRecord class]]) {
    return NO;
  }
  PbImMsgPrjRecord *otherMessage = other;
  return
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.receiversArray isEqualToArray:otherMessage.receiversArray] &&
      self.hasRecordType == otherMessage.hasRecordType &&
      (!self.hasRecordType || self.recordType == otherMessage.recordType) &&
      self.hasTaskInfo == otherMessage.hasTaskInfo &&
      (!self.hasTaskInfo || [self.taskInfo isEqual:otherMessage.taskInfo]) &&
      self.hasPrjInfo == otherMessage.hasPrjInfo &&
      (!self.hasPrjInfo || [self.prjInfo isEqual:otherMessage.prjInfo]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.receiversArray enumerateObjectsUsingBlock:^(PbImMsgPrjRecordBaseUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRecordType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.recordType] hash];
  }
  if (self.hasTaskInfo) {
    hashCode = hashCode * 31 + [self.taskInfo hash];
  }
  if (self.hasPrjInfo) {
    hashCode = hashCode * 31 + [self.prjInfo hash];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgPrjRecordBuilder()
@property (strong) PbImMsgPrjRecord* resultPbImMsgPrjRecord;
@end

@implementation PbImMsgPrjRecordBuilder
@synthesize resultPbImMsgPrjRecord;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgPrjRecord = [[PbImMsgPrjRecord alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgPrjRecord;
}
- (PbImMsgPrjRecordBuilder*) clear {
  self.resultPbImMsgPrjRecord = [[PbImMsgPrjRecord alloc] init];
  return self;
}
- (PbImMsgPrjRecordBuilder*) clone {
  return [PbImMsgPrjRecord builderWithPrototype:resultPbImMsgPrjRecord];
}
- (PbImMsgPrjRecord*) defaultInstance {
  return [PbImMsgPrjRecord defaultInstance];
}
- (PbImMsgPrjRecord*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgPrjRecord*) buildPartial {
  PbImMsgPrjRecord* returnMe = resultPbImMsgPrjRecord;
  self.resultPbImMsgPrjRecord = nil;
  return returnMe;
}
- (PbImMsgPrjRecordBuilder*) mergeFrom:(PbImMsgPrjRecord*) other {
  if (other == [PbImMsgPrjRecord defaultInstance]) {
    return self;
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.receiversArray.count > 0) {
    if (resultPbImMsgPrjRecord.receiversArray == nil) {
      resultPbImMsgPrjRecord.receiversArray = [[NSMutableArray alloc] initWithArray:other.receiversArray];
    } else {
      [resultPbImMsgPrjRecord.receiversArray addObjectsFromArray:other.receiversArray];
    }
  }
  if (other.hasRecordType) {
    [self setRecordType:other.recordType];
  }
  if (other.hasTaskInfo) {
    [self mergeTaskInfo:other.taskInfo];
  }
  if (other.hasPrjInfo) {
    [self mergePrjInfo:other.prjInfo];
  }
  if (other.filesArray.count > 0) {
    if (resultPbImMsgPrjRecord.filesArray == nil) {
      resultPbImMsgPrjRecord.filesArray = [[NSMutableArray alloc] initWithArray:other.filesArray];
    } else {
      [resultPbImMsgPrjRecord.filesArray addObjectsFromArray:other.filesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgPrjRecordBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgPrjRecordBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjId:[input readString]];
        break;
      }
      case 18: {
        PbImMsgPrjRecordBaseUserBuilder* subBuilder = [PbImMsgPrjRecordBaseUser builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PbImMsgPrjRecordBaseUserBuilder* subBuilder = [PbImMsgPrjRecordBaseUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReceivers:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setRecordType:[input readInt32]];
        break;
      }
      case 42: {
        PbImMsgTaskBuilder* subBuilder = [PbImMsgTask builder];
        if (self.hasTaskInfo) {
          [subBuilder mergeFrom:self.taskInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTaskInfo:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PbPrjInfoBuilder* subBuilder = [PbPrjInfo builder];
        if (self.hasPrjInfo) {
          [subBuilder mergeFrom:self.prjInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPrjInfo:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PbPrjBaseFileBuilder* subBuilder = [PbPrjBaseFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFiles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjId {
  return resultPbImMsgPrjRecord.hasPrjId;
}
- (NSString*) prjId {
  return resultPbImMsgPrjRecord.prjId;
}
- (PbImMsgPrjRecordBuilder*) setPrjId:(NSString*) value {
  resultPbImMsgPrjRecord.hasPrjId = YES;
  resultPbImMsgPrjRecord.prjId = value;
  return self;
}
- (PbImMsgPrjRecordBuilder*) clearPrjId {
  resultPbImMsgPrjRecord.hasPrjId = NO;
  resultPbImMsgPrjRecord.prjId = @"";
  return self;
}
- (BOOL) hasSender {
  return resultPbImMsgPrjRecord.hasSender;
}
- (PbImMsgPrjRecordBaseUser*) sender {
  return resultPbImMsgPrjRecord.sender;
}
- (PbImMsgPrjRecordBuilder*) setSender:(PbImMsgPrjRecordBaseUser*) value {
  resultPbImMsgPrjRecord.hasSender = YES;
  resultPbImMsgPrjRecord.sender = value;
  return self;
}
- (PbImMsgPrjRecordBuilder*) setSenderBuilder:(PbImMsgPrjRecordBaseUserBuilder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PbImMsgPrjRecordBuilder*) mergeSender:(PbImMsgPrjRecordBaseUser*) value {
  if (resultPbImMsgPrjRecord.hasSender &&
      resultPbImMsgPrjRecord.sender != [PbImMsgPrjRecordBaseUser defaultInstance]) {
    resultPbImMsgPrjRecord.sender =
      [[[PbImMsgPrjRecordBaseUser builderWithPrototype:resultPbImMsgPrjRecord.sender] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgPrjRecord.sender = value;
  }
  resultPbImMsgPrjRecord.hasSender = YES;
  return self;
}
- (PbImMsgPrjRecordBuilder*) clearSender {
  resultPbImMsgPrjRecord.hasSender = NO;
  resultPbImMsgPrjRecord.sender = [PbImMsgPrjRecordBaseUser defaultInstance];
  return self;
}
- (NSMutableArray *)receivers {
  return resultPbImMsgPrjRecord.receiversArray;
}
- (PbImMsgPrjRecordBaseUser*)receiversAtIndex:(NSUInteger)index {
  return [resultPbImMsgPrjRecord receiversAtIndex:index];
}
- (PbImMsgPrjRecordBuilder *)addReceivers:(PbImMsgPrjRecordBaseUser*)value {
  if (resultPbImMsgPrjRecord.receiversArray == nil) {
    resultPbImMsgPrjRecord.receiversArray = [[NSMutableArray alloc]init];
  }
  [resultPbImMsgPrjRecord.receiversArray addObject:value];
  return self;
}
- (PbImMsgPrjRecordBuilder *)setReceiversArray:(NSArray *)array {
  resultPbImMsgPrjRecord.receiversArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbImMsgPrjRecordBuilder *)clearReceivers {
  resultPbImMsgPrjRecord.receiversArray = nil;
  return self;
}
- (BOOL) hasRecordType {
  return resultPbImMsgPrjRecord.hasRecordType;
}
- (SInt32) recordType {
  return resultPbImMsgPrjRecord.recordType;
}
- (PbImMsgPrjRecordBuilder*) setRecordType:(SInt32) value {
  resultPbImMsgPrjRecord.hasRecordType = YES;
  resultPbImMsgPrjRecord.recordType = value;
  return self;
}
- (PbImMsgPrjRecordBuilder*) clearRecordType {
  resultPbImMsgPrjRecord.hasRecordType = NO;
  resultPbImMsgPrjRecord.recordType = 0;
  return self;
}
- (BOOL) hasTaskInfo {
  return resultPbImMsgPrjRecord.hasTaskInfo;
}
- (PbImMsgTask*) taskInfo {
  return resultPbImMsgPrjRecord.taskInfo;
}
- (PbImMsgPrjRecordBuilder*) setTaskInfo:(PbImMsgTask*) value {
  resultPbImMsgPrjRecord.hasTaskInfo = YES;
  resultPbImMsgPrjRecord.taskInfo = value;
  return self;
}
- (PbImMsgPrjRecordBuilder*) setTaskInfoBuilder:(PbImMsgTaskBuilder*) builderForValue {
  return [self setTaskInfo:[builderForValue build]];
}
- (PbImMsgPrjRecordBuilder*) mergeTaskInfo:(PbImMsgTask*) value {
  if (resultPbImMsgPrjRecord.hasTaskInfo &&
      resultPbImMsgPrjRecord.taskInfo != [PbImMsgTask defaultInstance]) {
    resultPbImMsgPrjRecord.taskInfo =
      [[[PbImMsgTask builderWithPrototype:resultPbImMsgPrjRecord.taskInfo] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgPrjRecord.taskInfo = value;
  }
  resultPbImMsgPrjRecord.hasTaskInfo = YES;
  return self;
}
- (PbImMsgPrjRecordBuilder*) clearTaskInfo {
  resultPbImMsgPrjRecord.hasTaskInfo = NO;
  resultPbImMsgPrjRecord.taskInfo = [PbImMsgTask defaultInstance];
  return self;
}
- (BOOL) hasPrjInfo {
  return resultPbImMsgPrjRecord.hasPrjInfo;
}
- (PbPrjInfo*) prjInfo {
  return resultPbImMsgPrjRecord.prjInfo;
}
- (PbImMsgPrjRecordBuilder*) setPrjInfo:(PbPrjInfo*) value {
  resultPbImMsgPrjRecord.hasPrjInfo = YES;
  resultPbImMsgPrjRecord.prjInfo = value;
  return self;
}
- (PbImMsgPrjRecordBuilder*) setPrjInfoBuilder:(PbPrjInfoBuilder*) builderForValue {
  return [self setPrjInfo:[builderForValue build]];
}
- (PbImMsgPrjRecordBuilder*) mergePrjInfo:(PbPrjInfo*) value {
  if (resultPbImMsgPrjRecord.hasPrjInfo &&
      resultPbImMsgPrjRecord.prjInfo != [PbPrjInfo defaultInstance]) {
    resultPbImMsgPrjRecord.prjInfo =
      [[[PbPrjInfo builderWithPrototype:resultPbImMsgPrjRecord.prjInfo] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgPrjRecord.prjInfo = value;
  }
  resultPbImMsgPrjRecord.hasPrjInfo = YES;
  return self;
}
- (PbImMsgPrjRecordBuilder*) clearPrjInfo {
  resultPbImMsgPrjRecord.hasPrjInfo = NO;
  resultPbImMsgPrjRecord.prjInfo = [PbPrjInfo defaultInstance];
  return self;
}
- (NSMutableArray *)files {
  return resultPbImMsgPrjRecord.filesArray;
}
- (PbPrjBaseFile*)filesAtIndex:(NSUInteger)index {
  return [resultPbImMsgPrjRecord filesAtIndex:index];
}
- (PbImMsgPrjRecordBuilder *)addFiles:(PbPrjBaseFile*)value {
  if (resultPbImMsgPrjRecord.filesArray == nil) {
    resultPbImMsgPrjRecord.filesArray = [[NSMutableArray alloc]init];
  }
  [resultPbImMsgPrjRecord.filesArray addObject:value];
  return self;
}
- (PbImMsgPrjRecordBuilder *)setFilesArray:(NSArray *)array {
  resultPbImMsgPrjRecord.filesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbImMsgPrjRecordBuilder *)clearFiles {
  resultPbImMsgPrjRecord.filesArray = nil;
  return self;
}
@end

@interface PbImMsgItem ()
@property (strong) NSString* msgId;
@property UInt32 msgType;
@property (strong) NSString* msgBody;
@property SInt32 senderId;
@property (strong) NSString* senderName;
@property (strong) NSString* senderRemark;
@property (strong) NSString* senderAvatar;
@property (strong) NSString* groupId;
@property UInt32 groupType;
@property (strong) NSString* groupName;
@property (strong) NSString* groupDesc;
@property SInt32 sendTime;
@property SInt32 msgSeqId;
@property (strong) NSMutableArray * attchArray;
@property (strong) PbImMsgTask* msgTask;
@property (strong) PbImMsgWeather* msgWeather;
@property (strong) PbImMsgBook* msgBook;
@property (strong) PbImMsgCard* msgCard;
@property (strong) PbImMsgHotspot* msgHotspot;
@property (strong) PbImMsgPrjRecord* msgPrjRecord;
@end

@implementation PbImMsgItem

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasMsgBody {
  return !!hasMsgBody_;
}
- (void) setHasMsgBody:(BOOL) _value_ {
  hasMsgBody_ = !!_value_;
}
@synthesize msgBody;
- (BOOL) hasSenderId {
  return !!hasSenderId_;
}
- (void) setHasSenderId:(BOOL) _value_ {
  hasSenderId_ = !!_value_;
}
@synthesize senderId;
- (BOOL) hasSenderName {
  return !!hasSenderName_;
}
- (void) setHasSenderName:(BOOL) _value_ {
  hasSenderName_ = !!_value_;
}
@synthesize senderName;
- (BOOL) hasSenderRemark {
  return !!hasSenderRemark_;
}
- (void) setHasSenderRemark:(BOOL) _value_ {
  hasSenderRemark_ = !!_value_;
}
@synthesize senderRemark;
- (BOOL) hasSenderAvatar {
  return !!hasSenderAvatar_;
}
- (void) setHasSenderAvatar:(BOOL) _value_ {
  hasSenderAvatar_ = !!_value_;
}
@synthesize senderAvatar;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasGroupType {
  return !!hasGroupType_;
}
- (void) setHasGroupType:(BOOL) _value_ {
  hasGroupType_ = !!_value_;
}
@synthesize groupType;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) _value_ {
  hasGroupName_ = !!_value_;
}
@synthesize groupName;
- (BOOL) hasGroupDesc {
  return !!hasGroupDesc_;
}
- (void) setHasGroupDesc:(BOOL) _value_ {
  hasGroupDesc_ = !!_value_;
}
@synthesize groupDesc;
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) _value_ {
  hasSendTime_ = !!_value_;
}
@synthesize sendTime;
- (BOOL) hasMsgSeqId {
  return !!hasMsgSeqId_;
}
- (void) setHasMsgSeqId:(BOOL) _value_ {
  hasMsgSeqId_ = !!_value_;
}
@synthesize msgSeqId;
@synthesize attchArray;
@dynamic attch;
- (BOOL) hasMsgTask {
  return !!hasMsgTask_;
}
- (void) setHasMsgTask:(BOOL) _value_ {
  hasMsgTask_ = !!_value_;
}
@synthesize msgTask;
- (BOOL) hasMsgWeather {
  return !!hasMsgWeather_;
}
- (void) setHasMsgWeather:(BOOL) _value_ {
  hasMsgWeather_ = !!_value_;
}
@synthesize msgWeather;
- (BOOL) hasMsgBook {
  return !!hasMsgBook_;
}
- (void) setHasMsgBook:(BOOL) _value_ {
  hasMsgBook_ = !!_value_;
}
@synthesize msgBook;
- (BOOL) hasMsgCard {
  return !!hasMsgCard_;
}
- (void) setHasMsgCard:(BOOL) _value_ {
  hasMsgCard_ = !!_value_;
}
@synthesize msgCard;
- (BOOL) hasMsgHotspot {
  return !!hasMsgHotspot_;
}
- (void) setHasMsgHotspot:(BOOL) _value_ {
  hasMsgHotspot_ = !!_value_;
}
@synthesize msgHotspot;
- (BOOL) hasMsgPrjRecord {
  return !!hasMsgPrjRecord_;
}
- (void) setHasMsgPrjRecord:(BOOL) _value_ {
  hasMsgPrjRecord_ = !!_value_;
}
@synthesize msgPrjRecord;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = @"";
    self.msgType = 0;
    self.msgBody = @"";
    self.senderId = 0;
    self.senderName = @"";
    self.senderRemark = @"";
    self.senderAvatar = @"";
    self.groupId = @"";
    self.groupType = 0;
    self.groupName = @"";
    self.groupDesc = @"";
    self.sendTime = 0;
    self.msgSeqId = 0;
    self.msgTask = [PbImMsgTask defaultInstance];
    self.msgWeather = [PbImMsgWeather defaultInstance];
    self.msgBook = [PbImMsgBook defaultInstance];
    self.msgCard = [PbImMsgCard defaultInstance];
    self.msgHotspot = [PbImMsgHotspot defaultInstance];
    self.msgPrjRecord = [PbImMsgPrjRecord defaultInstance];
  }
  return self;
}
static PbImMsgItem* defaultPbImMsgItemInstance = nil;
+ (void) initialize {
  if (self == [PbImMsgItem class]) {
    defaultPbImMsgItemInstance = [[PbImMsgItem alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgItemInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgItemInstance;
}
- (NSArray *)attch {
  return attchArray;
}
- (PbImMsgAttach*)attchAtIndex:(NSUInteger)index {
  return [attchArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeString:1 value:self.msgId];
  }
  if (self.hasMsgType) {
    [output writeUInt32:2 value:self.msgType];
  }
  if (self.hasMsgBody) {
    [output writeString:3 value:self.msgBody];
  }
  if (self.hasSenderId) {
    [output writeInt32:4 value:self.senderId];
  }
  if (self.hasSenderName) {
    [output writeString:5 value:self.senderName];
  }
  if (self.hasSenderRemark) {
    [output writeString:6 value:self.senderRemark];
  }
  if (self.hasSenderAvatar) {
    [output writeString:7 value:self.senderAvatar];
  }
  if (self.hasGroupId) {
    [output writeString:8 value:self.groupId];
  }
  if (self.hasGroupType) {
    [output writeUInt32:9 value:self.groupType];
  }
  if (self.hasGroupName) {
    [output writeString:10 value:self.groupName];
  }
  if (self.hasGroupDesc) {
    [output writeString:11 value:self.groupDesc];
  }
  if (self.hasSendTime) {
    [output writeInt32:12 value:self.sendTime];
  }
  if (self.hasMsgSeqId) {
    [output writeInt32:13 value:self.msgSeqId];
  }
  [self.attchArray enumerateObjectsUsingBlock:^(PbImMsgAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:14 value:element];
  }];
  if (self.hasMsgTask) {
    [output writeMessage:15 value:self.msgTask];
  }
  if (self.hasMsgWeather) {
    [output writeMessage:16 value:self.msgWeather];
  }
  if (self.hasMsgBook) {
    [output writeMessage:17 value:self.msgBook];
  }
  if (self.hasMsgCard) {
    [output writeMessage:18 value:self.msgCard];
  }
  if (self.hasMsgHotspot) {
    [output writeMessage:19 value:self.msgHotspot];
  }
  if (self.hasMsgPrjRecord) {
    [output writeMessage:20 value:self.msgPrjRecord];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeStringSize(1, self.msgId);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(2, self.msgType);
  }
  if (self.hasMsgBody) {
    size_ += computeStringSize(3, self.msgBody);
  }
  if (self.hasSenderId) {
    size_ += computeInt32Size(4, self.senderId);
  }
  if (self.hasSenderName) {
    size_ += computeStringSize(5, self.senderName);
  }
  if (self.hasSenderRemark) {
    size_ += computeStringSize(6, self.senderRemark);
  }
  if (self.hasSenderAvatar) {
    size_ += computeStringSize(7, self.senderAvatar);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(8, self.groupId);
  }
  if (self.hasGroupType) {
    size_ += computeUInt32Size(9, self.groupType);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(10, self.groupName);
  }
  if (self.hasGroupDesc) {
    size_ += computeStringSize(11, self.groupDesc);
  }
  if (self.hasSendTime) {
    size_ += computeInt32Size(12, self.sendTime);
  }
  if (self.hasMsgSeqId) {
    size_ += computeInt32Size(13, self.msgSeqId);
  }
  [self.attchArray enumerateObjectsUsingBlock:^(PbImMsgAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(14, element);
  }];
  if (self.hasMsgTask) {
    size_ += computeMessageSize(15, self.msgTask);
  }
  if (self.hasMsgWeather) {
    size_ += computeMessageSize(16, self.msgWeather);
  }
  if (self.hasMsgBook) {
    size_ += computeMessageSize(17, self.msgBook);
  }
  if (self.hasMsgCard) {
    size_ += computeMessageSize(18, self.msgCard);
  }
  if (self.hasMsgHotspot) {
    size_ += computeMessageSize(19, self.msgHotspot);
  }
  if (self.hasMsgPrjRecord) {
    size_ += computeMessageSize(20, self.msgPrjRecord);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsgItem*) parseFromData:(NSData*) data {
  return (PbImMsgItem*)[[[PbImMsgItem builder] mergeFromData:data] build];
}
+ (PbImMsgItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgItem*)[[[PbImMsgItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgItem*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsgItem*)[[[PbImMsgItem builder] mergeFromInputStream:input] build];
}
+ (PbImMsgItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgItem*)[[[PbImMsgItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsgItem*)[[[PbImMsgItem builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsgItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsgItem*)[[[PbImMsgItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgItemBuilder*) builder {
  return [[PbImMsgItemBuilder alloc] init];
}
+ (PbImMsgItemBuilder*) builderWithPrototype:(PbImMsgItem*) prototype {
  return [[PbImMsgItem builder] mergeFrom:prototype];
}
- (PbImMsgItemBuilder*) builder {
  return [PbImMsgItem builder];
}
- (PbImMsgItemBuilder*) toBuilder {
  return [PbImMsgItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", self.msgId];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasMsgBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgBody", self.msgBody];
  }
  if (self.hasSenderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderId", [NSNumber numberWithInteger:self.senderId]];
  }
  if (self.hasSenderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderName", self.senderName];
  }
  if (self.hasSenderRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderRemark", self.senderRemark];
  }
  if (self.hasSenderAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderAvatar", self.senderAvatar];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupType", [NSNumber numberWithInteger:self.groupType]];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupDesc", self.groupDesc];
  }
  if (self.hasSendTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendTime", [NSNumber numberWithInteger:self.sendTime]];
  }
  if (self.hasMsgSeqId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgSeqId", [NSNumber numberWithInteger:self.msgSeqId]];
  }
  [self.attchArray enumerateObjectsUsingBlock:^(PbImMsgAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attch"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasMsgTask) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgTask"];
    [self.msgTask writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgWeather) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgWeather"];
    [self.msgWeather writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgBook) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgBook"];
    [self.msgBook writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgCard) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgCard"];
    [self.msgCard writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgHotspot) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgHotspot"];
    [self.msgHotspot writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgPrjRecord) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgPrjRecord"];
    [self.msgPrjRecord writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: self.msgId forKey: @"msgId"];
  }
  if (self.hasMsgType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.msgType] forKey: @"msgType"];
  }
  if (self.hasMsgBody) {
    [dictionary setObject: self.msgBody forKey: @"msgBody"];
  }
  if (self.hasSenderId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.senderId] forKey: @"senderId"];
  }
  if (self.hasSenderName) {
    [dictionary setObject: self.senderName forKey: @"senderName"];
  }
  if (self.hasSenderRemark) {
    [dictionary setObject: self.senderRemark forKey: @"senderRemark"];
  }
  if (self.hasSenderAvatar) {
    [dictionary setObject: self.senderAvatar forKey: @"senderAvatar"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasGroupType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.groupType] forKey: @"groupType"];
  }
  if (self.hasGroupName) {
    [dictionary setObject: self.groupName forKey: @"groupName"];
  }
  if (self.hasGroupDesc) {
    [dictionary setObject: self.groupDesc forKey: @"groupDesc"];
  }
  if (self.hasSendTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sendTime] forKey: @"sendTime"];
  }
  if (self.hasMsgSeqId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.msgSeqId] forKey: @"msgSeqId"];
  }
  for (PbImMsgAttach* element in self.attchArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attch"];
  }
  if (self.hasMsgTask) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgTask storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgTask"];
  }
  if (self.hasMsgWeather) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgWeather storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgWeather"];
  }
  if (self.hasMsgBook) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgBook storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgBook"];
  }
  if (self.hasMsgCard) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgCard storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgCard"];
  }
  if (self.hasMsgHotspot) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgHotspot storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgHotspot"];
  }
  if (self.hasMsgPrjRecord) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgPrjRecord storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgPrjRecord"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsgItem class]]) {
    return NO;
  }
  PbImMsgItem *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || [self.msgId isEqual:otherMessage.msgId]) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasMsgBody == otherMessage.hasMsgBody &&
      (!self.hasMsgBody || [self.msgBody isEqual:otherMessage.msgBody]) &&
      self.hasSenderId == otherMessage.hasSenderId &&
      (!self.hasSenderId || self.senderId == otherMessage.senderId) &&
      self.hasSenderName == otherMessage.hasSenderName &&
      (!self.hasSenderName || [self.senderName isEqual:otherMessage.senderName]) &&
      self.hasSenderRemark == otherMessage.hasSenderRemark &&
      (!self.hasSenderRemark || [self.senderRemark isEqual:otherMessage.senderRemark]) &&
      self.hasSenderAvatar == otherMessage.hasSenderAvatar &&
      (!self.hasSenderAvatar || [self.senderAvatar isEqual:otherMessage.senderAvatar]) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupType == otherMessage.hasGroupType &&
      (!self.hasGroupType || self.groupType == otherMessage.groupType) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupDesc == otherMessage.hasGroupDesc &&
      (!self.hasGroupDesc || [self.groupDesc isEqual:otherMessage.groupDesc]) &&
      self.hasSendTime == otherMessage.hasSendTime &&
      (!self.hasSendTime || self.sendTime == otherMessage.sendTime) &&
      self.hasMsgSeqId == otherMessage.hasMsgSeqId &&
      (!self.hasMsgSeqId || self.msgSeqId == otherMessage.msgSeqId) &&
      [self.attchArray isEqualToArray:otherMessage.attchArray] &&
      self.hasMsgTask == otherMessage.hasMsgTask &&
      (!self.hasMsgTask || [self.msgTask isEqual:otherMessage.msgTask]) &&
      self.hasMsgWeather == otherMessage.hasMsgWeather &&
      (!self.hasMsgWeather || [self.msgWeather isEqual:otherMessage.msgWeather]) &&
      self.hasMsgBook == otherMessage.hasMsgBook &&
      (!self.hasMsgBook || [self.msgBook isEqual:otherMessage.msgBook]) &&
      self.hasMsgCard == otherMessage.hasMsgCard &&
      (!self.hasMsgCard || [self.msgCard isEqual:otherMessage.msgCard]) &&
      self.hasMsgHotspot == otherMessage.hasMsgHotspot &&
      (!self.hasMsgHotspot || [self.msgHotspot isEqual:otherMessage.msgHotspot]) &&
      self.hasMsgPrjRecord == otherMessage.hasMsgPrjRecord &&
      (!self.hasMsgPrjRecord || [self.msgPrjRecord isEqual:otherMessage.msgPrjRecord]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [self.msgId hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasMsgBody) {
    hashCode = hashCode * 31 + [self.msgBody hash];
  }
  if (self.hasSenderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.senderId] hash];
  }
  if (self.hasSenderName) {
    hashCode = hashCode * 31 + [self.senderName hash];
  }
  if (self.hasSenderRemark) {
    hashCode = hashCode * 31 + [self.senderRemark hash];
  }
  if (self.hasSenderAvatar) {
    hashCode = hashCode * 31 + [self.senderAvatar hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupType] hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupDesc) {
    hashCode = hashCode * 31 + [self.groupDesc hash];
  }
  if (self.hasSendTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sendTime] hash];
  }
  if (self.hasMsgSeqId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgSeqId] hash];
  }
  [self.attchArray enumerateObjectsUsingBlock:^(PbImMsgAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasMsgTask) {
    hashCode = hashCode * 31 + [self.msgTask hash];
  }
  if (self.hasMsgWeather) {
    hashCode = hashCode * 31 + [self.msgWeather hash];
  }
  if (self.hasMsgBook) {
    hashCode = hashCode * 31 + [self.msgBook hash];
  }
  if (self.hasMsgCard) {
    hashCode = hashCode * 31 + [self.msgCard hash];
  }
  if (self.hasMsgHotspot) {
    hashCode = hashCode * 31 + [self.msgHotspot hash];
  }
  if (self.hasMsgPrjRecord) {
    hashCode = hashCode * 31 + [self.msgPrjRecord hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgItemBuilder()
@property (strong) PbImMsgItem* resultPbImMsgItem;
@end

@implementation PbImMsgItemBuilder
@synthesize resultPbImMsgItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsgItem = [[PbImMsgItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsgItem;
}
- (PbImMsgItemBuilder*) clear {
  self.resultPbImMsgItem = [[PbImMsgItem alloc] init];
  return self;
}
- (PbImMsgItemBuilder*) clone {
  return [PbImMsgItem builderWithPrototype:resultPbImMsgItem];
}
- (PbImMsgItem*) defaultInstance {
  return [PbImMsgItem defaultInstance];
}
- (PbImMsgItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsgItem*) buildPartial {
  PbImMsgItem* returnMe = resultPbImMsgItem;
  self.resultPbImMsgItem = nil;
  return returnMe;
}
- (PbImMsgItemBuilder*) mergeFrom:(PbImMsgItem*) other {
  if (other == [PbImMsgItem defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasMsgBody) {
    [self setMsgBody:other.msgBody];
  }
  if (other.hasSenderId) {
    [self setSenderId:other.senderId];
  }
  if (other.hasSenderName) {
    [self setSenderName:other.senderName];
  }
  if (other.hasSenderRemark) {
    [self setSenderRemark:other.senderRemark];
  }
  if (other.hasSenderAvatar) {
    [self setSenderAvatar:other.senderAvatar];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupType) {
    [self setGroupType:other.groupType];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupDesc) {
    [self setGroupDesc:other.groupDesc];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  if (other.hasMsgSeqId) {
    [self setMsgSeqId:other.msgSeqId];
  }
  if (other.attchArray.count > 0) {
    if (resultPbImMsgItem.attchArray == nil) {
      resultPbImMsgItem.attchArray = [[NSMutableArray alloc] initWithArray:other.attchArray];
    } else {
      [resultPbImMsgItem.attchArray addObjectsFromArray:other.attchArray];
    }
  }
  if (other.hasMsgTask) {
    [self mergeMsgTask:other.msgTask];
  }
  if (other.hasMsgWeather) {
    [self mergeMsgWeather:other.msgWeather];
  }
  if (other.hasMsgBook) {
    [self mergeMsgBook:other.msgBook];
  }
  if (other.hasMsgCard) {
    [self mergeMsgCard:other.msgCard];
  }
  if (other.hasMsgHotspot) {
    [self mergeMsgHotspot:other.msgHotspot];
  }
  if (other.hasMsgPrjRecord) {
    [self mergeMsgPrjRecord:other.msgPrjRecord];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMsgId:[input readString]];
        break;
      }
      case 16: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 26: {
        [self setMsgBody:[input readString]];
        break;
      }
      case 32: {
        [self setSenderId:[input readInt32]];
        break;
      }
      case 42: {
        [self setSenderName:[input readString]];
        break;
      }
      case 50: {
        [self setSenderRemark:[input readString]];
        break;
      }
      case 58: {
        [self setSenderAvatar:[input readString]];
        break;
      }
      case 66: {
        [self setGroupId:[input readString]];
        break;
      }
      case 72: {
        [self setGroupType:[input readUInt32]];
        break;
      }
      case 82: {
        [self setGroupName:[input readString]];
        break;
      }
      case 90: {
        [self setGroupDesc:[input readString]];
        break;
      }
      case 96: {
        [self setSendTime:[input readInt32]];
        break;
      }
      case 104: {
        [self setMsgSeqId:[input readInt32]];
        break;
      }
      case 114: {
        PbImMsgAttachBuilder* subBuilder = [PbImMsgAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttch:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        PbImMsgTaskBuilder* subBuilder = [PbImMsgTask builder];
        if (self.hasMsgTask) {
          [subBuilder mergeFrom:self.msgTask];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgTask:[subBuilder buildPartial]];
        break;
      }
      case 130: {
        PbImMsgWeatherBuilder* subBuilder = [PbImMsgWeather builder];
        if (self.hasMsgWeather) {
          [subBuilder mergeFrom:self.msgWeather];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgWeather:[subBuilder buildPartial]];
        break;
      }
      case 138: {
        PbImMsgBookBuilder* subBuilder = [PbImMsgBook builder];
        if (self.hasMsgBook) {
          [subBuilder mergeFrom:self.msgBook];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgBook:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        PbImMsgCardBuilder* subBuilder = [PbImMsgCard builder];
        if (self.hasMsgCard) {
          [subBuilder mergeFrom:self.msgCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgCard:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        PbImMsgHotspotBuilder* subBuilder = [PbImMsgHotspot builder];
        if (self.hasMsgHotspot) {
          [subBuilder mergeFrom:self.msgHotspot];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgHotspot:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        PbImMsgPrjRecordBuilder* subBuilder = [PbImMsgPrjRecord builder];
        if (self.hasMsgPrjRecord) {
          [subBuilder mergeFrom:self.msgPrjRecord];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgPrjRecord:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultPbImMsgItem.hasMsgId;
}
- (NSString*) msgId {
  return resultPbImMsgItem.msgId;
}
- (PbImMsgItemBuilder*) setMsgId:(NSString*) value {
  resultPbImMsgItem.hasMsgId = YES;
  resultPbImMsgItem.msgId = value;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgId {
  resultPbImMsgItem.hasMsgId = NO;
  resultPbImMsgItem.msgId = @"";
  return self;
}
- (BOOL) hasMsgType {
  return resultPbImMsgItem.hasMsgType;
}
- (UInt32) msgType {
  return resultPbImMsgItem.msgType;
}
- (PbImMsgItemBuilder*) setMsgType:(UInt32) value {
  resultPbImMsgItem.hasMsgType = YES;
  resultPbImMsgItem.msgType = value;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgType {
  resultPbImMsgItem.hasMsgType = NO;
  resultPbImMsgItem.msgType = 0;
  return self;
}
- (BOOL) hasMsgBody {
  return resultPbImMsgItem.hasMsgBody;
}
- (NSString*) msgBody {
  return resultPbImMsgItem.msgBody;
}
- (PbImMsgItemBuilder*) setMsgBody:(NSString*) value {
  resultPbImMsgItem.hasMsgBody = YES;
  resultPbImMsgItem.msgBody = value;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgBody {
  resultPbImMsgItem.hasMsgBody = NO;
  resultPbImMsgItem.msgBody = @"";
  return self;
}
- (BOOL) hasSenderId {
  return resultPbImMsgItem.hasSenderId;
}
- (SInt32) senderId {
  return resultPbImMsgItem.senderId;
}
- (PbImMsgItemBuilder*) setSenderId:(SInt32) value {
  resultPbImMsgItem.hasSenderId = YES;
  resultPbImMsgItem.senderId = value;
  return self;
}
- (PbImMsgItemBuilder*) clearSenderId {
  resultPbImMsgItem.hasSenderId = NO;
  resultPbImMsgItem.senderId = 0;
  return self;
}
- (BOOL) hasSenderName {
  return resultPbImMsgItem.hasSenderName;
}
- (NSString*) senderName {
  return resultPbImMsgItem.senderName;
}
- (PbImMsgItemBuilder*) setSenderName:(NSString*) value {
  resultPbImMsgItem.hasSenderName = YES;
  resultPbImMsgItem.senderName = value;
  return self;
}
- (PbImMsgItemBuilder*) clearSenderName {
  resultPbImMsgItem.hasSenderName = NO;
  resultPbImMsgItem.senderName = @"";
  return self;
}
- (BOOL) hasSenderRemark {
  return resultPbImMsgItem.hasSenderRemark;
}
- (NSString*) senderRemark {
  return resultPbImMsgItem.senderRemark;
}
- (PbImMsgItemBuilder*) setSenderRemark:(NSString*) value {
  resultPbImMsgItem.hasSenderRemark = YES;
  resultPbImMsgItem.senderRemark = value;
  return self;
}
- (PbImMsgItemBuilder*) clearSenderRemark {
  resultPbImMsgItem.hasSenderRemark = NO;
  resultPbImMsgItem.senderRemark = @"";
  return self;
}
- (BOOL) hasSenderAvatar {
  return resultPbImMsgItem.hasSenderAvatar;
}
- (NSString*) senderAvatar {
  return resultPbImMsgItem.senderAvatar;
}
- (PbImMsgItemBuilder*) setSenderAvatar:(NSString*) value {
  resultPbImMsgItem.hasSenderAvatar = YES;
  resultPbImMsgItem.senderAvatar = value;
  return self;
}
- (PbImMsgItemBuilder*) clearSenderAvatar {
  resultPbImMsgItem.hasSenderAvatar = NO;
  resultPbImMsgItem.senderAvatar = @"";
  return self;
}
- (BOOL) hasGroupId {
  return resultPbImMsgItem.hasGroupId;
}
- (NSString*) groupId {
  return resultPbImMsgItem.groupId;
}
- (PbImMsgItemBuilder*) setGroupId:(NSString*) value {
  resultPbImMsgItem.hasGroupId = YES;
  resultPbImMsgItem.groupId = value;
  return self;
}
- (PbImMsgItemBuilder*) clearGroupId {
  resultPbImMsgItem.hasGroupId = NO;
  resultPbImMsgItem.groupId = @"";
  return self;
}
- (BOOL) hasGroupType {
  return resultPbImMsgItem.hasGroupType;
}
- (UInt32) groupType {
  return resultPbImMsgItem.groupType;
}
- (PbImMsgItemBuilder*) setGroupType:(UInt32) value {
  resultPbImMsgItem.hasGroupType = YES;
  resultPbImMsgItem.groupType = value;
  return self;
}
- (PbImMsgItemBuilder*) clearGroupType {
  resultPbImMsgItem.hasGroupType = NO;
  resultPbImMsgItem.groupType = 0;
  return self;
}
- (BOOL) hasGroupName {
  return resultPbImMsgItem.hasGroupName;
}
- (NSString*) groupName {
  return resultPbImMsgItem.groupName;
}
- (PbImMsgItemBuilder*) setGroupName:(NSString*) value {
  resultPbImMsgItem.hasGroupName = YES;
  resultPbImMsgItem.groupName = value;
  return self;
}
- (PbImMsgItemBuilder*) clearGroupName {
  resultPbImMsgItem.hasGroupName = NO;
  resultPbImMsgItem.groupName = @"";
  return self;
}
- (BOOL) hasGroupDesc {
  return resultPbImMsgItem.hasGroupDesc;
}
- (NSString*) groupDesc {
  return resultPbImMsgItem.groupDesc;
}
- (PbImMsgItemBuilder*) setGroupDesc:(NSString*) value {
  resultPbImMsgItem.hasGroupDesc = YES;
  resultPbImMsgItem.groupDesc = value;
  return self;
}
- (PbImMsgItemBuilder*) clearGroupDesc {
  resultPbImMsgItem.hasGroupDesc = NO;
  resultPbImMsgItem.groupDesc = @"";
  return self;
}
- (BOOL) hasSendTime {
  return resultPbImMsgItem.hasSendTime;
}
- (SInt32) sendTime {
  return resultPbImMsgItem.sendTime;
}
- (PbImMsgItemBuilder*) setSendTime:(SInt32) value {
  resultPbImMsgItem.hasSendTime = YES;
  resultPbImMsgItem.sendTime = value;
  return self;
}
- (PbImMsgItemBuilder*) clearSendTime {
  resultPbImMsgItem.hasSendTime = NO;
  resultPbImMsgItem.sendTime = 0;
  return self;
}
- (BOOL) hasMsgSeqId {
  return resultPbImMsgItem.hasMsgSeqId;
}
- (SInt32) msgSeqId {
  return resultPbImMsgItem.msgSeqId;
}
- (PbImMsgItemBuilder*) setMsgSeqId:(SInt32) value {
  resultPbImMsgItem.hasMsgSeqId = YES;
  resultPbImMsgItem.msgSeqId = value;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgSeqId {
  resultPbImMsgItem.hasMsgSeqId = NO;
  resultPbImMsgItem.msgSeqId = 0;
  return self;
}
- (NSMutableArray *)attch {
  return resultPbImMsgItem.attchArray;
}
- (PbImMsgAttach*)attchAtIndex:(NSUInteger)index {
  return [resultPbImMsgItem attchAtIndex:index];
}
- (PbImMsgItemBuilder *)addAttch:(PbImMsgAttach*)value {
  if (resultPbImMsgItem.attchArray == nil) {
    resultPbImMsgItem.attchArray = [[NSMutableArray alloc]init];
  }
  [resultPbImMsgItem.attchArray addObject:value];
  return self;
}
- (PbImMsgItemBuilder *)setAttchArray:(NSArray *)array {
  resultPbImMsgItem.attchArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbImMsgItemBuilder *)clearAttch {
  resultPbImMsgItem.attchArray = nil;
  return self;
}
- (BOOL) hasMsgTask {
  return resultPbImMsgItem.hasMsgTask;
}
- (PbImMsgTask*) msgTask {
  return resultPbImMsgItem.msgTask;
}
- (PbImMsgItemBuilder*) setMsgTask:(PbImMsgTask*) value {
  resultPbImMsgItem.hasMsgTask = YES;
  resultPbImMsgItem.msgTask = value;
  return self;
}
- (PbImMsgItemBuilder*) setMsgTaskBuilder:(PbImMsgTaskBuilder*) builderForValue {
  return [self setMsgTask:[builderForValue build]];
}
- (PbImMsgItemBuilder*) mergeMsgTask:(PbImMsgTask*) value {
  if (resultPbImMsgItem.hasMsgTask &&
      resultPbImMsgItem.msgTask != [PbImMsgTask defaultInstance]) {
    resultPbImMsgItem.msgTask =
      [[[PbImMsgTask builderWithPrototype:resultPbImMsgItem.msgTask] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgItem.msgTask = value;
  }
  resultPbImMsgItem.hasMsgTask = YES;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgTask {
  resultPbImMsgItem.hasMsgTask = NO;
  resultPbImMsgItem.msgTask = [PbImMsgTask defaultInstance];
  return self;
}
- (BOOL) hasMsgWeather {
  return resultPbImMsgItem.hasMsgWeather;
}
- (PbImMsgWeather*) msgWeather {
  return resultPbImMsgItem.msgWeather;
}
- (PbImMsgItemBuilder*) setMsgWeather:(PbImMsgWeather*) value {
  resultPbImMsgItem.hasMsgWeather = YES;
  resultPbImMsgItem.msgWeather = value;
  return self;
}
- (PbImMsgItemBuilder*) setMsgWeatherBuilder:(PbImMsgWeatherBuilder*) builderForValue {
  return [self setMsgWeather:[builderForValue build]];
}
- (PbImMsgItemBuilder*) mergeMsgWeather:(PbImMsgWeather*) value {
  if (resultPbImMsgItem.hasMsgWeather &&
      resultPbImMsgItem.msgWeather != [PbImMsgWeather defaultInstance]) {
    resultPbImMsgItem.msgWeather =
      [[[PbImMsgWeather builderWithPrototype:resultPbImMsgItem.msgWeather] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgItem.msgWeather = value;
  }
  resultPbImMsgItem.hasMsgWeather = YES;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgWeather {
  resultPbImMsgItem.hasMsgWeather = NO;
  resultPbImMsgItem.msgWeather = [PbImMsgWeather defaultInstance];
  return self;
}
- (BOOL) hasMsgBook {
  return resultPbImMsgItem.hasMsgBook;
}
- (PbImMsgBook*) msgBook {
  return resultPbImMsgItem.msgBook;
}
- (PbImMsgItemBuilder*) setMsgBook:(PbImMsgBook*) value {
  resultPbImMsgItem.hasMsgBook = YES;
  resultPbImMsgItem.msgBook = value;
  return self;
}
- (PbImMsgItemBuilder*) setMsgBookBuilder:(PbImMsgBookBuilder*) builderForValue {
  return [self setMsgBook:[builderForValue build]];
}
- (PbImMsgItemBuilder*) mergeMsgBook:(PbImMsgBook*) value {
  if (resultPbImMsgItem.hasMsgBook &&
      resultPbImMsgItem.msgBook != [PbImMsgBook defaultInstance]) {
    resultPbImMsgItem.msgBook =
      [[[PbImMsgBook builderWithPrototype:resultPbImMsgItem.msgBook] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgItem.msgBook = value;
  }
  resultPbImMsgItem.hasMsgBook = YES;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgBook {
  resultPbImMsgItem.hasMsgBook = NO;
  resultPbImMsgItem.msgBook = [PbImMsgBook defaultInstance];
  return self;
}
- (BOOL) hasMsgCard {
  return resultPbImMsgItem.hasMsgCard;
}
- (PbImMsgCard*) msgCard {
  return resultPbImMsgItem.msgCard;
}
- (PbImMsgItemBuilder*) setMsgCard:(PbImMsgCard*) value {
  resultPbImMsgItem.hasMsgCard = YES;
  resultPbImMsgItem.msgCard = value;
  return self;
}
- (PbImMsgItemBuilder*) setMsgCardBuilder:(PbImMsgCardBuilder*) builderForValue {
  return [self setMsgCard:[builderForValue build]];
}
- (PbImMsgItemBuilder*) mergeMsgCard:(PbImMsgCard*) value {
  if (resultPbImMsgItem.hasMsgCard &&
      resultPbImMsgItem.msgCard != [PbImMsgCard defaultInstance]) {
    resultPbImMsgItem.msgCard =
      [[[PbImMsgCard builderWithPrototype:resultPbImMsgItem.msgCard] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgItem.msgCard = value;
  }
  resultPbImMsgItem.hasMsgCard = YES;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgCard {
  resultPbImMsgItem.hasMsgCard = NO;
  resultPbImMsgItem.msgCard = [PbImMsgCard defaultInstance];
  return self;
}
- (BOOL) hasMsgHotspot {
  return resultPbImMsgItem.hasMsgHotspot;
}
- (PbImMsgHotspot*) msgHotspot {
  return resultPbImMsgItem.msgHotspot;
}
- (PbImMsgItemBuilder*) setMsgHotspot:(PbImMsgHotspot*) value {
  resultPbImMsgItem.hasMsgHotspot = YES;
  resultPbImMsgItem.msgHotspot = value;
  return self;
}
- (PbImMsgItemBuilder*) setMsgHotspotBuilder:(PbImMsgHotspotBuilder*) builderForValue {
  return [self setMsgHotspot:[builderForValue build]];
}
- (PbImMsgItemBuilder*) mergeMsgHotspot:(PbImMsgHotspot*) value {
  if (resultPbImMsgItem.hasMsgHotspot &&
      resultPbImMsgItem.msgHotspot != [PbImMsgHotspot defaultInstance]) {
    resultPbImMsgItem.msgHotspot =
      [[[PbImMsgHotspot builderWithPrototype:resultPbImMsgItem.msgHotspot] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgItem.msgHotspot = value;
  }
  resultPbImMsgItem.hasMsgHotspot = YES;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgHotspot {
  resultPbImMsgItem.hasMsgHotspot = NO;
  resultPbImMsgItem.msgHotspot = [PbImMsgHotspot defaultInstance];
  return self;
}
- (BOOL) hasMsgPrjRecord {
  return resultPbImMsgItem.hasMsgPrjRecord;
}
- (PbImMsgPrjRecord*) msgPrjRecord {
  return resultPbImMsgItem.msgPrjRecord;
}
- (PbImMsgItemBuilder*) setMsgPrjRecord:(PbImMsgPrjRecord*) value {
  resultPbImMsgItem.hasMsgPrjRecord = YES;
  resultPbImMsgItem.msgPrjRecord = value;
  return self;
}
- (PbImMsgItemBuilder*) setMsgPrjRecordBuilder:(PbImMsgPrjRecordBuilder*) builderForValue {
  return [self setMsgPrjRecord:[builderForValue build]];
}
- (PbImMsgItemBuilder*) mergeMsgPrjRecord:(PbImMsgPrjRecord*) value {
  if (resultPbImMsgItem.hasMsgPrjRecord &&
      resultPbImMsgItem.msgPrjRecord != [PbImMsgPrjRecord defaultInstance]) {
    resultPbImMsgItem.msgPrjRecord =
      [[[PbImMsgPrjRecord builderWithPrototype:resultPbImMsgItem.msgPrjRecord] mergeFrom:value] buildPartial];
  } else {
    resultPbImMsgItem.msgPrjRecord = value;
  }
  resultPbImMsgItem.hasMsgPrjRecord = YES;
  return self;
}
- (PbImMsgItemBuilder*) clearMsgPrjRecord {
  resultPbImMsgItem.hasMsgPrjRecord = NO;
  resultPbImMsgItem.msgPrjRecord = [PbImMsgPrjRecord defaultInstance];
  return self;
}
@end

@interface PbImMsg ()
@property SInt32 updateType;
@property (strong) NSString* groupId;
@property (strong) NSMutableArray * msgArray;
@end

@implementation PbImMsg

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
@synthesize msgArray;
@dynamic msg;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.groupId = @"";
  }
  return self;
}
static PbImMsg* defaultPbImMsgInstance = nil;
+ (void) initialize {
  if (self == [PbImMsg class]) {
    defaultPbImMsgInstance = [[PbImMsg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbImMsgInstance;
}
- (instancetype) defaultInstance {
  return defaultPbImMsgInstance;
}
- (NSArray *)msg {
  return msgArray;
}
- (PbImMsgItem*)msgAtIndex:(NSUInteger)index {
  return [msgArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  [self.msgArray enumerateObjectsUsingBlock:^(PbImMsgItem *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  [self.msgArray enumerateObjectsUsingBlock:^(PbImMsgItem *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbImMsg*) parseFromData:(NSData*) data {
  return (PbImMsg*)[[[PbImMsg builder] mergeFromData:data] build];
}
+ (PbImMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsg*)[[[PbImMsg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbImMsg*) parseFromInputStream:(NSInputStream*) input {
  return (PbImMsg*)[[[PbImMsg builder] mergeFromInputStream:input] build];
}
+ (PbImMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsg*)[[[PbImMsg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbImMsg*)[[[PbImMsg builder] mergeFromCodedInputStream:input] build];
}
+ (PbImMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbImMsg*)[[[PbImMsg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbImMsgBuilder*) builder {
  return [[PbImMsgBuilder alloc] init];
}
+ (PbImMsgBuilder*) builderWithPrototype:(PbImMsg*) prototype {
  return [[PbImMsg builder] mergeFrom:prototype];
}
- (PbImMsgBuilder*) builder {
  return [PbImMsg builder];
}
- (PbImMsgBuilder*) toBuilder {
  return [PbImMsg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.msgArray enumerateObjectsUsingBlock:^(PbImMsgItem *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msg"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  for (PbImMsgItem* element in self.msgArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msg"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbImMsg class]]) {
    return NO;
  }
  PbImMsg *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      [self.msgArray isEqualToArray:otherMessage.msgArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  [self.msgArray enumerateObjectsUsingBlock:^(PbImMsgItem *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbImMsgBuilder()
@property (strong) PbImMsg* resultPbImMsg;
@end

@implementation PbImMsgBuilder
@synthesize resultPbImMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbImMsg = [[PbImMsg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbImMsg;
}
- (PbImMsgBuilder*) clear {
  self.resultPbImMsg = [[PbImMsg alloc] init];
  return self;
}
- (PbImMsgBuilder*) clone {
  return [PbImMsg builderWithPrototype:resultPbImMsg];
}
- (PbImMsg*) defaultInstance {
  return [PbImMsg defaultInstance];
}
- (PbImMsg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbImMsg*) buildPartial {
  PbImMsg* returnMe = resultPbImMsg;
  self.resultPbImMsg = nil;
  return returnMe;
}
- (PbImMsgBuilder*) mergeFrom:(PbImMsg*) other {
  if (other == [PbImMsg defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.msgArray.count > 0) {
    if (resultPbImMsg.msgArray == nil) {
      resultPbImMsg.msgArray = [[NSMutableArray alloc] initWithArray:other.msgArray];
    } else {
      [resultPbImMsg.msgArray addObjectsFromArray:other.msgArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbImMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbImMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
      case 26: {
        PbImMsgItemBuilder* subBuilder = [PbImMsgItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsg:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbImMsg.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbImMsg.updateType;
}
- (PbImMsgBuilder*) setUpdateType:(SInt32) value {
  resultPbImMsg.hasUpdateType = YES;
  resultPbImMsg.updateType = value;
  return self;
}
- (PbImMsgBuilder*) clearUpdateType {
  resultPbImMsg.hasUpdateType = NO;
  resultPbImMsg.updateType = 0;
  return self;
}
- (BOOL) hasGroupId {
  return resultPbImMsg.hasGroupId;
}
- (NSString*) groupId {
  return resultPbImMsg.groupId;
}
- (PbImMsgBuilder*) setGroupId:(NSString*) value {
  resultPbImMsg.hasGroupId = YES;
  resultPbImMsg.groupId = value;
  return self;
}
- (PbImMsgBuilder*) clearGroupId {
  resultPbImMsg.hasGroupId = NO;
  resultPbImMsg.groupId = @"";
  return self;
}
- (NSMutableArray *)msg {
  return resultPbImMsg.msgArray;
}
- (PbImMsgItem*)msgAtIndex:(NSUInteger)index {
  return [resultPbImMsg msgAtIndex:index];
}
- (PbImMsgBuilder *)addMsg:(PbImMsgItem*)value {
  if (resultPbImMsg.msgArray == nil) {
    resultPbImMsg.msgArray = [[NSMutableArray alloc]init];
  }
  [resultPbImMsg.msgArray addObject:value];
  return self;
}
- (PbImMsgBuilder *)setMsgArray:(NSArray *)array {
  resultPbImMsg.msgArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbImMsgBuilder *)clearMsg {
  resultPbImMsg.msgArray = nil;
  return self;
}
@end

@interface PbPrjUser ()
@property SInt32 uid;
@property (strong) NSString* name;
@property (strong) NSString* phone;
@property (strong) NSString* jobType;
@property SInt32 addTime;
@property SInt32 taskOperateStatus;
@property (strong) NSString* joinContent;
@property (strong) NSString* namePinyin;
@property (strong) NSString* depId;
@end

@implementation PbPrjUser

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasAddTime {
  return !!hasAddTime_;
}
- (void) setHasAddTime:(BOOL) _value_ {
  hasAddTime_ = !!_value_;
}
@synthesize addTime;
- (BOOL) hasTaskOperateStatus {
  return !!hasTaskOperateStatus_;
}
- (void) setHasTaskOperateStatus:(BOOL) _value_ {
  hasTaskOperateStatus_ = !!_value_;
}
@synthesize taskOperateStatus;
- (BOOL) hasJoinContent {
  return !!hasJoinContent_;
}
- (void) setHasJoinContent:(BOOL) _value_ {
  hasJoinContent_ = !!_value_;
}
@synthesize joinContent;
- (BOOL) hasNamePinyin {
  return !!hasNamePinyin_;
}
- (void) setHasNamePinyin:(BOOL) _value_ {
  hasNamePinyin_ = !!_value_;
}
@synthesize namePinyin;
- (BOOL) hasDepId {
  return !!hasDepId_;
}
- (void) setHasDepId:(BOOL) _value_ {
  hasDepId_ = !!_value_;
}
@synthesize depId;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0;
    self.name = @"";
    self.phone = @"";
    self.jobType = @"";
    self.addTime = 0;
    self.taskOperateStatus = 0;
    self.joinContent = @"";
    self.namePinyin = @"";
    self.depId = @"";
  }
  return self;
}
static PbPrjUser* defaultPbPrjUserInstance = nil;
+ (void) initialize {
  if (self == [PbPrjUser class]) {
    defaultPbPrjUserInstance = [[PbPrjUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeInt32:1 value:self.uid];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasPhone) {
    [output writeString:3 value:self.phone];
  }
  if (self.hasJobType) {
    [output writeString:4 value:self.jobType];
  }
  if (self.hasAddTime) {
    [output writeInt32:5 value:self.addTime];
  }
  if (self.hasTaskOperateStatus) {
    [output writeInt32:6 value:self.taskOperateStatus];
  }
  if (self.hasJoinContent) {
    [output writeString:7 value:self.joinContent];
  }
  if (self.hasNamePinyin) {
    [output writeString:8 value:self.namePinyin];
  }
  if (self.hasDepId) {
    [output writeString:9 value:self.depId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeInt32Size(1, self.uid);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(3, self.phone);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(4, self.jobType);
  }
  if (self.hasAddTime) {
    size_ += computeInt32Size(5, self.addTime);
  }
  if (self.hasTaskOperateStatus) {
    size_ += computeInt32Size(6, self.taskOperateStatus);
  }
  if (self.hasJoinContent) {
    size_ += computeStringSize(7, self.joinContent);
  }
  if (self.hasNamePinyin) {
    size_ += computeStringSize(8, self.namePinyin);
  }
  if (self.hasDepId) {
    size_ += computeStringSize(9, self.depId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjUser*) parseFromData:(NSData*) data {
  return (PbPrjUser*)[[[PbPrjUser builder] mergeFromData:data] build];
}
+ (PbPrjUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjUser*)[[[PbPrjUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjUser*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjUser*)[[[PbPrjUser builder] mergeFromInputStream:input] build];
}
+ (PbPrjUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjUser*)[[[PbPrjUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjUser*)[[[PbPrjUser builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjUser*)[[[PbPrjUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjUserBuilder*) builder {
  return [[PbPrjUserBuilder alloc] init];
}
+ (PbPrjUserBuilder*) builderWithPrototype:(PbPrjUser*) prototype {
  return [[PbPrjUser builder] mergeFrom:prototype];
}
- (PbPrjUserBuilder*) builder {
  return [PbPrjUser builder];
}
- (PbPrjUserBuilder*) toBuilder {
  return [PbPrjUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithInteger:self.uid]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasAddTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"addTime", [NSNumber numberWithInteger:self.addTime]];
  }
  if (self.hasTaskOperateStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskOperateStatus", [NSNumber numberWithInteger:self.taskOperateStatus]];
  }
  if (self.hasJoinContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"joinContent", self.joinContent];
  }
  if (self.hasNamePinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyin", self.namePinyin];
  }
  if (self.hasDepId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"depId", self.depId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uid] forKey: @"uid"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasPhone) {
    [dictionary setObject: self.phone forKey: @"phone"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasAddTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.addTime] forKey: @"addTime"];
  }
  if (self.hasTaskOperateStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskOperateStatus] forKey: @"taskOperateStatus"];
  }
  if (self.hasJoinContent) {
    [dictionary setObject: self.joinContent forKey: @"joinContent"];
  }
  if (self.hasNamePinyin) {
    [dictionary setObject: self.namePinyin forKey: @"namePinyin"];
  }
  if (self.hasDepId) {
    [dictionary setObject: self.depId forKey: @"depId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjUser class]]) {
    return NO;
  }
  PbPrjUser *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasAddTime == otherMessage.hasAddTime &&
      (!self.hasAddTime || self.addTime == otherMessage.addTime) &&
      self.hasTaskOperateStatus == otherMessage.hasTaskOperateStatus &&
      (!self.hasTaskOperateStatus || self.taskOperateStatus == otherMessage.taskOperateStatus) &&
      self.hasJoinContent == otherMessage.hasJoinContent &&
      (!self.hasJoinContent || [self.joinContent isEqual:otherMessage.joinContent]) &&
      self.hasNamePinyin == otherMessage.hasNamePinyin &&
      (!self.hasNamePinyin || [self.namePinyin isEqual:otherMessage.namePinyin]) &&
      self.hasDepId == otherMessage.hasDepId &&
      (!self.hasDepId || [self.depId isEqual:otherMessage.depId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uid] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasAddTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.addTime] hash];
  }
  if (self.hasTaskOperateStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskOperateStatus] hash];
  }
  if (self.hasJoinContent) {
    hashCode = hashCode * 31 + [self.joinContent hash];
  }
  if (self.hasNamePinyin) {
    hashCode = hashCode * 31 + [self.namePinyin hash];
  }
  if (self.hasDepId) {
    hashCode = hashCode * 31 + [self.depId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjUserBuilder()
@property (strong) PbPrjUser* resultPbPrjUser;
@end

@implementation PbPrjUserBuilder
@synthesize resultPbPrjUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjUser = [[PbPrjUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjUser;
}
- (PbPrjUserBuilder*) clear {
  self.resultPbPrjUser = [[PbPrjUser alloc] init];
  return self;
}
- (PbPrjUserBuilder*) clone {
  return [PbPrjUser builderWithPrototype:resultPbPrjUser];
}
- (PbPrjUser*) defaultInstance {
  return [PbPrjUser defaultInstance];
}
- (PbPrjUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjUser*) buildPartial {
  PbPrjUser* returnMe = resultPbPrjUser;
  self.resultPbPrjUser = nil;
  return returnMe;
}
- (PbPrjUserBuilder*) mergeFrom:(PbPrjUser*) other {
  if (other == [PbPrjUser defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasAddTime) {
    [self setAddTime:other.addTime];
  }
  if (other.hasTaskOperateStatus) {
    [self setTaskOperateStatus:other.taskOperateStatus];
  }
  if (other.hasJoinContent) {
    [self setJoinContent:other.joinContent];
  }
  if (other.hasNamePinyin) {
    [self setNamePinyin:other.namePinyin];
  }
  if (other.hasDepId) {
    [self setDepId:other.depId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setPhone:[input readString]];
        break;
      }
      case 34: {
        [self setJobType:[input readString]];
        break;
      }
      case 40: {
        [self setAddTime:[input readInt32]];
        break;
      }
      case 48: {
        [self setTaskOperateStatus:[input readInt32]];
        break;
      }
      case 58: {
        [self setJoinContent:[input readString]];
        break;
      }
      case 66: {
        [self setNamePinyin:[input readString]];
        break;
      }
      case 74: {
        [self setDepId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultPbPrjUser.hasUid;
}
- (SInt32) uid {
  return resultPbPrjUser.uid;
}
- (PbPrjUserBuilder*) setUid:(SInt32) value {
  resultPbPrjUser.hasUid = YES;
  resultPbPrjUser.uid = value;
  return self;
}
- (PbPrjUserBuilder*) clearUid {
  resultPbPrjUser.hasUid = NO;
  resultPbPrjUser.uid = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbPrjUser.hasName;
}
- (NSString*) name {
  return resultPbPrjUser.name;
}
- (PbPrjUserBuilder*) setName:(NSString*) value {
  resultPbPrjUser.hasName = YES;
  resultPbPrjUser.name = value;
  return self;
}
- (PbPrjUserBuilder*) clearName {
  resultPbPrjUser.hasName = NO;
  resultPbPrjUser.name = @"";
  return self;
}
- (BOOL) hasPhone {
  return resultPbPrjUser.hasPhone;
}
- (NSString*) phone {
  return resultPbPrjUser.phone;
}
- (PbPrjUserBuilder*) setPhone:(NSString*) value {
  resultPbPrjUser.hasPhone = YES;
  resultPbPrjUser.phone = value;
  return self;
}
- (PbPrjUserBuilder*) clearPhone {
  resultPbPrjUser.hasPhone = NO;
  resultPbPrjUser.phone = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbPrjUser.hasJobType;
}
- (NSString*) jobType {
  return resultPbPrjUser.jobType;
}
- (PbPrjUserBuilder*) setJobType:(NSString*) value {
  resultPbPrjUser.hasJobType = YES;
  resultPbPrjUser.jobType = value;
  return self;
}
- (PbPrjUserBuilder*) clearJobType {
  resultPbPrjUser.hasJobType = NO;
  resultPbPrjUser.jobType = @"";
  return self;
}
- (BOOL) hasAddTime {
  return resultPbPrjUser.hasAddTime;
}
- (SInt32) addTime {
  return resultPbPrjUser.addTime;
}
- (PbPrjUserBuilder*) setAddTime:(SInt32) value {
  resultPbPrjUser.hasAddTime = YES;
  resultPbPrjUser.addTime = value;
  return self;
}
- (PbPrjUserBuilder*) clearAddTime {
  resultPbPrjUser.hasAddTime = NO;
  resultPbPrjUser.addTime = 0;
  return self;
}
- (BOOL) hasTaskOperateStatus {
  return resultPbPrjUser.hasTaskOperateStatus;
}
- (SInt32) taskOperateStatus {
  return resultPbPrjUser.taskOperateStatus;
}
- (PbPrjUserBuilder*) setTaskOperateStatus:(SInt32) value {
  resultPbPrjUser.hasTaskOperateStatus = YES;
  resultPbPrjUser.taskOperateStatus = value;
  return self;
}
- (PbPrjUserBuilder*) clearTaskOperateStatus {
  resultPbPrjUser.hasTaskOperateStatus = NO;
  resultPbPrjUser.taskOperateStatus = 0;
  return self;
}
- (BOOL) hasJoinContent {
  return resultPbPrjUser.hasJoinContent;
}
- (NSString*) joinContent {
  return resultPbPrjUser.joinContent;
}
- (PbPrjUserBuilder*) setJoinContent:(NSString*) value {
  resultPbPrjUser.hasJoinContent = YES;
  resultPbPrjUser.joinContent = value;
  return self;
}
- (PbPrjUserBuilder*) clearJoinContent {
  resultPbPrjUser.hasJoinContent = NO;
  resultPbPrjUser.joinContent = @"";
  return self;
}
- (BOOL) hasNamePinyin {
  return resultPbPrjUser.hasNamePinyin;
}
- (NSString*) namePinyin {
  return resultPbPrjUser.namePinyin;
}
- (PbPrjUserBuilder*) setNamePinyin:(NSString*) value {
  resultPbPrjUser.hasNamePinyin = YES;
  resultPbPrjUser.namePinyin = value;
  return self;
}
- (PbPrjUserBuilder*) clearNamePinyin {
  resultPbPrjUser.hasNamePinyin = NO;
  resultPbPrjUser.namePinyin = @"";
  return self;
}
- (BOOL) hasDepId {
  return resultPbPrjUser.hasDepId;
}
- (NSString*) depId {
  return resultPbPrjUser.depId;
}
- (PbPrjUserBuilder*) setDepId:(NSString*) value {
  resultPbPrjUser.hasDepId = YES;
  resultPbPrjUser.depId = value;
  return self;
}
- (PbPrjUserBuilder*) clearDepId {
  resultPbPrjUser.hasDepId = NO;
  resultPbPrjUser.depId = @"";
  return self;
}
@end

@interface PbPrjFeed ()
@property SInt32 time;
@property (strong) NSString* msg;
@end

@implementation PbPrjFeed

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) _value_ {
  hasMsg_ = !!_value_;
}
@synthesize msg;
- (instancetype) init {
  if ((self = [super init])) {
    self.time = 0;
    self.msg = @"";
  }
  return self;
}
static PbPrjFeed* defaultPbPrjFeedInstance = nil;
+ (void) initialize {
  if (self == [PbPrjFeed class]) {
    defaultPbPrjFeedInstance = [[PbPrjFeed alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjFeedInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjFeedInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeInt32:1 value:self.time];
  }
  if (self.hasMsg) {
    [output writeString:2 value:self.msg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTime) {
    size_ += computeInt32Size(1, self.time);
  }
  if (self.hasMsg) {
    size_ += computeStringSize(2, self.msg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjFeed*) parseFromData:(NSData*) data {
  return (PbPrjFeed*)[[[PbPrjFeed builder] mergeFromData:data] build];
}
+ (PbPrjFeed*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjFeed*)[[[PbPrjFeed builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjFeed*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjFeed*)[[[PbPrjFeed builder] mergeFromInputStream:input] build];
}
+ (PbPrjFeed*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjFeed*)[[[PbPrjFeed builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjFeed*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjFeed*)[[[PbPrjFeed builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjFeed*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjFeed*)[[[PbPrjFeed builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjFeedBuilder*) builder {
  return [[PbPrjFeedBuilder alloc] init];
}
+ (PbPrjFeedBuilder*) builderWithPrototype:(PbPrjFeed*) prototype {
  return [[PbPrjFeed builder] mergeFrom:prototype];
}
- (PbPrjFeedBuilder*) builder {
  return [PbPrjFeed builder];
}
- (PbPrjFeedBuilder*) toBuilder {
  return [PbPrjFeed builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msg", self.msg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasMsg) {
    [dictionary setObject: self.msg forKey: @"msg"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjFeed class]]) {
    return NO;
  }
  PbPrjFeed *otherMessage = other;
  return
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjFeedBuilder()
@property (strong) PbPrjFeed* resultPbPrjFeed;
@end

@implementation PbPrjFeedBuilder
@synthesize resultPbPrjFeed;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjFeed = [[PbPrjFeed alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjFeed;
}
- (PbPrjFeedBuilder*) clear {
  self.resultPbPrjFeed = [[PbPrjFeed alloc] init];
  return self;
}
- (PbPrjFeedBuilder*) clone {
  return [PbPrjFeed builderWithPrototype:resultPbPrjFeed];
}
- (PbPrjFeed*) defaultInstance {
  return [PbPrjFeed defaultInstance];
}
- (PbPrjFeed*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjFeed*) buildPartial {
  PbPrjFeed* returnMe = resultPbPrjFeed;
  self.resultPbPrjFeed = nil;
  return returnMe;
}
- (PbPrjFeedBuilder*) mergeFrom:(PbPrjFeed*) other {
  if (other == [PbPrjFeed defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjFeedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjFeedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTime:[input readInt32]];
        break;
      }
      case 18: {
        [self setMsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return resultPbPrjFeed.hasTime;
}
- (SInt32) time {
  return resultPbPrjFeed.time;
}
- (PbPrjFeedBuilder*) setTime:(SInt32) value {
  resultPbPrjFeed.hasTime = YES;
  resultPbPrjFeed.time = value;
  return self;
}
- (PbPrjFeedBuilder*) clearTime {
  resultPbPrjFeed.hasTime = NO;
  resultPbPrjFeed.time = 0;
  return self;
}
- (BOOL) hasMsg {
  return resultPbPrjFeed.hasMsg;
}
- (NSString*) msg {
  return resultPbPrjFeed.msg;
}
- (PbPrjFeedBuilder*) setMsg:(NSString*) value {
  resultPbPrjFeed.hasMsg = YES;
  resultPbPrjFeed.msg = value;
  return self;
}
- (PbPrjFeedBuilder*) clearMsg {
  resultPbPrjFeed.hasMsg = NO;
  resultPbPrjFeed.msg = @"";
  return self;
}
@end

@interface PbPrjMilestore ()
@property SInt32 time;
@property (strong) NSString* event;
@end

@implementation PbPrjMilestore

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasEvent {
  return !!hasEvent_;
}
- (void) setHasEvent:(BOOL) _value_ {
  hasEvent_ = !!_value_;
}
@synthesize event;
- (instancetype) init {
  if ((self = [super init])) {
    self.time = 0;
    self.event = @"";
  }
  return self;
}
static PbPrjMilestore* defaultPbPrjMilestoreInstance = nil;
+ (void) initialize {
  if (self == [PbPrjMilestore class]) {
    defaultPbPrjMilestoreInstance = [[PbPrjMilestore alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjMilestoreInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjMilestoreInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeInt32:1 value:self.time];
  }
  if (self.hasEvent) {
    [output writeString:2 value:self.event];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTime) {
    size_ += computeInt32Size(1, self.time);
  }
  if (self.hasEvent) {
    size_ += computeStringSize(2, self.event);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjMilestore*) parseFromData:(NSData*) data {
  return (PbPrjMilestore*)[[[PbPrjMilestore builder] mergeFromData:data] build];
}
+ (PbPrjMilestore*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjMilestore*)[[[PbPrjMilestore builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjMilestore*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjMilestore*)[[[PbPrjMilestore builder] mergeFromInputStream:input] build];
}
+ (PbPrjMilestore*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjMilestore*)[[[PbPrjMilestore builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjMilestore*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjMilestore*)[[[PbPrjMilestore builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjMilestore*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjMilestore*)[[[PbPrjMilestore builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjMilestoreBuilder*) builder {
  return [[PbPrjMilestoreBuilder alloc] init];
}
+ (PbPrjMilestoreBuilder*) builderWithPrototype:(PbPrjMilestore*) prototype {
  return [[PbPrjMilestore builder] mergeFrom:prototype];
}
- (PbPrjMilestoreBuilder*) builder {
  return [PbPrjMilestore builder];
}
- (PbPrjMilestoreBuilder*) toBuilder {
  return [PbPrjMilestore builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasEvent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"event", self.event];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasEvent) {
    [dictionary setObject: self.event forKey: @"event"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjMilestore class]]) {
    return NO;
  }
  PbPrjMilestore *otherMessage = other;
  return
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasEvent == otherMessage.hasEvent &&
      (!self.hasEvent || [self.event isEqual:otherMessage.event]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasEvent) {
    hashCode = hashCode * 31 + [self.event hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjMilestoreBuilder()
@property (strong) PbPrjMilestore* resultPbPrjMilestore;
@end

@implementation PbPrjMilestoreBuilder
@synthesize resultPbPrjMilestore;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjMilestore = [[PbPrjMilestore alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjMilestore;
}
- (PbPrjMilestoreBuilder*) clear {
  self.resultPbPrjMilestore = [[PbPrjMilestore alloc] init];
  return self;
}
- (PbPrjMilestoreBuilder*) clone {
  return [PbPrjMilestore builderWithPrototype:resultPbPrjMilestore];
}
- (PbPrjMilestore*) defaultInstance {
  return [PbPrjMilestore defaultInstance];
}
- (PbPrjMilestore*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjMilestore*) buildPartial {
  PbPrjMilestore* returnMe = resultPbPrjMilestore;
  self.resultPbPrjMilestore = nil;
  return returnMe;
}
- (PbPrjMilestoreBuilder*) mergeFrom:(PbPrjMilestore*) other {
  if (other == [PbPrjMilestore defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasEvent) {
    [self setEvent:other.event];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjMilestoreBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjMilestoreBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTime:[input readInt32]];
        break;
      }
      case 18: {
        [self setEvent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return resultPbPrjMilestore.hasTime;
}
- (SInt32) time {
  return resultPbPrjMilestore.time;
}
- (PbPrjMilestoreBuilder*) setTime:(SInt32) value {
  resultPbPrjMilestore.hasTime = YES;
  resultPbPrjMilestore.time = value;
  return self;
}
- (PbPrjMilestoreBuilder*) clearTime {
  resultPbPrjMilestore.hasTime = NO;
  resultPbPrjMilestore.time = 0;
  return self;
}
- (BOOL) hasEvent {
  return resultPbPrjMilestore.hasEvent;
}
- (NSString*) event {
  return resultPbPrjMilestore.event;
}
- (PbPrjMilestoreBuilder*) setEvent:(NSString*) value {
  resultPbPrjMilestore.hasEvent = YES;
  resultPbPrjMilestore.event = value;
  return self;
}
- (PbPrjMilestoreBuilder*) clearEvent {
  resultPbPrjMilestore.hasEvent = NO;
  resultPbPrjMilestore.event = @"";
  return self;
}
@end

@interface PbPrjTask ()
@property (strong) NSString* taskId;
@property (strong) NSString* prjId;
@property SInt32 taskType;
@property (strong) NSString* taskDesc;
@property SInt32 taskDescType;
@property SInt32 playtime;
@property (strong) PbPrjUser* sponsor;
@property (strong) NSMutableArray * membersArray;
@property SInt32 taskStatus;
@property (strong) NSString* position;
@property (strong) NSMutableArray * attachListArray;
@property SInt32 taskBegin;
@property SInt32 taskEnd;
@end

@implementation PbPrjTask

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) _value_ {
  hasTaskId_ = !!_value_;
}
@synthesize taskId;
- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasTaskType {
  return !!hasTaskType_;
}
- (void) setHasTaskType:(BOOL) _value_ {
  hasTaskType_ = !!_value_;
}
@synthesize taskType;
- (BOOL) hasTaskDesc {
  return !!hasTaskDesc_;
}
- (void) setHasTaskDesc:(BOOL) _value_ {
  hasTaskDesc_ = !!_value_;
}
@synthesize taskDesc;
- (BOOL) hasTaskDescType {
  return !!hasTaskDescType_;
}
- (void) setHasTaskDescType:(BOOL) _value_ {
  hasTaskDescType_ = !!_value_;
}
@synthesize taskDescType;
- (BOOL) hasPlaytime {
  return !!hasPlaytime_;
}
- (void) setHasPlaytime:(BOOL) _value_ {
  hasPlaytime_ = !!_value_;
}
@synthesize playtime;
- (BOOL) hasSponsor {
  return !!hasSponsor_;
}
- (void) setHasSponsor:(BOOL) _value_ {
  hasSponsor_ = !!_value_;
}
@synthesize sponsor;
@synthesize membersArray;
@dynamic members;
- (BOOL) hasTaskStatus {
  return !!hasTaskStatus_;
}
- (void) setHasTaskStatus:(BOOL) _value_ {
  hasTaskStatus_ = !!_value_;
}
@synthesize taskStatus;
- (BOOL) hasPosition {
  return !!hasPosition_;
}
- (void) setHasPosition:(BOOL) _value_ {
  hasPosition_ = !!_value_;
}
@synthesize position;
@synthesize attachListArray;
@dynamic attachList;
- (BOOL) hasTaskBegin {
  return !!hasTaskBegin_;
}
- (void) setHasTaskBegin:(BOOL) _value_ {
  hasTaskBegin_ = !!_value_;
}
@synthesize taskBegin;
- (BOOL) hasTaskEnd {
  return !!hasTaskEnd_;
}
- (void) setHasTaskEnd:(BOOL) _value_ {
  hasTaskEnd_ = !!_value_;
}
@synthesize taskEnd;
- (instancetype) init {
  if ((self = [super init])) {
    self.taskId = @"";
    self.prjId = @"";
    self.taskType = 0;
    self.taskDesc = @"";
    self.taskDescType = 0;
    self.playtime = 0;
    self.sponsor = [PbPrjUser defaultInstance];
    self.taskStatus = 0;
    self.position = @"";
    self.taskBegin = 0;
    self.taskEnd = 0;
  }
  return self;
}
static PbPrjTask* defaultPbPrjTaskInstance = nil;
+ (void) initialize {
  if (self == [PbPrjTask class]) {
    defaultPbPrjTaskInstance = [[PbPrjTask alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjTaskInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjTaskInstance;
}
- (NSArray *)members {
  return membersArray;
}
- (PbPrjUser*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (NSArray *)attachList {
  return attachListArray;
}
- (PbPrjBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [attachListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeString:1 value:self.taskId];
  }
  if (self.hasPrjId) {
    [output writeString:2 value:self.prjId];
  }
  if (self.hasTaskType) {
    [output writeInt32:3 value:self.taskType];
  }
  if (self.hasTaskDesc) {
    [output writeString:4 value:self.taskDesc];
  }
  if (self.hasTaskDescType) {
    [output writeInt32:5 value:self.taskDescType];
  }
  if (self.hasPlaytime) {
    [output writeInt32:6 value:self.playtime];
  }
  if (self.hasSponsor) {
    [output writeMessage:7 value:self.sponsor];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  if (self.hasTaskStatus) {
    [output writeInt32:9 value:self.taskStatus];
  }
  if (self.hasPosition) {
    [output writeString:10 value:self.position];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:11 value:element];
  }];
  if (self.hasTaskBegin) {
    [output writeInt32:12 value:self.taskBegin];
  }
  if (self.hasTaskEnd) {
    [output writeInt32:13 value:self.taskEnd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTaskId) {
    size_ += computeStringSize(1, self.taskId);
  }
  if (self.hasPrjId) {
    size_ += computeStringSize(2, self.prjId);
  }
  if (self.hasTaskType) {
    size_ += computeInt32Size(3, self.taskType);
  }
  if (self.hasTaskDesc) {
    size_ += computeStringSize(4, self.taskDesc);
  }
  if (self.hasTaskDescType) {
    size_ += computeInt32Size(5, self.taskDescType);
  }
  if (self.hasPlaytime) {
    size_ += computeInt32Size(6, self.playtime);
  }
  if (self.hasSponsor) {
    size_ += computeMessageSize(7, self.sponsor);
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  if (self.hasTaskStatus) {
    size_ += computeInt32Size(9, self.taskStatus);
  }
  if (self.hasPosition) {
    size_ += computeStringSize(10, self.position);
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(11, element);
  }];
  if (self.hasTaskBegin) {
    size_ += computeInt32Size(12, self.taskBegin);
  }
  if (self.hasTaskEnd) {
    size_ += computeInt32Size(13, self.taskEnd);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjTask*) parseFromData:(NSData*) data {
  return (PbPrjTask*)[[[PbPrjTask builder] mergeFromData:data] build];
}
+ (PbPrjTask*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTask*)[[[PbPrjTask builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTask*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjTask*)[[[PbPrjTask builder] mergeFromInputStream:input] build];
}
+ (PbPrjTask*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTask*)[[[PbPrjTask builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTask*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjTask*)[[[PbPrjTask builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjTask*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTask*)[[[PbPrjTask builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskBuilder*) builder {
  return [[PbPrjTaskBuilder alloc] init];
}
+ (PbPrjTaskBuilder*) builderWithPrototype:(PbPrjTask*) prototype {
  return [[PbPrjTask builder] mergeFrom:prototype];
}
- (PbPrjTaskBuilder*) builder {
  return [PbPrjTask builder];
}
- (PbPrjTaskBuilder*) toBuilder {
  return [PbPrjTask builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", self.taskId];
  }
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasTaskType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskType", [NSNumber numberWithInteger:self.taskType]];
  }
  if (self.hasTaskDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDesc", self.taskDesc];
  }
  if (self.hasTaskDescType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDescType", [NSNumber numberWithInteger:self.taskDescType]];
  }
  if (self.hasPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playtime", [NSNumber numberWithInteger:self.playtime]];
  }
  if (self.hasSponsor) {
    [output appendFormat:@"%@%@ {\n", indent, @"sponsor"];
    [self.sponsor writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTaskStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskStatus", [NSNumber numberWithInteger:self.taskStatus]];
  }
  if (self.hasPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"position", self.position];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attachList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTaskBegin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskBegin", [NSNumber numberWithInteger:self.taskBegin]];
  }
  if (self.hasTaskEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskEnd", [NSNumber numberWithInteger:self.taskEnd]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTaskId) {
    [dictionary setObject: self.taskId forKey: @"taskId"];
  }
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasTaskType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskType] forKey: @"taskType"];
  }
  if (self.hasTaskDesc) {
    [dictionary setObject: self.taskDesc forKey: @"taskDesc"];
  }
  if (self.hasTaskDescType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskDescType] forKey: @"taskDescType"];
  }
  if (self.hasPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.playtime] forKey: @"playtime"];
  }
  if (self.hasSponsor) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.sponsor storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"sponsor"];
  }
  for (PbPrjUser* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  if (self.hasTaskStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskStatus] forKey: @"taskStatus"];
  }
  if (self.hasPosition) {
    [dictionary setObject: self.position forKey: @"position"];
  }
  for (PbPrjBaseFile* element in self.attachListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attachList"];
  }
  if (self.hasTaskBegin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskBegin] forKey: @"taskBegin"];
  }
  if (self.hasTaskEnd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskEnd] forKey: @"taskEnd"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjTask class]]) {
    return NO;
  }
  PbPrjTask *otherMessage = other;
  return
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || [self.taskId isEqual:otherMessage.taskId]) &&
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasTaskType == otherMessage.hasTaskType &&
      (!self.hasTaskType || self.taskType == otherMessage.taskType) &&
      self.hasTaskDesc == otherMessage.hasTaskDesc &&
      (!self.hasTaskDesc || [self.taskDesc isEqual:otherMessage.taskDesc]) &&
      self.hasTaskDescType == otherMessage.hasTaskDescType &&
      (!self.hasTaskDescType || self.taskDescType == otherMessage.taskDescType) &&
      self.hasPlaytime == otherMessage.hasPlaytime &&
      (!self.hasPlaytime || self.playtime == otherMessage.playtime) &&
      self.hasSponsor == otherMessage.hasSponsor &&
      (!self.hasSponsor || [self.sponsor isEqual:otherMessage.sponsor]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasTaskStatus == otherMessage.hasTaskStatus &&
      (!self.hasTaskStatus || self.taskStatus == otherMessage.taskStatus) &&
      self.hasPosition == otherMessage.hasPosition &&
      (!self.hasPosition || [self.position isEqual:otherMessage.position]) &&
      [self.attachListArray isEqualToArray:otherMessage.attachListArray] &&
      self.hasTaskBegin == otherMessage.hasTaskBegin &&
      (!self.hasTaskBegin || self.taskBegin == otherMessage.taskBegin) &&
      self.hasTaskEnd == otherMessage.hasTaskEnd &&
      (!self.hasTaskEnd || self.taskEnd == otherMessage.taskEnd) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [self.taskId hash];
  }
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasTaskType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskType] hash];
  }
  if (self.hasTaskDesc) {
    hashCode = hashCode * 31 + [self.taskDesc hash];
  }
  if (self.hasTaskDescType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskDescType] hash];
  }
  if (self.hasPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.playtime] hash];
  }
  if (self.hasSponsor) {
    hashCode = hashCode * 31 + [self.sponsor hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTaskStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskStatus] hash];
  }
  if (self.hasPosition) {
    hashCode = hashCode * 31 + [self.position hash];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTaskBegin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskBegin] hash];
  }
  if (self.hasTaskEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskEnd] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjTaskBuilder()
@property (strong) PbPrjTask* resultPbPrjTask;
@end

@implementation PbPrjTaskBuilder
@synthesize resultPbPrjTask;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjTask = [[PbPrjTask alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjTask;
}
- (PbPrjTaskBuilder*) clear {
  self.resultPbPrjTask = [[PbPrjTask alloc] init];
  return self;
}
- (PbPrjTaskBuilder*) clone {
  return [PbPrjTask builderWithPrototype:resultPbPrjTask];
}
- (PbPrjTask*) defaultInstance {
  return [PbPrjTask defaultInstance];
}
- (PbPrjTask*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjTask*) buildPartial {
  PbPrjTask* returnMe = resultPbPrjTask;
  self.resultPbPrjTask = nil;
  return returnMe;
}
- (PbPrjTaskBuilder*) mergeFrom:(PbPrjTask*) other {
  if (other == [PbPrjTask defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasTaskType) {
    [self setTaskType:other.taskType];
  }
  if (other.hasTaskDesc) {
    [self setTaskDesc:other.taskDesc];
  }
  if (other.hasTaskDescType) {
    [self setTaskDescType:other.taskDescType];
  }
  if (other.hasPlaytime) {
    [self setPlaytime:other.playtime];
  }
  if (other.hasSponsor) {
    [self mergeSponsor:other.sponsor];
  }
  if (other.membersArray.count > 0) {
    if (resultPbPrjTask.membersArray == nil) {
      resultPbPrjTask.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultPbPrjTask.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  if (other.hasTaskStatus) {
    [self setTaskStatus:other.taskStatus];
  }
  if (other.hasPosition) {
    [self setPosition:other.position];
  }
  if (other.attachListArray.count > 0) {
    if (resultPbPrjTask.attachListArray == nil) {
      resultPbPrjTask.attachListArray = [[NSMutableArray alloc] initWithArray:other.attachListArray];
    } else {
      [resultPbPrjTask.attachListArray addObjectsFromArray:other.attachListArray];
    }
  }
  if (other.hasTaskBegin) {
    [self setTaskBegin:other.taskBegin];
  }
  if (other.hasTaskEnd) {
    [self setTaskEnd:other.taskEnd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTaskId:[input readString]];
        break;
      }
      case 18: {
        [self setPrjId:[input readString]];
        break;
      }
      case 24: {
        [self setTaskType:[input readInt32]];
        break;
      }
      case 34: {
        [self setTaskDesc:[input readString]];
        break;
      }
      case 40: {
        [self setTaskDescType:[input readInt32]];
        break;
      }
      case 48: {
        [self setPlaytime:[input readInt32]];
        break;
      }
      case 58: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        if (self.hasSponsor) {
          [subBuilder mergeFrom:self.sponsor];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSponsor:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 72: {
        [self setTaskStatus:[input readInt32]];
        break;
      }
      case 82: {
        [self setPosition:[input readString]];
        break;
      }
      case 90: {
        PbPrjBaseFileBuilder* subBuilder = [PbPrjBaseFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttachList:[subBuilder buildPartial]];
        break;
      }
      case 96: {
        [self setTaskBegin:[input readInt32]];
        break;
      }
      case 104: {
        [self setTaskEnd:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return resultPbPrjTask.hasTaskId;
}
- (NSString*) taskId {
  return resultPbPrjTask.taskId;
}
- (PbPrjTaskBuilder*) setTaskId:(NSString*) value {
  resultPbPrjTask.hasTaskId = YES;
  resultPbPrjTask.taskId = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskId {
  resultPbPrjTask.hasTaskId = NO;
  resultPbPrjTask.taskId = @"";
  return self;
}
- (BOOL) hasPrjId {
  return resultPbPrjTask.hasPrjId;
}
- (NSString*) prjId {
  return resultPbPrjTask.prjId;
}
- (PbPrjTaskBuilder*) setPrjId:(NSString*) value {
  resultPbPrjTask.hasPrjId = YES;
  resultPbPrjTask.prjId = value;
  return self;
}
- (PbPrjTaskBuilder*) clearPrjId {
  resultPbPrjTask.hasPrjId = NO;
  resultPbPrjTask.prjId = @"";
  return self;
}
- (BOOL) hasTaskType {
  return resultPbPrjTask.hasTaskType;
}
- (SInt32) taskType {
  return resultPbPrjTask.taskType;
}
- (PbPrjTaskBuilder*) setTaskType:(SInt32) value {
  resultPbPrjTask.hasTaskType = YES;
  resultPbPrjTask.taskType = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskType {
  resultPbPrjTask.hasTaskType = NO;
  resultPbPrjTask.taskType = 0;
  return self;
}
- (BOOL) hasTaskDesc {
  return resultPbPrjTask.hasTaskDesc;
}
- (NSString*) taskDesc {
  return resultPbPrjTask.taskDesc;
}
- (PbPrjTaskBuilder*) setTaskDesc:(NSString*) value {
  resultPbPrjTask.hasTaskDesc = YES;
  resultPbPrjTask.taskDesc = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskDesc {
  resultPbPrjTask.hasTaskDesc = NO;
  resultPbPrjTask.taskDesc = @"";
  return self;
}
- (BOOL) hasTaskDescType {
  return resultPbPrjTask.hasTaskDescType;
}
- (SInt32) taskDescType {
  return resultPbPrjTask.taskDescType;
}
- (PbPrjTaskBuilder*) setTaskDescType:(SInt32) value {
  resultPbPrjTask.hasTaskDescType = YES;
  resultPbPrjTask.taskDescType = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskDescType {
  resultPbPrjTask.hasTaskDescType = NO;
  resultPbPrjTask.taskDescType = 0;
  return self;
}
- (BOOL) hasPlaytime {
  return resultPbPrjTask.hasPlaytime;
}
- (SInt32) playtime {
  return resultPbPrjTask.playtime;
}
- (PbPrjTaskBuilder*) setPlaytime:(SInt32) value {
  resultPbPrjTask.hasPlaytime = YES;
  resultPbPrjTask.playtime = value;
  return self;
}
- (PbPrjTaskBuilder*) clearPlaytime {
  resultPbPrjTask.hasPlaytime = NO;
  resultPbPrjTask.playtime = 0;
  return self;
}
- (BOOL) hasSponsor {
  return resultPbPrjTask.hasSponsor;
}
- (PbPrjUser*) sponsor {
  return resultPbPrjTask.sponsor;
}
- (PbPrjTaskBuilder*) setSponsor:(PbPrjUser*) value {
  resultPbPrjTask.hasSponsor = YES;
  resultPbPrjTask.sponsor = value;
  return self;
}
- (PbPrjTaskBuilder*) setSponsorBuilder:(PbPrjUserBuilder*) builderForValue {
  return [self setSponsor:[builderForValue build]];
}
- (PbPrjTaskBuilder*) mergeSponsor:(PbPrjUser*) value {
  if (resultPbPrjTask.hasSponsor &&
      resultPbPrjTask.sponsor != [PbPrjUser defaultInstance]) {
    resultPbPrjTask.sponsor =
      [[[PbPrjUser builderWithPrototype:resultPbPrjTask.sponsor] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjTask.sponsor = value;
  }
  resultPbPrjTask.hasSponsor = YES;
  return self;
}
- (PbPrjTaskBuilder*) clearSponsor {
  resultPbPrjTask.hasSponsor = NO;
  resultPbPrjTask.sponsor = [PbPrjUser defaultInstance];
  return self;
}
- (NSMutableArray *)members {
  return resultPbPrjTask.membersArray;
}
- (PbPrjUser*)membersAtIndex:(NSUInteger)index {
  return [resultPbPrjTask membersAtIndex:index];
}
- (PbPrjTaskBuilder *)addMembers:(PbPrjUser*)value {
  if (resultPbPrjTask.membersArray == nil) {
    resultPbPrjTask.membersArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTask.membersArray addObject:value];
  return self;
}
- (PbPrjTaskBuilder *)setMembersArray:(NSArray *)array {
  resultPbPrjTask.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjTaskBuilder *)clearMembers {
  resultPbPrjTask.membersArray = nil;
  return self;
}
- (BOOL) hasTaskStatus {
  return resultPbPrjTask.hasTaskStatus;
}
- (SInt32) taskStatus {
  return resultPbPrjTask.taskStatus;
}
- (PbPrjTaskBuilder*) setTaskStatus:(SInt32) value {
  resultPbPrjTask.hasTaskStatus = YES;
  resultPbPrjTask.taskStatus = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskStatus {
  resultPbPrjTask.hasTaskStatus = NO;
  resultPbPrjTask.taskStatus = 0;
  return self;
}
- (BOOL) hasPosition {
  return resultPbPrjTask.hasPosition;
}
- (NSString*) position {
  return resultPbPrjTask.position;
}
- (PbPrjTaskBuilder*) setPosition:(NSString*) value {
  resultPbPrjTask.hasPosition = YES;
  resultPbPrjTask.position = value;
  return self;
}
- (PbPrjTaskBuilder*) clearPosition {
  resultPbPrjTask.hasPosition = NO;
  resultPbPrjTask.position = @"";
  return self;
}
- (NSMutableArray *)attachList {
  return resultPbPrjTask.attachListArray;
}
- (PbPrjBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [resultPbPrjTask attachListAtIndex:index];
}
- (PbPrjTaskBuilder *)addAttachList:(PbPrjBaseFile*)value {
  if (resultPbPrjTask.attachListArray == nil) {
    resultPbPrjTask.attachListArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTask.attachListArray addObject:value];
  return self;
}
- (PbPrjTaskBuilder *)setAttachListArray:(NSArray *)array {
  resultPbPrjTask.attachListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjTaskBuilder *)clearAttachList {
  resultPbPrjTask.attachListArray = nil;
  return self;
}
- (BOOL) hasTaskBegin {
  return resultPbPrjTask.hasTaskBegin;
}
- (SInt32) taskBegin {
  return resultPbPrjTask.taskBegin;
}
- (PbPrjTaskBuilder*) setTaskBegin:(SInt32) value {
  resultPbPrjTask.hasTaskBegin = YES;
  resultPbPrjTask.taskBegin = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskBegin {
  resultPbPrjTask.hasTaskBegin = NO;
  resultPbPrjTask.taskBegin = 0;
  return self;
}
- (BOOL) hasTaskEnd {
  return resultPbPrjTask.hasTaskEnd;
}
- (SInt32) taskEnd {
  return resultPbPrjTask.taskEnd;
}
- (PbPrjTaskBuilder*) setTaskEnd:(SInt32) value {
  resultPbPrjTask.hasTaskEnd = YES;
  resultPbPrjTask.taskEnd = value;
  return self;
}
- (PbPrjTaskBuilder*) clearTaskEnd {
  resultPbPrjTask.hasTaskEnd = NO;
  resultPbPrjTask.taskEnd = 0;
  return self;
}
@end

@interface PbPrjTaskReport ()
@property (strong) NSString* reportId;
@property (strong) PbPrjUser* sponsor;
@property (strong) PbPrjUser* replyTo;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property SInt32 contentType;
@property SInt32 playtime;
@property (strong) NSMutableArray * attachListArray;
@property SInt32 reportTime;
@property SInt32 reportType;
@end

@implementation PbPrjTaskReport

- (BOOL) hasReportId {
  return !!hasReportId_;
}
- (void) setHasReportId:(BOOL) _value_ {
  hasReportId_ = !!_value_;
}
@synthesize reportId;
- (BOOL) hasSponsor {
  return !!hasSponsor_;
}
- (void) setHasSponsor:(BOOL) _value_ {
  hasSponsor_ = !!_value_;
}
@synthesize sponsor;
- (BOOL) hasReplyTo {
  return !!hasReplyTo_;
}
- (void) setHasReplyTo:(BOOL) _value_ {
  hasReplyTo_ = !!_value_;
}
@synthesize replyTo;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasContentType {
  return !!hasContentType_;
}
- (void) setHasContentType:(BOOL) _value_ {
  hasContentType_ = !!_value_;
}
@synthesize contentType;
- (BOOL) hasPlaytime {
  return !!hasPlaytime_;
}
- (void) setHasPlaytime:(BOOL) _value_ {
  hasPlaytime_ = !!_value_;
}
@synthesize playtime;
@synthesize attachListArray;
@dynamic attachList;
- (BOOL) hasReportTime {
  return !!hasReportTime_;
}
- (void) setHasReportTime:(BOOL) _value_ {
  hasReportTime_ = !!_value_;
}
@synthesize reportTime;
- (BOOL) hasReportType {
  return !!hasReportType_;
}
- (void) setHasReportType:(BOOL) _value_ {
  hasReportType_ = !!_value_;
}
@synthesize reportType;
- (instancetype) init {
  if ((self = [super init])) {
    self.reportId = @"";
    self.sponsor = [PbPrjUser defaultInstance];
    self.replyTo = [PbPrjUser defaultInstance];
    self.title = @"";
    self.content = @"";
    self.contentType = 0;
    self.playtime = 0;
    self.reportTime = 0;
    self.reportType = 0;
  }
  return self;
}
static PbPrjTaskReport* defaultPbPrjTaskReportInstance = nil;
+ (void) initialize {
  if (self == [PbPrjTaskReport class]) {
    defaultPbPrjTaskReportInstance = [[PbPrjTaskReport alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjTaskReportInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjTaskReportInstance;
}
- (NSArray *)attachList {
  return attachListArray;
}
- (PbPrjBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [attachListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReportId) {
    [output writeString:1 value:self.reportId];
  }
  if (self.hasSponsor) {
    [output writeMessage:2 value:self.sponsor];
  }
  if (self.hasReplyTo) {
    [output writeMessage:3 value:self.replyTo];
  }
  if (self.hasTitle) {
    [output writeString:4 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasContentType) {
    [output writeInt32:6 value:self.contentType];
  }
  if (self.hasPlaytime) {
    [output writeInt32:7 value:self.playtime];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  if (self.hasReportTime) {
    [output writeInt32:9 value:self.reportTime];
  }
  if (self.hasReportType) {
    [output writeInt32:10 value:self.reportType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReportId) {
    size_ += computeStringSize(1, self.reportId);
  }
  if (self.hasSponsor) {
    size_ += computeMessageSize(2, self.sponsor);
  }
  if (self.hasReplyTo) {
    size_ += computeMessageSize(3, self.replyTo);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(4, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasContentType) {
    size_ += computeInt32Size(6, self.contentType);
  }
  if (self.hasPlaytime) {
    size_ += computeInt32Size(7, self.playtime);
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  if (self.hasReportTime) {
    size_ += computeInt32Size(9, self.reportTime);
  }
  if (self.hasReportType) {
    size_ += computeInt32Size(10, self.reportType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjTaskReport*) parseFromData:(NSData*) data {
  return (PbPrjTaskReport*)[[[PbPrjTaskReport builder] mergeFromData:data] build];
}
+ (PbPrjTaskReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskReport*)[[[PbPrjTaskReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskReport*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjTaskReport*)[[[PbPrjTaskReport builder] mergeFromInputStream:input] build];
}
+ (PbPrjTaskReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskReport*)[[[PbPrjTaskReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjTaskReport*)[[[PbPrjTaskReport builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjTaskReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskReport*)[[[PbPrjTaskReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskReportBuilder*) builder {
  return [[PbPrjTaskReportBuilder alloc] init];
}
+ (PbPrjTaskReportBuilder*) builderWithPrototype:(PbPrjTaskReport*) prototype {
  return [[PbPrjTaskReport builder] mergeFrom:prototype];
}
- (PbPrjTaskReportBuilder*) builder {
  return [PbPrjTaskReport builder];
}
- (PbPrjTaskReportBuilder*) toBuilder {
  return [PbPrjTaskReport builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reportId", self.reportId];
  }
  if (self.hasSponsor) {
    [output appendFormat:@"%@%@ {\n", indent, @"sponsor"];
    [self.sponsor writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasReplyTo) {
    [output appendFormat:@"%@%@ {\n", indent, @"replyTo"];
    [self.replyTo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasContentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contentType", [NSNumber numberWithInteger:self.contentType]];
  }
  if (self.hasPlaytime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playtime", [NSNumber numberWithInteger:self.playtime]];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attachList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasReportTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reportTime", [NSNumber numberWithInteger:self.reportTime]];
  }
  if (self.hasReportType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reportType", [NSNumber numberWithInteger:self.reportType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReportId) {
    [dictionary setObject: self.reportId forKey: @"reportId"];
  }
  if (self.hasSponsor) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.sponsor storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"sponsor"];
  }
  if (self.hasReplyTo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.replyTo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"replyTo"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasContentType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.contentType] forKey: @"contentType"];
  }
  if (self.hasPlaytime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.playtime] forKey: @"playtime"];
  }
  for (PbPrjBaseFile* element in self.attachListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attachList"];
  }
  if (self.hasReportTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.reportTime] forKey: @"reportTime"];
  }
  if (self.hasReportType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.reportType] forKey: @"reportType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjTaskReport class]]) {
    return NO;
  }
  PbPrjTaskReport *otherMessage = other;
  return
      self.hasReportId == otherMessage.hasReportId &&
      (!self.hasReportId || [self.reportId isEqual:otherMessage.reportId]) &&
      self.hasSponsor == otherMessage.hasSponsor &&
      (!self.hasSponsor || [self.sponsor isEqual:otherMessage.sponsor]) &&
      self.hasReplyTo == otherMessage.hasReplyTo &&
      (!self.hasReplyTo || [self.replyTo isEqual:otherMessage.replyTo]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasContentType == otherMessage.hasContentType &&
      (!self.hasContentType || self.contentType == otherMessage.contentType) &&
      self.hasPlaytime == otherMessage.hasPlaytime &&
      (!self.hasPlaytime || self.playtime == otherMessage.playtime) &&
      [self.attachListArray isEqualToArray:otherMessage.attachListArray] &&
      self.hasReportTime == otherMessage.hasReportTime &&
      (!self.hasReportTime || self.reportTime == otherMessage.reportTime) &&
      self.hasReportType == otherMessage.hasReportType &&
      (!self.hasReportType || self.reportType == otherMessage.reportType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReportId) {
    hashCode = hashCode * 31 + [self.reportId hash];
  }
  if (self.hasSponsor) {
    hashCode = hashCode * 31 + [self.sponsor hash];
  }
  if (self.hasReplyTo) {
    hashCode = hashCode * 31 + [self.replyTo hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasContentType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.contentType] hash];
  }
  if (self.hasPlaytime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.playtime] hash];
  }
  [self.attachListArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasReportTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reportTime] hash];
  }
  if (self.hasReportType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reportType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjTaskReportBuilder()
@property (strong) PbPrjTaskReport* resultPbPrjTaskReport;
@end

@implementation PbPrjTaskReportBuilder
@synthesize resultPbPrjTaskReport;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjTaskReport = [[PbPrjTaskReport alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjTaskReport;
}
- (PbPrjTaskReportBuilder*) clear {
  self.resultPbPrjTaskReport = [[PbPrjTaskReport alloc] init];
  return self;
}
- (PbPrjTaskReportBuilder*) clone {
  return [PbPrjTaskReport builderWithPrototype:resultPbPrjTaskReport];
}
- (PbPrjTaskReport*) defaultInstance {
  return [PbPrjTaskReport defaultInstance];
}
- (PbPrjTaskReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjTaskReport*) buildPartial {
  PbPrjTaskReport* returnMe = resultPbPrjTaskReport;
  self.resultPbPrjTaskReport = nil;
  return returnMe;
}
- (PbPrjTaskReportBuilder*) mergeFrom:(PbPrjTaskReport*) other {
  if (other == [PbPrjTaskReport defaultInstance]) {
    return self;
  }
  if (other.hasReportId) {
    [self setReportId:other.reportId];
  }
  if (other.hasSponsor) {
    [self mergeSponsor:other.sponsor];
  }
  if (other.hasReplyTo) {
    [self mergeReplyTo:other.replyTo];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasContentType) {
    [self setContentType:other.contentType];
  }
  if (other.hasPlaytime) {
    [self setPlaytime:other.playtime];
  }
  if (other.attachListArray.count > 0) {
    if (resultPbPrjTaskReport.attachListArray == nil) {
      resultPbPrjTaskReport.attachListArray = [[NSMutableArray alloc] initWithArray:other.attachListArray];
    } else {
      [resultPbPrjTaskReport.attachListArray addObjectsFromArray:other.attachListArray];
    }
  }
  if (other.hasReportTime) {
    [self setReportTime:other.reportTime];
  }
  if (other.hasReportType) {
    [self setReportType:other.reportType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjTaskReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjTaskReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setReportId:[input readString]];
        break;
      }
      case 18: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        if (self.hasSponsor) {
          [subBuilder mergeFrom:self.sponsor];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSponsor:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        if (self.hasReplyTo) {
          [subBuilder mergeFrom:self.replyTo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReplyTo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setTitle:[input readString]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 48: {
        [self setContentType:[input readInt32]];
        break;
      }
      case 56: {
        [self setPlaytime:[input readInt32]];
        break;
      }
      case 66: {
        PbPrjBaseFileBuilder* subBuilder = [PbPrjBaseFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttachList:[subBuilder buildPartial]];
        break;
      }
      case 72: {
        [self setReportTime:[input readInt32]];
        break;
      }
      case 80: {
        [self setReportType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReportId {
  return resultPbPrjTaskReport.hasReportId;
}
- (NSString*) reportId {
  return resultPbPrjTaskReport.reportId;
}
- (PbPrjTaskReportBuilder*) setReportId:(NSString*) value {
  resultPbPrjTaskReport.hasReportId = YES;
  resultPbPrjTaskReport.reportId = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearReportId {
  resultPbPrjTaskReport.hasReportId = NO;
  resultPbPrjTaskReport.reportId = @"";
  return self;
}
- (BOOL) hasSponsor {
  return resultPbPrjTaskReport.hasSponsor;
}
- (PbPrjUser*) sponsor {
  return resultPbPrjTaskReport.sponsor;
}
- (PbPrjTaskReportBuilder*) setSponsor:(PbPrjUser*) value {
  resultPbPrjTaskReport.hasSponsor = YES;
  resultPbPrjTaskReport.sponsor = value;
  return self;
}
- (PbPrjTaskReportBuilder*) setSponsorBuilder:(PbPrjUserBuilder*) builderForValue {
  return [self setSponsor:[builderForValue build]];
}
- (PbPrjTaskReportBuilder*) mergeSponsor:(PbPrjUser*) value {
  if (resultPbPrjTaskReport.hasSponsor &&
      resultPbPrjTaskReport.sponsor != [PbPrjUser defaultInstance]) {
    resultPbPrjTaskReport.sponsor =
      [[[PbPrjUser builderWithPrototype:resultPbPrjTaskReport.sponsor] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjTaskReport.sponsor = value;
  }
  resultPbPrjTaskReport.hasSponsor = YES;
  return self;
}
- (PbPrjTaskReportBuilder*) clearSponsor {
  resultPbPrjTaskReport.hasSponsor = NO;
  resultPbPrjTaskReport.sponsor = [PbPrjUser defaultInstance];
  return self;
}
- (BOOL) hasReplyTo {
  return resultPbPrjTaskReport.hasReplyTo;
}
- (PbPrjUser*) replyTo {
  return resultPbPrjTaskReport.replyTo;
}
- (PbPrjTaskReportBuilder*) setReplyTo:(PbPrjUser*) value {
  resultPbPrjTaskReport.hasReplyTo = YES;
  resultPbPrjTaskReport.replyTo = value;
  return self;
}
- (PbPrjTaskReportBuilder*) setReplyToBuilder:(PbPrjUserBuilder*) builderForValue {
  return [self setReplyTo:[builderForValue build]];
}
- (PbPrjTaskReportBuilder*) mergeReplyTo:(PbPrjUser*) value {
  if (resultPbPrjTaskReport.hasReplyTo &&
      resultPbPrjTaskReport.replyTo != [PbPrjUser defaultInstance]) {
    resultPbPrjTaskReport.replyTo =
      [[[PbPrjUser builderWithPrototype:resultPbPrjTaskReport.replyTo] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjTaskReport.replyTo = value;
  }
  resultPbPrjTaskReport.hasReplyTo = YES;
  return self;
}
- (PbPrjTaskReportBuilder*) clearReplyTo {
  resultPbPrjTaskReport.hasReplyTo = NO;
  resultPbPrjTaskReport.replyTo = [PbPrjUser defaultInstance];
  return self;
}
- (BOOL) hasTitle {
  return resultPbPrjTaskReport.hasTitle;
}
- (NSString*) title {
  return resultPbPrjTaskReport.title;
}
- (PbPrjTaskReportBuilder*) setTitle:(NSString*) value {
  resultPbPrjTaskReport.hasTitle = YES;
  resultPbPrjTaskReport.title = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearTitle {
  resultPbPrjTaskReport.hasTitle = NO;
  resultPbPrjTaskReport.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultPbPrjTaskReport.hasContent;
}
- (NSString*) content {
  return resultPbPrjTaskReport.content;
}
- (PbPrjTaskReportBuilder*) setContent:(NSString*) value {
  resultPbPrjTaskReport.hasContent = YES;
  resultPbPrjTaskReport.content = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearContent {
  resultPbPrjTaskReport.hasContent = NO;
  resultPbPrjTaskReport.content = @"";
  return self;
}
- (BOOL) hasContentType {
  return resultPbPrjTaskReport.hasContentType;
}
- (SInt32) contentType {
  return resultPbPrjTaskReport.contentType;
}
- (PbPrjTaskReportBuilder*) setContentType:(SInt32) value {
  resultPbPrjTaskReport.hasContentType = YES;
  resultPbPrjTaskReport.contentType = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearContentType {
  resultPbPrjTaskReport.hasContentType = NO;
  resultPbPrjTaskReport.contentType = 0;
  return self;
}
- (BOOL) hasPlaytime {
  return resultPbPrjTaskReport.hasPlaytime;
}
- (SInt32) playtime {
  return resultPbPrjTaskReport.playtime;
}
- (PbPrjTaskReportBuilder*) setPlaytime:(SInt32) value {
  resultPbPrjTaskReport.hasPlaytime = YES;
  resultPbPrjTaskReport.playtime = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearPlaytime {
  resultPbPrjTaskReport.hasPlaytime = NO;
  resultPbPrjTaskReport.playtime = 0;
  return self;
}
- (NSMutableArray *)attachList {
  return resultPbPrjTaskReport.attachListArray;
}
- (PbPrjBaseFile*)attachListAtIndex:(NSUInteger)index {
  return [resultPbPrjTaskReport attachListAtIndex:index];
}
- (PbPrjTaskReportBuilder *)addAttachList:(PbPrjBaseFile*)value {
  if (resultPbPrjTaskReport.attachListArray == nil) {
    resultPbPrjTaskReport.attachListArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTaskReport.attachListArray addObject:value];
  return self;
}
- (PbPrjTaskReportBuilder *)setAttachListArray:(NSArray *)array {
  resultPbPrjTaskReport.attachListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjTaskReportBuilder *)clearAttachList {
  resultPbPrjTaskReport.attachListArray = nil;
  return self;
}
- (BOOL) hasReportTime {
  return resultPbPrjTaskReport.hasReportTime;
}
- (SInt32) reportTime {
  return resultPbPrjTaskReport.reportTime;
}
- (PbPrjTaskReportBuilder*) setReportTime:(SInt32) value {
  resultPbPrjTaskReport.hasReportTime = YES;
  resultPbPrjTaskReport.reportTime = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearReportTime {
  resultPbPrjTaskReport.hasReportTime = NO;
  resultPbPrjTaskReport.reportTime = 0;
  return self;
}
- (BOOL) hasReportType {
  return resultPbPrjTaskReport.hasReportType;
}
- (SInt32) reportType {
  return resultPbPrjTaskReport.reportType;
}
- (PbPrjTaskReportBuilder*) setReportType:(SInt32) value {
  resultPbPrjTaskReport.hasReportType = YES;
  resultPbPrjTaskReport.reportType = value;
  return self;
}
- (PbPrjTaskReportBuilder*) clearReportType {
  resultPbPrjTaskReport.hasReportType = NO;
  resultPbPrjTaskReport.reportType = 0;
  return self;
}
@end

@interface PbPrjTaskView ()
@property SInt32 uin;
@property (strong) NSString* name;
@property (strong) NSString* avatar;
@property SInt32 time;
@end

@implementation PbPrjTaskView

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.name = @"";
    self.avatar = @"";
    self.time = 0;
  }
  return self;
}
static PbPrjTaskView* defaultPbPrjTaskViewInstance = nil;
+ (void) initialize {
  if (self == [PbPrjTaskView class]) {
    defaultPbPrjTaskViewInstance = [[PbPrjTaskView alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjTaskViewInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjTaskViewInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeInt32:1 value:self.uin];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasAvatar) {
    [output writeString:3 value:self.avatar];
  }
  if (self.hasTime) {
    [output writeInt32:4 value:self.time];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeInt32Size(1, self.uin);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(3, self.avatar);
  }
  if (self.hasTime) {
    size_ += computeInt32Size(4, self.time);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjTaskView*) parseFromData:(NSData*) data {
  return (PbPrjTaskView*)[[[PbPrjTaskView builder] mergeFromData:data] build];
}
+ (PbPrjTaskView*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskView*)[[[PbPrjTaskView builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskView*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjTaskView*)[[[PbPrjTaskView builder] mergeFromInputStream:input] build];
}
+ (PbPrjTaskView*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskView*)[[[PbPrjTaskView builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskView*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjTaskView*)[[[PbPrjTaskView builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjTaskView*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskView*)[[[PbPrjTaskView builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskViewBuilder*) builder {
  return [[PbPrjTaskViewBuilder alloc] init];
}
+ (PbPrjTaskViewBuilder*) builderWithPrototype:(PbPrjTaskView*) prototype {
  return [[PbPrjTaskView builder] mergeFrom:prototype];
}
- (PbPrjTaskViewBuilder*) builder {
  return [PbPrjTaskView builder];
}
- (PbPrjTaskViewBuilder*) toBuilder {
  return [PbPrjTaskView builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjTaskView class]]) {
    return NO;
  }
  PbPrjTaskView *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjTaskViewBuilder()
@property (strong) PbPrjTaskView* resultPbPrjTaskView;
@end

@implementation PbPrjTaskViewBuilder
@synthesize resultPbPrjTaskView;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjTaskView = [[PbPrjTaskView alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjTaskView;
}
- (PbPrjTaskViewBuilder*) clear {
  self.resultPbPrjTaskView = [[PbPrjTaskView alloc] init];
  return self;
}
- (PbPrjTaskViewBuilder*) clone {
  return [PbPrjTaskView builderWithPrototype:resultPbPrjTaskView];
}
- (PbPrjTaskView*) defaultInstance {
  return [PbPrjTaskView defaultInstance];
}
- (PbPrjTaskView*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjTaskView*) buildPartial {
  PbPrjTaskView* returnMe = resultPbPrjTaskView;
  self.resultPbPrjTaskView = nil;
  return returnMe;
}
- (PbPrjTaskViewBuilder*) mergeFrom:(PbPrjTaskView*) other {
  if (other == [PbPrjTaskView defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjTaskViewBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjTaskViewBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setAvatar:[input readString]];
        break;
      }
      case 32: {
        [self setTime:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbPrjTaskView.hasUin;
}
- (SInt32) uin {
  return resultPbPrjTaskView.uin;
}
- (PbPrjTaskViewBuilder*) setUin:(SInt32) value {
  resultPbPrjTaskView.hasUin = YES;
  resultPbPrjTaskView.uin = value;
  return self;
}
- (PbPrjTaskViewBuilder*) clearUin {
  resultPbPrjTaskView.hasUin = NO;
  resultPbPrjTaskView.uin = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbPrjTaskView.hasName;
}
- (NSString*) name {
  return resultPbPrjTaskView.name;
}
- (PbPrjTaskViewBuilder*) setName:(NSString*) value {
  resultPbPrjTaskView.hasName = YES;
  resultPbPrjTaskView.name = value;
  return self;
}
- (PbPrjTaskViewBuilder*) clearName {
  resultPbPrjTaskView.hasName = NO;
  resultPbPrjTaskView.name = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultPbPrjTaskView.hasAvatar;
}
- (NSString*) avatar {
  return resultPbPrjTaskView.avatar;
}
- (PbPrjTaskViewBuilder*) setAvatar:(NSString*) value {
  resultPbPrjTaskView.hasAvatar = YES;
  resultPbPrjTaskView.avatar = value;
  return self;
}
- (PbPrjTaskViewBuilder*) clearAvatar {
  resultPbPrjTaskView.hasAvatar = NO;
  resultPbPrjTaskView.avatar = @"";
  return self;
}
- (BOOL) hasTime {
  return resultPbPrjTaskView.hasTime;
}
- (SInt32) time {
  return resultPbPrjTaskView.time;
}
- (PbPrjTaskViewBuilder*) setTime:(SInt32) value {
  resultPbPrjTaskView.hasTime = YES;
  resultPbPrjTaskView.time = value;
  return self;
}
- (PbPrjTaskViewBuilder*) clearTime {
  resultPbPrjTaskView.hasTime = NO;
  resultPbPrjTaskView.time = 0;
  return self;
}
@end

@interface PbPrjTaskDetails ()
@property (strong) PbPrjTask* task;
@property (strong) NSMutableArray * reportListArray;
@property SInt32 reportCount;
@property (strong) NSMutableArray * viewListArray;
@property SInt32 viewCount;
@property (strong) NSMutableArray * positionListArray;
@end

@implementation PbPrjTaskDetails

- (BOOL) hasTask {
  return !!hasTask_;
}
- (void) setHasTask:(BOOL) _value_ {
  hasTask_ = !!_value_;
}
@synthesize task;
@synthesize reportListArray;
@dynamic reportList;
- (BOOL) hasReportCount {
  return !!hasReportCount_;
}
- (void) setHasReportCount:(BOOL) _value_ {
  hasReportCount_ = !!_value_;
}
@synthesize reportCount;
@synthesize viewListArray;
@dynamic viewList;
- (BOOL) hasViewCount {
  return !!hasViewCount_;
}
- (void) setHasViewCount:(BOOL) _value_ {
  hasViewCount_ = !!_value_;
}
@synthesize viewCount;
@synthesize positionListArray;
@dynamic positionList;
- (instancetype) init {
  if ((self = [super init])) {
    self.task = [PbPrjTask defaultInstance];
    self.reportCount = 0;
    self.viewCount = 0;
  }
  return self;
}
static PbPrjTaskDetails* defaultPbPrjTaskDetailsInstance = nil;
+ (void) initialize {
  if (self == [PbPrjTaskDetails class]) {
    defaultPbPrjTaskDetailsInstance = [[PbPrjTaskDetails alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjTaskDetailsInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjTaskDetailsInstance;
}
- (NSArray *)reportList {
  return reportListArray;
}
- (PbPrjTaskReport*)reportListAtIndex:(NSUInteger)index {
  return [reportListArray objectAtIndex:index];
}
- (NSArray *)viewList {
  return viewListArray;
}
- (PbPrjTaskView*)viewListAtIndex:(NSUInteger)index {
  return [viewListArray objectAtIndex:index];
}
- (NSArray *)positionList {
  return positionListArray;
}
- (NSString*)positionListAtIndex:(NSUInteger)index {
  return [positionListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTask) {
    [output writeMessage:1 value:self.task];
  }
  [self.reportListArray enumerateObjectsUsingBlock:^(PbPrjTaskReport *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasReportCount) {
    [output writeInt32:3 value:self.reportCount];
  }
  [self.viewListArray enumerateObjectsUsingBlock:^(PbPrjTaskView *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasViewCount) {
    [output writeInt32:5 value:self.viewCount];
  }
  [self.positionListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:6 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTask) {
    size_ += computeMessageSize(1, self.task);
  }
  [self.reportListArray enumerateObjectsUsingBlock:^(PbPrjTaskReport *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasReportCount) {
    size_ += computeInt32Size(3, self.reportCount);
  }
  [self.viewListArray enumerateObjectsUsingBlock:^(PbPrjTaskView *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasViewCount) {
    size_ += computeInt32Size(5, self.viewCount);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.positionListArray.count;
    [self.positionListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjTaskDetails*) parseFromData:(NSData*) data {
  return (PbPrjTaskDetails*)[[[PbPrjTaskDetails builder] mergeFromData:data] build];
}
+ (PbPrjTaskDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskDetails*)[[[PbPrjTaskDetails builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskDetails*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjTaskDetails*)[[[PbPrjTaskDetails builder] mergeFromInputStream:input] build];
}
+ (PbPrjTaskDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskDetails*)[[[PbPrjTaskDetails builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjTaskDetails*)[[[PbPrjTaskDetails builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjTaskDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskDetails*)[[[PbPrjTaskDetails builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskDetailsBuilder*) builder {
  return [[PbPrjTaskDetailsBuilder alloc] init];
}
+ (PbPrjTaskDetailsBuilder*) builderWithPrototype:(PbPrjTaskDetails*) prototype {
  return [[PbPrjTaskDetails builder] mergeFrom:prototype];
}
- (PbPrjTaskDetailsBuilder*) builder {
  return [PbPrjTaskDetails builder];
}
- (PbPrjTaskDetailsBuilder*) toBuilder {
  return [PbPrjTaskDetails builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTask) {
    [output appendFormat:@"%@%@ {\n", indent, @"task"];
    [self.task writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.reportListArray enumerateObjectsUsingBlock:^(PbPrjTaskReport *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"reportList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasReportCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reportCount", [NSNumber numberWithInteger:self.reportCount]];
  }
  [self.viewListArray enumerateObjectsUsingBlock:^(PbPrjTaskView *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"viewList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasViewCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewCount", [NSNumber numberWithInteger:self.viewCount]];
  }
  [self.positionListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"positionList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTask) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.task storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"task"];
  }
  for (PbPrjTaskReport* element in self.reportListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"reportList"];
  }
  if (self.hasReportCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.reportCount] forKey: @"reportCount"];
  }
  for (PbPrjTaskView* element in self.viewListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"viewList"];
  }
  if (self.hasViewCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.viewCount] forKey: @"viewCount"];
  }
  [dictionary setObject:self.positionList forKey: @"positionList"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjTaskDetails class]]) {
    return NO;
  }
  PbPrjTaskDetails *otherMessage = other;
  return
      self.hasTask == otherMessage.hasTask &&
      (!self.hasTask || [self.task isEqual:otherMessage.task]) &&
      [self.reportListArray isEqualToArray:otherMessage.reportListArray] &&
      self.hasReportCount == otherMessage.hasReportCount &&
      (!self.hasReportCount || self.reportCount == otherMessage.reportCount) &&
      [self.viewListArray isEqualToArray:otherMessage.viewListArray] &&
      self.hasViewCount == otherMessage.hasViewCount &&
      (!self.hasViewCount || self.viewCount == otherMessage.viewCount) &&
      [self.positionListArray isEqualToArray:otherMessage.positionListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTask) {
    hashCode = hashCode * 31 + [self.task hash];
  }
  [self.reportListArray enumerateObjectsUsingBlock:^(PbPrjTaskReport *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasReportCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reportCount] hash];
  }
  [self.viewListArray enumerateObjectsUsingBlock:^(PbPrjTaskView *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasViewCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.viewCount] hash];
  }
  [self.positionListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjTaskDetailsBuilder()
@property (strong) PbPrjTaskDetails* resultPbPrjTaskDetails;
@end

@implementation PbPrjTaskDetailsBuilder
@synthesize resultPbPrjTaskDetails;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjTaskDetails = [[PbPrjTaskDetails alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjTaskDetails;
}
- (PbPrjTaskDetailsBuilder*) clear {
  self.resultPbPrjTaskDetails = [[PbPrjTaskDetails alloc] init];
  return self;
}
- (PbPrjTaskDetailsBuilder*) clone {
  return [PbPrjTaskDetails builderWithPrototype:resultPbPrjTaskDetails];
}
- (PbPrjTaskDetails*) defaultInstance {
  return [PbPrjTaskDetails defaultInstance];
}
- (PbPrjTaskDetails*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjTaskDetails*) buildPartial {
  PbPrjTaskDetails* returnMe = resultPbPrjTaskDetails;
  self.resultPbPrjTaskDetails = nil;
  return returnMe;
}
- (PbPrjTaskDetailsBuilder*) mergeFrom:(PbPrjTaskDetails*) other {
  if (other == [PbPrjTaskDetails defaultInstance]) {
    return self;
  }
  if (other.hasTask) {
    [self mergeTask:other.task];
  }
  if (other.reportListArray.count > 0) {
    if (resultPbPrjTaskDetails.reportListArray == nil) {
      resultPbPrjTaskDetails.reportListArray = [[NSMutableArray alloc] initWithArray:other.reportListArray];
    } else {
      [resultPbPrjTaskDetails.reportListArray addObjectsFromArray:other.reportListArray];
    }
  }
  if (other.hasReportCount) {
    [self setReportCount:other.reportCount];
  }
  if (other.viewListArray.count > 0) {
    if (resultPbPrjTaskDetails.viewListArray == nil) {
      resultPbPrjTaskDetails.viewListArray = [[NSMutableArray alloc] initWithArray:other.viewListArray];
    } else {
      [resultPbPrjTaskDetails.viewListArray addObjectsFromArray:other.viewListArray];
    }
  }
  if (other.hasViewCount) {
    [self setViewCount:other.viewCount];
  }
  if (other.positionListArray.count > 0) {
    if (resultPbPrjTaskDetails.positionListArray == nil) {
      resultPbPrjTaskDetails.positionListArray = [[NSMutableArray alloc] initWithArray:other.positionListArray];
    } else {
      [resultPbPrjTaskDetails.positionListArray addObjectsFromArray:other.positionListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjTaskDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjTaskDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbPrjTaskBuilder* subBuilder = [PbPrjTask builder];
        if (self.hasTask) {
          [subBuilder mergeFrom:self.task];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTask:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PbPrjTaskReportBuilder* subBuilder = [PbPrjTaskReport builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReportList:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setReportCount:[input readInt32]];
        break;
      }
      case 34: {
        PbPrjTaskViewBuilder* subBuilder = [PbPrjTaskView builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addViewList:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setViewCount:[input readInt32]];
        break;
      }
      case 50: {
        [self addPositionList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTask {
  return resultPbPrjTaskDetails.hasTask;
}
- (PbPrjTask*) task {
  return resultPbPrjTaskDetails.task;
}
- (PbPrjTaskDetailsBuilder*) setTask:(PbPrjTask*) value {
  resultPbPrjTaskDetails.hasTask = YES;
  resultPbPrjTaskDetails.task = value;
  return self;
}
- (PbPrjTaskDetailsBuilder*) setTaskBuilder:(PbPrjTaskBuilder*) builderForValue {
  return [self setTask:[builderForValue build]];
}
- (PbPrjTaskDetailsBuilder*) mergeTask:(PbPrjTask*) value {
  if (resultPbPrjTaskDetails.hasTask &&
      resultPbPrjTaskDetails.task != [PbPrjTask defaultInstance]) {
    resultPbPrjTaskDetails.task =
      [[[PbPrjTask builderWithPrototype:resultPbPrjTaskDetails.task] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjTaskDetails.task = value;
  }
  resultPbPrjTaskDetails.hasTask = YES;
  return self;
}
- (PbPrjTaskDetailsBuilder*) clearTask {
  resultPbPrjTaskDetails.hasTask = NO;
  resultPbPrjTaskDetails.task = [PbPrjTask defaultInstance];
  return self;
}
- (NSMutableArray *)reportList {
  return resultPbPrjTaskDetails.reportListArray;
}
- (PbPrjTaskReport*)reportListAtIndex:(NSUInteger)index {
  return [resultPbPrjTaskDetails reportListAtIndex:index];
}
- (PbPrjTaskDetailsBuilder *)addReportList:(PbPrjTaskReport*)value {
  if (resultPbPrjTaskDetails.reportListArray == nil) {
    resultPbPrjTaskDetails.reportListArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTaskDetails.reportListArray addObject:value];
  return self;
}
- (PbPrjTaskDetailsBuilder *)setReportListArray:(NSArray *)array {
  resultPbPrjTaskDetails.reportListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjTaskDetailsBuilder *)clearReportList {
  resultPbPrjTaskDetails.reportListArray = nil;
  return self;
}
- (BOOL) hasReportCount {
  return resultPbPrjTaskDetails.hasReportCount;
}
- (SInt32) reportCount {
  return resultPbPrjTaskDetails.reportCount;
}
- (PbPrjTaskDetailsBuilder*) setReportCount:(SInt32) value {
  resultPbPrjTaskDetails.hasReportCount = YES;
  resultPbPrjTaskDetails.reportCount = value;
  return self;
}
- (PbPrjTaskDetailsBuilder*) clearReportCount {
  resultPbPrjTaskDetails.hasReportCount = NO;
  resultPbPrjTaskDetails.reportCount = 0;
  return self;
}
- (NSMutableArray *)viewList {
  return resultPbPrjTaskDetails.viewListArray;
}
- (PbPrjTaskView*)viewListAtIndex:(NSUInteger)index {
  return [resultPbPrjTaskDetails viewListAtIndex:index];
}
- (PbPrjTaskDetailsBuilder *)addViewList:(PbPrjTaskView*)value {
  if (resultPbPrjTaskDetails.viewListArray == nil) {
    resultPbPrjTaskDetails.viewListArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTaskDetails.viewListArray addObject:value];
  return self;
}
- (PbPrjTaskDetailsBuilder *)setViewListArray:(NSArray *)array {
  resultPbPrjTaskDetails.viewListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjTaskDetailsBuilder *)clearViewList {
  resultPbPrjTaskDetails.viewListArray = nil;
  return self;
}
- (BOOL) hasViewCount {
  return resultPbPrjTaskDetails.hasViewCount;
}
- (SInt32) viewCount {
  return resultPbPrjTaskDetails.viewCount;
}
- (PbPrjTaskDetailsBuilder*) setViewCount:(SInt32) value {
  resultPbPrjTaskDetails.hasViewCount = YES;
  resultPbPrjTaskDetails.viewCount = value;
  return self;
}
- (PbPrjTaskDetailsBuilder*) clearViewCount {
  resultPbPrjTaskDetails.hasViewCount = NO;
  resultPbPrjTaskDetails.viewCount = 0;
  return self;
}
- (NSMutableArray *)positionList {
  return resultPbPrjTaskDetails.positionListArray;
}
- (NSString*)positionListAtIndex:(NSUInteger)index {
  return [resultPbPrjTaskDetails positionListAtIndex:index];
}
- (PbPrjTaskDetailsBuilder *)addPositionList:(NSString*)value {
  if (resultPbPrjTaskDetails.positionListArray == nil) {
    resultPbPrjTaskDetails.positionListArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTaskDetails.positionListArray addObject:value];
  return self;
}
- (PbPrjTaskDetailsBuilder *)setPositionListArray:(NSArray *)array {
  resultPbPrjTaskDetails.positionListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PbPrjTaskDetailsBuilder *)clearPositionList {
  resultPbPrjTaskDetails.positionListArray = nil;
  return self;
}
@end

@interface PbPrjTaskList ()
@property (strong) NSString* prjId;
@property SInt32 updateType;
@property SInt32 listType;
@property (strong) NSString* lastUpdateTid;
@property (strong) NSMutableArray * tasksArray;
@property SInt32 count;
@end

@implementation PbPrjTaskList

- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
- (BOOL) hasListType {
  return !!hasListType_;
}
- (void) setHasListType:(BOOL) _value_ {
  hasListType_ = !!_value_;
}
@synthesize listType;
- (BOOL) hasLastUpdateTid {
  return !!hasLastUpdateTid_;
}
- (void) setHasLastUpdateTid:(BOOL) _value_ {
  hasLastUpdateTid_ = !!_value_;
}
@synthesize lastUpdateTid;
@synthesize tasksArray;
@dynamic tasks;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjId = @"";
    self.updateType = 0;
    self.listType = 0;
    self.lastUpdateTid = @"";
    self.count = 0;
  }
  return self;
}
static PbPrjTaskList* defaultPbPrjTaskListInstance = nil;
+ (void) initialize {
  if (self == [PbPrjTaskList class]) {
    defaultPbPrjTaskListInstance = [[PbPrjTaskList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjTaskListInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjTaskListInstance;
}
- (NSArray *)tasks {
  return tasksArray;
}
- (PbPrjTask*)tasksAtIndex:(NSUInteger)index {
  return [tasksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjId) {
    [output writeString:1 value:self.prjId];
  }
  if (self.hasUpdateType) {
    [output writeInt32:2 value:self.updateType];
  }
  if (self.hasListType) {
    [output writeInt32:3 value:self.listType];
  }
  if (self.hasLastUpdateTid) {
    [output writeString:4 value:self.lastUpdateTid];
  }
  [self.tasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  if (self.hasCount) {
    [output writeInt32:6 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjId) {
    size_ += computeStringSize(1, self.prjId);
  }
  if (self.hasUpdateType) {
    size_ += computeInt32Size(2, self.updateType);
  }
  if (self.hasListType) {
    size_ += computeInt32Size(3, self.listType);
  }
  if (self.hasLastUpdateTid) {
    size_ += computeStringSize(4, self.lastUpdateTid);
  }
  [self.tasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  if (self.hasCount) {
    size_ += computeInt32Size(6, self.count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjTaskList*) parseFromData:(NSData*) data {
  return (PbPrjTaskList*)[[[PbPrjTaskList builder] mergeFromData:data] build];
}
+ (PbPrjTaskList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskList*)[[[PbPrjTaskList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskList*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjTaskList*)[[[PbPrjTaskList builder] mergeFromInputStream:input] build];
}
+ (PbPrjTaskList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskList*)[[[PbPrjTaskList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjTaskList*)[[[PbPrjTaskList builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjTaskList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjTaskList*)[[[PbPrjTaskList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjTaskListBuilder*) builder {
  return [[PbPrjTaskListBuilder alloc] init];
}
+ (PbPrjTaskListBuilder*) builderWithPrototype:(PbPrjTaskList*) prototype {
  return [[PbPrjTaskList builder] mergeFrom:prototype];
}
- (PbPrjTaskListBuilder*) builder {
  return [PbPrjTaskList builder];
}
- (PbPrjTaskListBuilder*) toBuilder {
  return [PbPrjTaskList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  if (self.hasListType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"listType", [NSNumber numberWithInteger:self.listType]];
  }
  if (self.hasLastUpdateTid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastUpdateTid", self.lastUpdateTid];
  }
  [self.tasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tasks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  if (self.hasListType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.listType] forKey: @"listType"];
  }
  if (self.hasLastUpdateTid) {
    [dictionary setObject: self.lastUpdateTid forKey: @"lastUpdateTid"];
  }
  for (PbPrjTask* element in self.tasksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"tasks"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjTaskList class]]) {
    return NO;
  }
  PbPrjTaskList *otherMessage = other;
  return
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      self.hasListType == otherMessage.hasListType &&
      (!self.hasListType || self.listType == otherMessage.listType) &&
      self.hasLastUpdateTid == otherMessage.hasLastUpdateTid &&
      (!self.hasLastUpdateTid || [self.lastUpdateTid isEqual:otherMessage.lastUpdateTid]) &&
      [self.tasksArray isEqualToArray:otherMessage.tasksArray] &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  if (self.hasListType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.listType] hash];
  }
  if (self.hasLastUpdateTid) {
    hashCode = hashCode * 31 + [self.lastUpdateTid hash];
  }
  [self.tasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjTaskListBuilder()
@property (strong) PbPrjTaskList* resultPbPrjTaskList;
@end

@implementation PbPrjTaskListBuilder
@synthesize resultPbPrjTaskList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjTaskList = [[PbPrjTaskList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjTaskList;
}
- (PbPrjTaskListBuilder*) clear {
  self.resultPbPrjTaskList = [[PbPrjTaskList alloc] init];
  return self;
}
- (PbPrjTaskListBuilder*) clone {
  return [PbPrjTaskList builderWithPrototype:resultPbPrjTaskList];
}
- (PbPrjTaskList*) defaultInstance {
  return [PbPrjTaskList defaultInstance];
}
- (PbPrjTaskList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjTaskList*) buildPartial {
  PbPrjTaskList* returnMe = resultPbPrjTaskList;
  self.resultPbPrjTaskList = nil;
  return returnMe;
}
- (PbPrjTaskListBuilder*) mergeFrom:(PbPrjTaskList*) other {
  if (other == [PbPrjTaskList defaultInstance]) {
    return self;
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.hasListType) {
    [self setListType:other.listType];
  }
  if (other.hasLastUpdateTid) {
    [self setLastUpdateTid:other.lastUpdateTid];
  }
  if (other.tasksArray.count > 0) {
    if (resultPbPrjTaskList.tasksArray == nil) {
      resultPbPrjTaskList.tasksArray = [[NSMutableArray alloc] initWithArray:other.tasksArray];
    } else {
      [resultPbPrjTaskList.tasksArray addObjectsFromArray:other.tasksArray];
    }
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjTaskListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjTaskListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjId:[input readString]];
        break;
      }
      case 16: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 24: {
        [self setListType:[input readInt32]];
        break;
      }
      case 34: {
        [self setLastUpdateTid:[input readString]];
        break;
      }
      case 42: {
        PbPrjTaskBuilder* subBuilder = [PbPrjTask builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTasks:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjId {
  return resultPbPrjTaskList.hasPrjId;
}
- (NSString*) prjId {
  return resultPbPrjTaskList.prjId;
}
- (PbPrjTaskListBuilder*) setPrjId:(NSString*) value {
  resultPbPrjTaskList.hasPrjId = YES;
  resultPbPrjTaskList.prjId = value;
  return self;
}
- (PbPrjTaskListBuilder*) clearPrjId {
  resultPbPrjTaskList.hasPrjId = NO;
  resultPbPrjTaskList.prjId = @"";
  return self;
}
- (BOOL) hasUpdateType {
  return resultPbPrjTaskList.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbPrjTaskList.updateType;
}
- (PbPrjTaskListBuilder*) setUpdateType:(SInt32) value {
  resultPbPrjTaskList.hasUpdateType = YES;
  resultPbPrjTaskList.updateType = value;
  return self;
}
- (PbPrjTaskListBuilder*) clearUpdateType {
  resultPbPrjTaskList.hasUpdateType = NO;
  resultPbPrjTaskList.updateType = 0;
  return self;
}
- (BOOL) hasListType {
  return resultPbPrjTaskList.hasListType;
}
- (SInt32) listType {
  return resultPbPrjTaskList.listType;
}
- (PbPrjTaskListBuilder*) setListType:(SInt32) value {
  resultPbPrjTaskList.hasListType = YES;
  resultPbPrjTaskList.listType = value;
  return self;
}
- (PbPrjTaskListBuilder*) clearListType {
  resultPbPrjTaskList.hasListType = NO;
  resultPbPrjTaskList.listType = 0;
  return self;
}
- (BOOL) hasLastUpdateTid {
  return resultPbPrjTaskList.hasLastUpdateTid;
}
- (NSString*) lastUpdateTid {
  return resultPbPrjTaskList.lastUpdateTid;
}
- (PbPrjTaskListBuilder*) setLastUpdateTid:(NSString*) value {
  resultPbPrjTaskList.hasLastUpdateTid = YES;
  resultPbPrjTaskList.lastUpdateTid = value;
  return self;
}
- (PbPrjTaskListBuilder*) clearLastUpdateTid {
  resultPbPrjTaskList.hasLastUpdateTid = NO;
  resultPbPrjTaskList.lastUpdateTid = @"";
  return self;
}
- (NSMutableArray *)tasks {
  return resultPbPrjTaskList.tasksArray;
}
- (PbPrjTask*)tasksAtIndex:(NSUInteger)index {
  return [resultPbPrjTaskList tasksAtIndex:index];
}
- (PbPrjTaskListBuilder *)addTasks:(PbPrjTask*)value {
  if (resultPbPrjTaskList.tasksArray == nil) {
    resultPbPrjTaskList.tasksArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjTaskList.tasksArray addObject:value];
  return self;
}
- (PbPrjTaskListBuilder *)setTasksArray:(NSArray *)array {
  resultPbPrjTaskList.tasksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjTaskListBuilder *)clearTasks {
  resultPbPrjTaskList.tasksArray = nil;
  return self;
}
- (BOOL) hasCount {
  return resultPbPrjTaskList.hasCount;
}
- (SInt32) count {
  return resultPbPrjTaskList.count;
}
- (PbPrjTaskListBuilder*) setCount:(SInt32) value {
  resultPbPrjTaskList.hasCount = YES;
  resultPbPrjTaskList.count = value;
  return self;
}
- (PbPrjTaskListBuilder*) clearCount {
  resultPbPrjTaskList.hasCount = NO;
  resultPbPrjTaskList.count = 0;
  return self;
}
@end

@interface PbPrjWeatherBase ()
@property (strong) NSString* currentTem;
@property (strong) NSString* weatherInfo;
@property (strong) NSString* date;
@property SInt32 weatherType;
@property (strong) NSString* reminder;
@property (strong) NSString* airQuality;
@property SInt32 airQualityDate;
@property (strong) NSString* province;
@property (strong) NSString* city;
@end

@implementation PbPrjWeatherBase

- (BOOL) hasCurrentTem {
  return !!hasCurrentTem_;
}
- (void) setHasCurrentTem:(BOOL) _value_ {
  hasCurrentTem_ = !!_value_;
}
@synthesize currentTem;
- (BOOL) hasWeatherInfo {
  return !!hasWeatherInfo_;
}
- (void) setHasWeatherInfo:(BOOL) _value_ {
  hasWeatherInfo_ = !!_value_;
}
@synthesize weatherInfo;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasWeatherType {
  return !!hasWeatherType_;
}
- (void) setHasWeatherType:(BOOL) _value_ {
  hasWeatherType_ = !!_value_;
}
@synthesize weatherType;
- (BOOL) hasReminder {
  return !!hasReminder_;
}
- (void) setHasReminder:(BOOL) _value_ {
  hasReminder_ = !!_value_;
}
@synthesize reminder;
- (BOOL) hasAirQuality {
  return !!hasAirQuality_;
}
- (void) setHasAirQuality:(BOOL) _value_ {
  hasAirQuality_ = !!_value_;
}
@synthesize airQuality;
- (BOOL) hasAirQualityDate {
  return !!hasAirQualityDate_;
}
- (void) setHasAirQualityDate:(BOOL) _value_ {
  hasAirQualityDate_ = !!_value_;
}
@synthesize airQualityDate;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) _value_ {
  hasProvince_ = !!_value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (instancetype) init {
  if ((self = [super init])) {
    self.currentTem = @"";
    self.weatherInfo = @"";
    self.date = @"";
    self.weatherType = 0;
    self.reminder = @"";
    self.airQuality = @"";
    self.airQualityDate = 0;
    self.province = @"";
    self.city = @"";
  }
  return self;
}
static PbPrjWeatherBase* defaultPbPrjWeatherBaseInstance = nil;
+ (void) initialize {
  if (self == [PbPrjWeatherBase class]) {
    defaultPbPrjWeatherBaseInstance = [[PbPrjWeatherBase alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjWeatherBaseInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjWeatherBaseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCurrentTem) {
    [output writeString:1 value:self.currentTem];
  }
  if (self.hasWeatherInfo) {
    [output writeString:2 value:self.weatherInfo];
  }
  if (self.hasDate) {
    [output writeString:3 value:self.date];
  }
  if (self.hasWeatherType) {
    [output writeInt32:4 value:self.weatherType];
  }
  if (self.hasReminder) {
    [output writeString:5 value:self.reminder];
  }
  if (self.hasAirQuality) {
    [output writeString:6 value:self.airQuality];
  }
  if (self.hasAirQualityDate) {
    [output writeInt32:7 value:self.airQualityDate];
  }
  if (self.hasProvince) {
    [output writeString:8 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:9 value:self.city];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCurrentTem) {
    size_ += computeStringSize(1, self.currentTem);
  }
  if (self.hasWeatherInfo) {
    size_ += computeStringSize(2, self.weatherInfo);
  }
  if (self.hasDate) {
    size_ += computeStringSize(3, self.date);
  }
  if (self.hasWeatherType) {
    size_ += computeInt32Size(4, self.weatherType);
  }
  if (self.hasReminder) {
    size_ += computeStringSize(5, self.reminder);
  }
  if (self.hasAirQuality) {
    size_ += computeStringSize(6, self.airQuality);
  }
  if (self.hasAirQualityDate) {
    size_ += computeInt32Size(7, self.airQualityDate);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(8, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(9, self.city);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjWeatherBase*) parseFromData:(NSData*) data {
  return (PbPrjWeatherBase*)[[[PbPrjWeatherBase builder] mergeFromData:data] build];
}
+ (PbPrjWeatherBase*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjWeatherBase*)[[[PbPrjWeatherBase builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjWeatherBase*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjWeatherBase*)[[[PbPrjWeatherBase builder] mergeFromInputStream:input] build];
}
+ (PbPrjWeatherBase*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjWeatherBase*)[[[PbPrjWeatherBase builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjWeatherBase*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjWeatherBase*)[[[PbPrjWeatherBase builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjWeatherBase*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjWeatherBase*)[[[PbPrjWeatherBase builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjWeatherBaseBuilder*) builder {
  return [[PbPrjWeatherBaseBuilder alloc] init];
}
+ (PbPrjWeatherBaseBuilder*) builderWithPrototype:(PbPrjWeatherBase*) prototype {
  return [[PbPrjWeatherBase builder] mergeFrom:prototype];
}
- (PbPrjWeatherBaseBuilder*) builder {
  return [PbPrjWeatherBase builder];
}
- (PbPrjWeatherBaseBuilder*) toBuilder {
  return [PbPrjWeatherBase builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCurrentTem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"currentTem", self.currentTem];
  }
  if (self.hasWeatherInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weatherInfo", self.weatherInfo];
  }
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", self.date];
  }
  if (self.hasWeatherType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weatherType", [NSNumber numberWithInteger:self.weatherType]];
  }
  if (self.hasReminder) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reminder", self.reminder];
  }
  if (self.hasAirQuality) {
    [output appendFormat:@"%@%@: %@\n", indent, @"airQuality", self.airQuality];
  }
  if (self.hasAirQualityDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"airQualityDate", [NSNumber numberWithInteger:self.airQualityDate]];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCurrentTem) {
    [dictionary setObject: self.currentTem forKey: @"currentTem"];
  }
  if (self.hasWeatherInfo) {
    [dictionary setObject: self.weatherInfo forKey: @"weatherInfo"];
  }
  if (self.hasDate) {
    [dictionary setObject: self.date forKey: @"date"];
  }
  if (self.hasWeatherType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weatherType] forKey: @"weatherType"];
  }
  if (self.hasReminder) {
    [dictionary setObject: self.reminder forKey: @"reminder"];
  }
  if (self.hasAirQuality) {
    [dictionary setObject: self.airQuality forKey: @"airQuality"];
  }
  if (self.hasAirQualityDate) {
    [dictionary setObject: [NSNumber numberWithInteger:self.airQualityDate] forKey: @"airQualityDate"];
  }
  if (self.hasProvince) {
    [dictionary setObject: self.province forKey: @"province"];
  }
  if (self.hasCity) {
    [dictionary setObject: self.city forKey: @"city"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjWeatherBase class]]) {
    return NO;
  }
  PbPrjWeatherBase *otherMessage = other;
  return
      self.hasCurrentTem == otherMessage.hasCurrentTem &&
      (!self.hasCurrentTem || [self.currentTem isEqual:otherMessage.currentTem]) &&
      self.hasWeatherInfo == otherMessage.hasWeatherInfo &&
      (!self.hasWeatherInfo || [self.weatherInfo isEqual:otherMessage.weatherInfo]) &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || [self.date isEqual:otherMessage.date]) &&
      self.hasWeatherType == otherMessage.hasWeatherType &&
      (!self.hasWeatherType || self.weatherType == otherMessage.weatherType) &&
      self.hasReminder == otherMessage.hasReminder &&
      (!self.hasReminder || [self.reminder isEqual:otherMessage.reminder]) &&
      self.hasAirQuality == otherMessage.hasAirQuality &&
      (!self.hasAirQuality || [self.airQuality isEqual:otherMessage.airQuality]) &&
      self.hasAirQualityDate == otherMessage.hasAirQualityDate &&
      (!self.hasAirQualityDate || self.airQualityDate == otherMessage.airQualityDate) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCurrentTem) {
    hashCode = hashCode * 31 + [self.currentTem hash];
  }
  if (self.hasWeatherInfo) {
    hashCode = hashCode * 31 + [self.weatherInfo hash];
  }
  if (self.hasDate) {
    hashCode = hashCode * 31 + [self.date hash];
  }
  if (self.hasWeatherType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weatherType] hash];
  }
  if (self.hasReminder) {
    hashCode = hashCode * 31 + [self.reminder hash];
  }
  if (self.hasAirQuality) {
    hashCode = hashCode * 31 + [self.airQuality hash];
  }
  if (self.hasAirQualityDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.airQualityDate] hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjWeatherBaseBuilder()
@property (strong) PbPrjWeatherBase* resultPbPrjWeatherBase;
@end

@implementation PbPrjWeatherBaseBuilder
@synthesize resultPbPrjWeatherBase;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjWeatherBase = [[PbPrjWeatherBase alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjWeatherBase;
}
- (PbPrjWeatherBaseBuilder*) clear {
  self.resultPbPrjWeatherBase = [[PbPrjWeatherBase alloc] init];
  return self;
}
- (PbPrjWeatherBaseBuilder*) clone {
  return [PbPrjWeatherBase builderWithPrototype:resultPbPrjWeatherBase];
}
- (PbPrjWeatherBase*) defaultInstance {
  return [PbPrjWeatherBase defaultInstance];
}
- (PbPrjWeatherBase*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjWeatherBase*) buildPartial {
  PbPrjWeatherBase* returnMe = resultPbPrjWeatherBase;
  self.resultPbPrjWeatherBase = nil;
  return returnMe;
}
- (PbPrjWeatherBaseBuilder*) mergeFrom:(PbPrjWeatherBase*) other {
  if (other == [PbPrjWeatherBase defaultInstance]) {
    return self;
  }
  if (other.hasCurrentTem) {
    [self setCurrentTem:other.currentTem];
  }
  if (other.hasWeatherInfo) {
    [self setWeatherInfo:other.weatherInfo];
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasWeatherType) {
    [self setWeatherType:other.weatherType];
  }
  if (other.hasReminder) {
    [self setReminder:other.reminder];
  }
  if (other.hasAirQuality) {
    [self setAirQuality:other.airQuality];
  }
  if (other.hasAirQualityDate) {
    [self setAirQualityDate:other.airQualityDate];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjWeatherBaseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjWeatherBaseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCurrentTem:[input readString]];
        break;
      }
      case 18: {
        [self setWeatherInfo:[input readString]];
        break;
      }
      case 26: {
        [self setDate:[input readString]];
        break;
      }
      case 32: {
        [self setWeatherType:[input readInt32]];
        break;
      }
      case 42: {
        [self setReminder:[input readString]];
        break;
      }
      case 50: {
        [self setAirQuality:[input readString]];
        break;
      }
      case 56: {
        [self setAirQualityDate:[input readInt32]];
        break;
      }
      case 66: {
        [self setProvince:[input readString]];
        break;
      }
      case 74: {
        [self setCity:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCurrentTem {
  return resultPbPrjWeatherBase.hasCurrentTem;
}
- (NSString*) currentTem {
  return resultPbPrjWeatherBase.currentTem;
}
- (PbPrjWeatherBaseBuilder*) setCurrentTem:(NSString*) value {
  resultPbPrjWeatherBase.hasCurrentTem = YES;
  resultPbPrjWeatherBase.currentTem = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearCurrentTem {
  resultPbPrjWeatherBase.hasCurrentTem = NO;
  resultPbPrjWeatherBase.currentTem = @"";
  return self;
}
- (BOOL) hasWeatherInfo {
  return resultPbPrjWeatherBase.hasWeatherInfo;
}
- (NSString*) weatherInfo {
  return resultPbPrjWeatherBase.weatherInfo;
}
- (PbPrjWeatherBaseBuilder*) setWeatherInfo:(NSString*) value {
  resultPbPrjWeatherBase.hasWeatherInfo = YES;
  resultPbPrjWeatherBase.weatherInfo = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearWeatherInfo {
  resultPbPrjWeatherBase.hasWeatherInfo = NO;
  resultPbPrjWeatherBase.weatherInfo = @"";
  return self;
}
- (BOOL) hasDate {
  return resultPbPrjWeatherBase.hasDate;
}
- (NSString*) date {
  return resultPbPrjWeatherBase.date;
}
- (PbPrjWeatherBaseBuilder*) setDate:(NSString*) value {
  resultPbPrjWeatherBase.hasDate = YES;
  resultPbPrjWeatherBase.date = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearDate {
  resultPbPrjWeatherBase.hasDate = NO;
  resultPbPrjWeatherBase.date = @"";
  return self;
}
- (BOOL) hasWeatherType {
  return resultPbPrjWeatherBase.hasWeatherType;
}
- (SInt32) weatherType {
  return resultPbPrjWeatherBase.weatherType;
}
- (PbPrjWeatherBaseBuilder*) setWeatherType:(SInt32) value {
  resultPbPrjWeatherBase.hasWeatherType = YES;
  resultPbPrjWeatherBase.weatherType = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearWeatherType {
  resultPbPrjWeatherBase.hasWeatherType = NO;
  resultPbPrjWeatherBase.weatherType = 0;
  return self;
}
- (BOOL) hasReminder {
  return resultPbPrjWeatherBase.hasReminder;
}
- (NSString*) reminder {
  return resultPbPrjWeatherBase.reminder;
}
- (PbPrjWeatherBaseBuilder*) setReminder:(NSString*) value {
  resultPbPrjWeatherBase.hasReminder = YES;
  resultPbPrjWeatherBase.reminder = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearReminder {
  resultPbPrjWeatherBase.hasReminder = NO;
  resultPbPrjWeatherBase.reminder = @"";
  return self;
}
- (BOOL) hasAirQuality {
  return resultPbPrjWeatherBase.hasAirQuality;
}
- (NSString*) airQuality {
  return resultPbPrjWeatherBase.airQuality;
}
- (PbPrjWeatherBaseBuilder*) setAirQuality:(NSString*) value {
  resultPbPrjWeatherBase.hasAirQuality = YES;
  resultPbPrjWeatherBase.airQuality = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearAirQuality {
  resultPbPrjWeatherBase.hasAirQuality = NO;
  resultPbPrjWeatherBase.airQuality = @"";
  return self;
}
- (BOOL) hasAirQualityDate {
  return resultPbPrjWeatherBase.hasAirQualityDate;
}
- (SInt32) airQualityDate {
  return resultPbPrjWeatherBase.airQualityDate;
}
- (PbPrjWeatherBaseBuilder*) setAirQualityDate:(SInt32) value {
  resultPbPrjWeatherBase.hasAirQualityDate = YES;
  resultPbPrjWeatherBase.airQualityDate = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearAirQualityDate {
  resultPbPrjWeatherBase.hasAirQualityDate = NO;
  resultPbPrjWeatherBase.airQualityDate = 0;
  return self;
}
- (BOOL) hasProvince {
  return resultPbPrjWeatherBase.hasProvince;
}
- (NSString*) province {
  return resultPbPrjWeatherBase.province;
}
- (PbPrjWeatherBaseBuilder*) setProvince:(NSString*) value {
  resultPbPrjWeatherBase.hasProvince = YES;
  resultPbPrjWeatherBase.province = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearProvince {
  resultPbPrjWeatherBase.hasProvince = NO;
  resultPbPrjWeatherBase.province = @"";
  return self;
}
- (BOOL) hasCity {
  return resultPbPrjWeatherBase.hasCity;
}
- (NSString*) city {
  return resultPbPrjWeatherBase.city;
}
- (PbPrjWeatherBaseBuilder*) setCity:(NSString*) value {
  resultPbPrjWeatherBase.hasCity = YES;
  resultPbPrjWeatherBase.city = value;
  return self;
}
- (PbPrjWeatherBaseBuilder*) clearCity {
  resultPbPrjWeatherBase.hasCity = NO;
  resultPbPrjWeatherBase.city = @"";
  return self;
}
@end

@interface PbPrjReminder ()
@property SInt32 reminderType;
@property (strong) NSString* reminderTitle;
@property (strong) NSMutableArray * reminderInfosArray;
@end

@implementation PbPrjReminder

- (BOOL) hasReminderType {
  return !!hasReminderType_;
}
- (void) setHasReminderType:(BOOL) _value_ {
  hasReminderType_ = !!_value_;
}
@synthesize reminderType;
- (BOOL) hasReminderTitle {
  return !!hasReminderTitle_;
}
- (void) setHasReminderTitle:(BOOL) _value_ {
  hasReminderTitle_ = !!_value_;
}
@synthesize reminderTitle;
@synthesize reminderInfosArray;
@dynamic reminderInfos;
- (instancetype) init {
  if ((self = [super init])) {
    self.reminderType = 0;
    self.reminderTitle = @"";
  }
  return self;
}
static PbPrjReminder* defaultPbPrjReminderInstance = nil;
+ (void) initialize {
  if (self == [PbPrjReminder class]) {
    defaultPbPrjReminderInstance = [[PbPrjReminder alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjReminderInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjReminderInstance;
}
- (NSArray *)reminderInfos {
  return reminderInfosArray;
}
- (NSString*)reminderInfosAtIndex:(NSUInteger)index {
  return [reminderInfosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReminderType) {
    [output writeInt32:1 value:self.reminderType];
  }
  if (self.hasReminderTitle) {
    [output writeString:2 value:self.reminderTitle];
  }
  [self.reminderInfosArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReminderType) {
    size_ += computeInt32Size(1, self.reminderType);
  }
  if (self.hasReminderTitle) {
    size_ += computeStringSize(2, self.reminderTitle);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.reminderInfosArray.count;
    [self.reminderInfosArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjReminder*) parseFromData:(NSData*) data {
  return (PbPrjReminder*)[[[PbPrjReminder builder] mergeFromData:data] build];
}
+ (PbPrjReminder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjReminder*)[[[PbPrjReminder builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjReminder*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjReminder*)[[[PbPrjReminder builder] mergeFromInputStream:input] build];
}
+ (PbPrjReminder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjReminder*)[[[PbPrjReminder builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjReminder*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjReminder*)[[[PbPrjReminder builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjReminder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjReminder*)[[[PbPrjReminder builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjReminderBuilder*) builder {
  return [[PbPrjReminderBuilder alloc] init];
}
+ (PbPrjReminderBuilder*) builderWithPrototype:(PbPrjReminder*) prototype {
  return [[PbPrjReminder builder] mergeFrom:prototype];
}
- (PbPrjReminderBuilder*) builder {
  return [PbPrjReminder builder];
}
- (PbPrjReminderBuilder*) toBuilder {
  return [PbPrjReminder builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReminderType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reminderType", [NSNumber numberWithInteger:self.reminderType]];
  }
  if (self.hasReminderTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reminderTitle", self.reminderTitle];
  }
  [self.reminderInfosArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reminderInfos", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReminderType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.reminderType] forKey: @"reminderType"];
  }
  if (self.hasReminderTitle) {
    [dictionary setObject: self.reminderTitle forKey: @"reminderTitle"];
  }
  [dictionary setObject:self.reminderInfos forKey: @"reminderInfos"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjReminder class]]) {
    return NO;
  }
  PbPrjReminder *otherMessage = other;
  return
      self.hasReminderType == otherMessage.hasReminderType &&
      (!self.hasReminderType || self.reminderType == otherMessage.reminderType) &&
      self.hasReminderTitle == otherMessage.hasReminderTitle &&
      (!self.hasReminderTitle || [self.reminderTitle isEqual:otherMessage.reminderTitle]) &&
      [self.reminderInfosArray isEqualToArray:otherMessage.reminderInfosArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReminderType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reminderType] hash];
  }
  if (self.hasReminderTitle) {
    hashCode = hashCode * 31 + [self.reminderTitle hash];
  }
  [self.reminderInfosArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjReminderBuilder()
@property (strong) PbPrjReminder* resultPbPrjReminder;
@end

@implementation PbPrjReminderBuilder
@synthesize resultPbPrjReminder;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjReminder = [[PbPrjReminder alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjReminder;
}
- (PbPrjReminderBuilder*) clear {
  self.resultPbPrjReminder = [[PbPrjReminder alloc] init];
  return self;
}
- (PbPrjReminderBuilder*) clone {
  return [PbPrjReminder builderWithPrototype:resultPbPrjReminder];
}
- (PbPrjReminder*) defaultInstance {
  return [PbPrjReminder defaultInstance];
}
- (PbPrjReminder*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjReminder*) buildPartial {
  PbPrjReminder* returnMe = resultPbPrjReminder;
  self.resultPbPrjReminder = nil;
  return returnMe;
}
- (PbPrjReminderBuilder*) mergeFrom:(PbPrjReminder*) other {
  if (other == [PbPrjReminder defaultInstance]) {
    return self;
  }
  if (other.hasReminderType) {
    [self setReminderType:other.reminderType];
  }
  if (other.hasReminderTitle) {
    [self setReminderTitle:other.reminderTitle];
  }
  if (other.reminderInfosArray.count > 0) {
    if (resultPbPrjReminder.reminderInfosArray == nil) {
      resultPbPrjReminder.reminderInfosArray = [[NSMutableArray alloc] initWithArray:other.reminderInfosArray];
    } else {
      [resultPbPrjReminder.reminderInfosArray addObjectsFromArray:other.reminderInfosArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjReminderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjReminderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setReminderType:[input readInt32]];
        break;
      }
      case 18: {
        [self setReminderTitle:[input readString]];
        break;
      }
      case 26: {
        [self addReminderInfos:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasReminderType {
  return resultPbPrjReminder.hasReminderType;
}
- (SInt32) reminderType {
  return resultPbPrjReminder.reminderType;
}
- (PbPrjReminderBuilder*) setReminderType:(SInt32) value {
  resultPbPrjReminder.hasReminderType = YES;
  resultPbPrjReminder.reminderType = value;
  return self;
}
- (PbPrjReminderBuilder*) clearReminderType {
  resultPbPrjReminder.hasReminderType = NO;
  resultPbPrjReminder.reminderType = 0;
  return self;
}
- (BOOL) hasReminderTitle {
  return resultPbPrjReminder.hasReminderTitle;
}
- (NSString*) reminderTitle {
  return resultPbPrjReminder.reminderTitle;
}
- (PbPrjReminderBuilder*) setReminderTitle:(NSString*) value {
  resultPbPrjReminder.hasReminderTitle = YES;
  resultPbPrjReminder.reminderTitle = value;
  return self;
}
- (PbPrjReminderBuilder*) clearReminderTitle {
  resultPbPrjReminder.hasReminderTitle = NO;
  resultPbPrjReminder.reminderTitle = @"";
  return self;
}
- (NSMutableArray *)reminderInfos {
  return resultPbPrjReminder.reminderInfosArray;
}
- (NSString*)reminderInfosAtIndex:(NSUInteger)index {
  return [resultPbPrjReminder reminderInfosAtIndex:index];
}
- (PbPrjReminderBuilder *)addReminderInfos:(NSString*)value {
  if (resultPbPrjReminder.reminderInfosArray == nil) {
    resultPbPrjReminder.reminderInfosArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjReminder.reminderInfosArray addObject:value];
  return self;
}
- (PbPrjReminderBuilder *)setReminderInfosArray:(NSArray *)array {
  resultPbPrjReminder.reminderInfosArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PbPrjReminderBuilder *)clearReminderInfos {
  resultPbPrjReminder.reminderInfosArray = nil;
  return self;
}
@end

@interface PbPrjWeatherDetails ()
@property (strong) NSString* hightTem;
@property (strong) NSString* lowTem;
@property (strong) NSString* currentTem;
@property (strong) NSString* weatherInfo;
@property (strong) NSString* windDirection;
@property (strong) NSString* windPower;
@property (strong) NSString* date;
@property (strong) NSString* modifyTime;
@property SInt32 weatherType;
@property (strong) NSMutableArray * remindersArray;
@property (strong) NSString* airQuality;
@property SInt32 airQualityDate;
@end

@implementation PbPrjWeatherDetails

- (BOOL) hasHightTem {
  return !!hasHightTem_;
}
- (void) setHasHightTem:(BOOL) _value_ {
  hasHightTem_ = !!_value_;
}
@synthesize hightTem;
- (BOOL) hasLowTem {
  return !!hasLowTem_;
}
- (void) setHasLowTem:(BOOL) _value_ {
  hasLowTem_ = !!_value_;
}
@synthesize lowTem;
- (BOOL) hasCurrentTem {
  return !!hasCurrentTem_;
}
- (void) setHasCurrentTem:(BOOL) _value_ {
  hasCurrentTem_ = !!_value_;
}
@synthesize currentTem;
- (BOOL) hasWeatherInfo {
  return !!hasWeatherInfo_;
}
- (void) setHasWeatherInfo:(BOOL) _value_ {
  hasWeatherInfo_ = !!_value_;
}
@synthesize weatherInfo;
- (BOOL) hasWindDirection {
  return !!hasWindDirection_;
}
- (void) setHasWindDirection:(BOOL) _value_ {
  hasWindDirection_ = !!_value_;
}
@synthesize windDirection;
- (BOOL) hasWindPower {
  return !!hasWindPower_;
}
- (void) setHasWindPower:(BOOL) _value_ {
  hasWindPower_ = !!_value_;
}
@synthesize windPower;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasModifyTime {
  return !!hasModifyTime_;
}
- (void) setHasModifyTime:(BOOL) _value_ {
  hasModifyTime_ = !!_value_;
}
@synthesize modifyTime;
- (BOOL) hasWeatherType {
  return !!hasWeatherType_;
}
- (void) setHasWeatherType:(BOOL) _value_ {
  hasWeatherType_ = !!_value_;
}
@synthesize weatherType;
@synthesize remindersArray;
@dynamic reminders;
- (BOOL) hasAirQuality {
  return !!hasAirQuality_;
}
- (void) setHasAirQuality:(BOOL) _value_ {
  hasAirQuality_ = !!_value_;
}
@synthesize airQuality;
- (BOOL) hasAirQualityDate {
  return !!hasAirQualityDate_;
}
- (void) setHasAirQualityDate:(BOOL) _value_ {
  hasAirQualityDate_ = !!_value_;
}
@synthesize airQualityDate;
- (instancetype) init {
  if ((self = [super init])) {
    self.hightTem = @"";
    self.lowTem = @"";
    self.currentTem = @"";
    self.weatherInfo = @"";
    self.windDirection = @"";
    self.windPower = @"";
    self.date = @"";
    self.modifyTime = @"";
    self.weatherType = 0;
    self.airQuality = @"";
    self.airQualityDate = 0;
  }
  return self;
}
static PbPrjWeatherDetails* defaultPbPrjWeatherDetailsInstance = nil;
+ (void) initialize {
  if (self == [PbPrjWeatherDetails class]) {
    defaultPbPrjWeatherDetailsInstance = [[PbPrjWeatherDetails alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjWeatherDetailsInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjWeatherDetailsInstance;
}
- (NSArray *)reminders {
  return remindersArray;
}
- (PbPrjReminder*)remindersAtIndex:(NSUInteger)index {
  return [remindersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHightTem) {
    [output writeString:1 value:self.hightTem];
  }
  if (self.hasLowTem) {
    [output writeString:2 value:self.lowTem];
  }
  if (self.hasCurrentTem) {
    [output writeString:3 value:self.currentTem];
  }
  if (self.hasWeatherInfo) {
    [output writeString:4 value:self.weatherInfo];
  }
  if (self.hasWindDirection) {
    [output writeString:5 value:self.windDirection];
  }
  if (self.hasWindPower) {
    [output writeString:6 value:self.windPower];
  }
  if (self.hasDate) {
    [output writeString:7 value:self.date];
  }
  if (self.hasModifyTime) {
    [output writeString:8 value:self.modifyTime];
  }
  if (self.hasWeatherType) {
    [output writeInt32:9 value:self.weatherType];
  }
  [self.remindersArray enumerateObjectsUsingBlock:^(PbPrjReminder *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:10 value:element];
  }];
  if (self.hasAirQuality) {
    [output writeString:11 value:self.airQuality];
  }
  if (self.hasAirQualityDate) {
    [output writeInt32:12 value:self.airQualityDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHightTem) {
    size_ += computeStringSize(1, self.hightTem);
  }
  if (self.hasLowTem) {
    size_ += computeStringSize(2, self.lowTem);
  }
  if (self.hasCurrentTem) {
    size_ += computeStringSize(3, self.currentTem);
  }
  if (self.hasWeatherInfo) {
    size_ += computeStringSize(4, self.weatherInfo);
  }
  if (self.hasWindDirection) {
    size_ += computeStringSize(5, self.windDirection);
  }
  if (self.hasWindPower) {
    size_ += computeStringSize(6, self.windPower);
  }
  if (self.hasDate) {
    size_ += computeStringSize(7, self.date);
  }
  if (self.hasModifyTime) {
    size_ += computeStringSize(8, self.modifyTime);
  }
  if (self.hasWeatherType) {
    size_ += computeInt32Size(9, self.weatherType);
  }
  [self.remindersArray enumerateObjectsUsingBlock:^(PbPrjReminder *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(10, element);
  }];
  if (self.hasAirQuality) {
    size_ += computeStringSize(11, self.airQuality);
  }
  if (self.hasAirQualityDate) {
    size_ += computeInt32Size(12, self.airQualityDate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjWeatherDetails*) parseFromData:(NSData*) data {
  return (PbPrjWeatherDetails*)[[[PbPrjWeatherDetails builder] mergeFromData:data] build];
}
+ (PbPrjWeatherDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjWeatherDetails*)[[[PbPrjWeatherDetails builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjWeatherDetails*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjWeatherDetails*)[[[PbPrjWeatherDetails builder] mergeFromInputStream:input] build];
}
+ (PbPrjWeatherDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjWeatherDetails*)[[[PbPrjWeatherDetails builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjWeatherDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjWeatherDetails*)[[[PbPrjWeatherDetails builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjWeatherDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjWeatherDetails*)[[[PbPrjWeatherDetails builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjWeatherDetailsBuilder*) builder {
  return [[PbPrjWeatherDetailsBuilder alloc] init];
}
+ (PbPrjWeatherDetailsBuilder*) builderWithPrototype:(PbPrjWeatherDetails*) prototype {
  return [[PbPrjWeatherDetails builder] mergeFrom:prototype];
}
- (PbPrjWeatherDetailsBuilder*) builder {
  return [PbPrjWeatherDetails builder];
}
- (PbPrjWeatherDetailsBuilder*) toBuilder {
  return [PbPrjWeatherDetails builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHightTem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hightTem", self.hightTem];
  }
  if (self.hasLowTem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lowTem", self.lowTem];
  }
  if (self.hasCurrentTem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"currentTem", self.currentTem];
  }
  if (self.hasWeatherInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weatherInfo", self.weatherInfo];
  }
  if (self.hasWindDirection) {
    [output appendFormat:@"%@%@: %@\n", indent, @"windDirection", self.windDirection];
  }
  if (self.hasWindPower) {
    [output appendFormat:@"%@%@: %@\n", indent, @"windPower", self.windPower];
  }
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", self.date];
  }
  if (self.hasModifyTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"modifyTime", self.modifyTime];
  }
  if (self.hasWeatherType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weatherType", [NSNumber numberWithInteger:self.weatherType]];
  }
  [self.remindersArray enumerateObjectsUsingBlock:^(PbPrjReminder *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"reminders"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasAirQuality) {
    [output appendFormat:@"%@%@: %@\n", indent, @"airQuality", self.airQuality];
  }
  if (self.hasAirQualityDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"airQualityDate", [NSNumber numberWithInteger:self.airQualityDate]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHightTem) {
    [dictionary setObject: self.hightTem forKey: @"hightTem"];
  }
  if (self.hasLowTem) {
    [dictionary setObject: self.lowTem forKey: @"lowTem"];
  }
  if (self.hasCurrentTem) {
    [dictionary setObject: self.currentTem forKey: @"currentTem"];
  }
  if (self.hasWeatherInfo) {
    [dictionary setObject: self.weatherInfo forKey: @"weatherInfo"];
  }
  if (self.hasWindDirection) {
    [dictionary setObject: self.windDirection forKey: @"windDirection"];
  }
  if (self.hasWindPower) {
    [dictionary setObject: self.windPower forKey: @"windPower"];
  }
  if (self.hasDate) {
    [dictionary setObject: self.date forKey: @"date"];
  }
  if (self.hasModifyTime) {
    [dictionary setObject: self.modifyTime forKey: @"modifyTime"];
  }
  if (self.hasWeatherType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weatherType] forKey: @"weatherType"];
  }
  for (PbPrjReminder* element in self.remindersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"reminders"];
  }
  if (self.hasAirQuality) {
    [dictionary setObject: self.airQuality forKey: @"airQuality"];
  }
  if (self.hasAirQualityDate) {
    [dictionary setObject: [NSNumber numberWithInteger:self.airQualityDate] forKey: @"airQualityDate"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjWeatherDetails class]]) {
    return NO;
  }
  PbPrjWeatherDetails *otherMessage = other;
  return
      self.hasHightTem == otherMessage.hasHightTem &&
      (!self.hasHightTem || [self.hightTem isEqual:otherMessage.hightTem]) &&
      self.hasLowTem == otherMessage.hasLowTem &&
      (!self.hasLowTem || [self.lowTem isEqual:otherMessage.lowTem]) &&
      self.hasCurrentTem == otherMessage.hasCurrentTem &&
      (!self.hasCurrentTem || [self.currentTem isEqual:otherMessage.currentTem]) &&
      self.hasWeatherInfo == otherMessage.hasWeatherInfo &&
      (!self.hasWeatherInfo || [self.weatherInfo isEqual:otherMessage.weatherInfo]) &&
      self.hasWindDirection == otherMessage.hasWindDirection &&
      (!self.hasWindDirection || [self.windDirection isEqual:otherMessage.windDirection]) &&
      self.hasWindPower == otherMessage.hasWindPower &&
      (!self.hasWindPower || [self.windPower isEqual:otherMessage.windPower]) &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || [self.date isEqual:otherMessage.date]) &&
      self.hasModifyTime == otherMessage.hasModifyTime &&
      (!self.hasModifyTime || [self.modifyTime isEqual:otherMessage.modifyTime]) &&
      self.hasWeatherType == otherMessage.hasWeatherType &&
      (!self.hasWeatherType || self.weatherType == otherMessage.weatherType) &&
      [self.remindersArray isEqualToArray:otherMessage.remindersArray] &&
      self.hasAirQuality == otherMessage.hasAirQuality &&
      (!self.hasAirQuality || [self.airQuality isEqual:otherMessage.airQuality]) &&
      self.hasAirQualityDate == otherMessage.hasAirQualityDate &&
      (!self.hasAirQualityDate || self.airQualityDate == otherMessage.airQualityDate) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHightTem) {
    hashCode = hashCode * 31 + [self.hightTem hash];
  }
  if (self.hasLowTem) {
    hashCode = hashCode * 31 + [self.lowTem hash];
  }
  if (self.hasCurrentTem) {
    hashCode = hashCode * 31 + [self.currentTem hash];
  }
  if (self.hasWeatherInfo) {
    hashCode = hashCode * 31 + [self.weatherInfo hash];
  }
  if (self.hasWindDirection) {
    hashCode = hashCode * 31 + [self.windDirection hash];
  }
  if (self.hasWindPower) {
    hashCode = hashCode * 31 + [self.windPower hash];
  }
  if (self.hasDate) {
    hashCode = hashCode * 31 + [self.date hash];
  }
  if (self.hasModifyTime) {
    hashCode = hashCode * 31 + [self.modifyTime hash];
  }
  if (self.hasWeatherType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weatherType] hash];
  }
  [self.remindersArray enumerateObjectsUsingBlock:^(PbPrjReminder *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAirQuality) {
    hashCode = hashCode * 31 + [self.airQuality hash];
  }
  if (self.hasAirQualityDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.airQualityDate] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjWeatherDetailsBuilder()
@property (strong) PbPrjWeatherDetails* resultPbPrjWeatherDetails;
@end

@implementation PbPrjWeatherDetailsBuilder
@synthesize resultPbPrjWeatherDetails;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjWeatherDetails = [[PbPrjWeatherDetails alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjWeatherDetails;
}
- (PbPrjWeatherDetailsBuilder*) clear {
  self.resultPbPrjWeatherDetails = [[PbPrjWeatherDetails alloc] init];
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clone {
  return [PbPrjWeatherDetails builderWithPrototype:resultPbPrjWeatherDetails];
}
- (PbPrjWeatherDetails*) defaultInstance {
  return [PbPrjWeatherDetails defaultInstance];
}
- (PbPrjWeatherDetails*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjWeatherDetails*) buildPartial {
  PbPrjWeatherDetails* returnMe = resultPbPrjWeatherDetails;
  self.resultPbPrjWeatherDetails = nil;
  return returnMe;
}
- (PbPrjWeatherDetailsBuilder*) mergeFrom:(PbPrjWeatherDetails*) other {
  if (other == [PbPrjWeatherDetails defaultInstance]) {
    return self;
  }
  if (other.hasHightTem) {
    [self setHightTem:other.hightTem];
  }
  if (other.hasLowTem) {
    [self setLowTem:other.lowTem];
  }
  if (other.hasCurrentTem) {
    [self setCurrentTem:other.currentTem];
  }
  if (other.hasWeatherInfo) {
    [self setWeatherInfo:other.weatherInfo];
  }
  if (other.hasWindDirection) {
    [self setWindDirection:other.windDirection];
  }
  if (other.hasWindPower) {
    [self setWindPower:other.windPower];
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasModifyTime) {
    [self setModifyTime:other.modifyTime];
  }
  if (other.hasWeatherType) {
    [self setWeatherType:other.weatherType];
  }
  if (other.remindersArray.count > 0) {
    if (resultPbPrjWeatherDetails.remindersArray == nil) {
      resultPbPrjWeatherDetails.remindersArray = [[NSMutableArray alloc] initWithArray:other.remindersArray];
    } else {
      [resultPbPrjWeatherDetails.remindersArray addObjectsFromArray:other.remindersArray];
    }
  }
  if (other.hasAirQuality) {
    [self setAirQuality:other.airQuality];
  }
  if (other.hasAirQualityDate) {
    [self setAirQualityDate:other.airQualityDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjWeatherDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjWeatherDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setHightTem:[input readString]];
        break;
      }
      case 18: {
        [self setLowTem:[input readString]];
        break;
      }
      case 26: {
        [self setCurrentTem:[input readString]];
        break;
      }
      case 34: {
        [self setWeatherInfo:[input readString]];
        break;
      }
      case 42: {
        [self setWindDirection:[input readString]];
        break;
      }
      case 50: {
        [self setWindPower:[input readString]];
        break;
      }
      case 58: {
        [self setDate:[input readString]];
        break;
      }
      case 66: {
        [self setModifyTime:[input readString]];
        break;
      }
      case 72: {
        [self setWeatherType:[input readInt32]];
        break;
      }
      case 82: {
        PbPrjReminderBuilder* subBuilder = [PbPrjReminder builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReminders:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        [self setAirQuality:[input readString]];
        break;
      }
      case 96: {
        [self setAirQualityDate:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasHightTem {
  return resultPbPrjWeatherDetails.hasHightTem;
}
- (NSString*) hightTem {
  return resultPbPrjWeatherDetails.hightTem;
}
- (PbPrjWeatherDetailsBuilder*) setHightTem:(NSString*) value {
  resultPbPrjWeatherDetails.hasHightTem = YES;
  resultPbPrjWeatherDetails.hightTem = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearHightTem {
  resultPbPrjWeatherDetails.hasHightTem = NO;
  resultPbPrjWeatherDetails.hightTem = @"";
  return self;
}
- (BOOL) hasLowTem {
  return resultPbPrjWeatherDetails.hasLowTem;
}
- (NSString*) lowTem {
  return resultPbPrjWeatherDetails.lowTem;
}
- (PbPrjWeatherDetailsBuilder*) setLowTem:(NSString*) value {
  resultPbPrjWeatherDetails.hasLowTem = YES;
  resultPbPrjWeatherDetails.lowTem = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearLowTem {
  resultPbPrjWeatherDetails.hasLowTem = NO;
  resultPbPrjWeatherDetails.lowTem = @"";
  return self;
}
- (BOOL) hasCurrentTem {
  return resultPbPrjWeatherDetails.hasCurrentTem;
}
- (NSString*) currentTem {
  return resultPbPrjWeatherDetails.currentTem;
}
- (PbPrjWeatherDetailsBuilder*) setCurrentTem:(NSString*) value {
  resultPbPrjWeatherDetails.hasCurrentTem = YES;
  resultPbPrjWeatherDetails.currentTem = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearCurrentTem {
  resultPbPrjWeatherDetails.hasCurrentTem = NO;
  resultPbPrjWeatherDetails.currentTem = @"";
  return self;
}
- (BOOL) hasWeatherInfo {
  return resultPbPrjWeatherDetails.hasWeatherInfo;
}
- (NSString*) weatherInfo {
  return resultPbPrjWeatherDetails.weatherInfo;
}
- (PbPrjWeatherDetailsBuilder*) setWeatherInfo:(NSString*) value {
  resultPbPrjWeatherDetails.hasWeatherInfo = YES;
  resultPbPrjWeatherDetails.weatherInfo = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearWeatherInfo {
  resultPbPrjWeatherDetails.hasWeatherInfo = NO;
  resultPbPrjWeatherDetails.weatherInfo = @"";
  return self;
}
- (BOOL) hasWindDirection {
  return resultPbPrjWeatherDetails.hasWindDirection;
}
- (NSString*) windDirection {
  return resultPbPrjWeatherDetails.windDirection;
}
- (PbPrjWeatherDetailsBuilder*) setWindDirection:(NSString*) value {
  resultPbPrjWeatherDetails.hasWindDirection = YES;
  resultPbPrjWeatherDetails.windDirection = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearWindDirection {
  resultPbPrjWeatherDetails.hasWindDirection = NO;
  resultPbPrjWeatherDetails.windDirection = @"";
  return self;
}
- (BOOL) hasWindPower {
  return resultPbPrjWeatherDetails.hasWindPower;
}
- (NSString*) windPower {
  return resultPbPrjWeatherDetails.windPower;
}
- (PbPrjWeatherDetailsBuilder*) setWindPower:(NSString*) value {
  resultPbPrjWeatherDetails.hasWindPower = YES;
  resultPbPrjWeatherDetails.windPower = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearWindPower {
  resultPbPrjWeatherDetails.hasWindPower = NO;
  resultPbPrjWeatherDetails.windPower = @"";
  return self;
}
- (BOOL) hasDate {
  return resultPbPrjWeatherDetails.hasDate;
}
- (NSString*) date {
  return resultPbPrjWeatherDetails.date;
}
- (PbPrjWeatherDetailsBuilder*) setDate:(NSString*) value {
  resultPbPrjWeatherDetails.hasDate = YES;
  resultPbPrjWeatherDetails.date = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearDate {
  resultPbPrjWeatherDetails.hasDate = NO;
  resultPbPrjWeatherDetails.date = @"";
  return self;
}
- (BOOL) hasModifyTime {
  return resultPbPrjWeatherDetails.hasModifyTime;
}
- (NSString*) modifyTime {
  return resultPbPrjWeatherDetails.modifyTime;
}
- (PbPrjWeatherDetailsBuilder*) setModifyTime:(NSString*) value {
  resultPbPrjWeatherDetails.hasModifyTime = YES;
  resultPbPrjWeatherDetails.modifyTime = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearModifyTime {
  resultPbPrjWeatherDetails.hasModifyTime = NO;
  resultPbPrjWeatherDetails.modifyTime = @"";
  return self;
}
- (BOOL) hasWeatherType {
  return resultPbPrjWeatherDetails.hasWeatherType;
}
- (SInt32) weatherType {
  return resultPbPrjWeatherDetails.weatherType;
}
- (PbPrjWeatherDetailsBuilder*) setWeatherType:(SInt32) value {
  resultPbPrjWeatherDetails.hasWeatherType = YES;
  resultPbPrjWeatherDetails.weatherType = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearWeatherType {
  resultPbPrjWeatherDetails.hasWeatherType = NO;
  resultPbPrjWeatherDetails.weatherType = 0;
  return self;
}
- (NSMutableArray *)reminders {
  return resultPbPrjWeatherDetails.remindersArray;
}
- (PbPrjReminder*)remindersAtIndex:(NSUInteger)index {
  return [resultPbPrjWeatherDetails remindersAtIndex:index];
}
- (PbPrjWeatherDetailsBuilder *)addReminders:(PbPrjReminder*)value {
  if (resultPbPrjWeatherDetails.remindersArray == nil) {
    resultPbPrjWeatherDetails.remindersArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjWeatherDetails.remindersArray addObject:value];
  return self;
}
- (PbPrjWeatherDetailsBuilder *)setRemindersArray:(NSArray *)array {
  resultPbPrjWeatherDetails.remindersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjWeatherDetailsBuilder *)clearReminders {
  resultPbPrjWeatherDetails.remindersArray = nil;
  return self;
}
- (BOOL) hasAirQuality {
  return resultPbPrjWeatherDetails.hasAirQuality;
}
- (NSString*) airQuality {
  return resultPbPrjWeatherDetails.airQuality;
}
- (PbPrjWeatherDetailsBuilder*) setAirQuality:(NSString*) value {
  resultPbPrjWeatherDetails.hasAirQuality = YES;
  resultPbPrjWeatherDetails.airQuality = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearAirQuality {
  resultPbPrjWeatherDetails.hasAirQuality = NO;
  resultPbPrjWeatherDetails.airQuality = @"";
  return self;
}
- (BOOL) hasAirQualityDate {
  return resultPbPrjWeatherDetails.hasAirQualityDate;
}
- (SInt32) airQualityDate {
  return resultPbPrjWeatherDetails.airQualityDate;
}
- (PbPrjWeatherDetailsBuilder*) setAirQualityDate:(SInt32) value {
  resultPbPrjWeatherDetails.hasAirQualityDate = YES;
  resultPbPrjWeatherDetails.airQualityDate = value;
  return self;
}
- (PbPrjWeatherDetailsBuilder*) clearAirQualityDate {
  resultPbPrjWeatherDetails.hasAirQualityDate = NO;
  resultPbPrjWeatherDetails.airQualityDate = 0;
  return self;
}
@end

@interface PbPrjPrjWeather ()
@property (strong) NSString* prjId;
@property (strong) NSMutableArray * weatherInfoArray;
@end

@implementation PbPrjPrjWeather

- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
@synthesize weatherInfoArray;
@dynamic weatherInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjId = @"";
  }
  return self;
}
static PbPrjPrjWeather* defaultPbPrjPrjWeatherInstance = nil;
+ (void) initialize {
  if (self == [PbPrjPrjWeather class]) {
    defaultPbPrjPrjWeatherInstance = [[PbPrjPrjWeather alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjPrjWeatherInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjPrjWeatherInstance;
}
- (NSArray *)weatherInfo {
  return weatherInfoArray;
}
- (PbPrjWeatherDetails*)weatherInfoAtIndex:(NSUInteger)index {
  return [weatherInfoArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjId) {
    [output writeString:1 value:self.prjId];
  }
  [self.weatherInfoArray enumerateObjectsUsingBlock:^(PbPrjWeatherDetails *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjId) {
    size_ += computeStringSize(1, self.prjId);
  }
  [self.weatherInfoArray enumerateObjectsUsingBlock:^(PbPrjWeatherDetails *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjPrjWeather*) parseFromData:(NSData*) data {
  return (PbPrjPrjWeather*)[[[PbPrjPrjWeather builder] mergeFromData:data] build];
}
+ (PbPrjPrjWeather*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjPrjWeather*)[[[PbPrjPrjWeather builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjPrjWeather*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjPrjWeather*)[[[PbPrjPrjWeather builder] mergeFromInputStream:input] build];
}
+ (PbPrjPrjWeather*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjPrjWeather*)[[[PbPrjPrjWeather builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjPrjWeather*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjPrjWeather*)[[[PbPrjPrjWeather builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjPrjWeather*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjPrjWeather*)[[[PbPrjPrjWeather builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjPrjWeatherBuilder*) builder {
  return [[PbPrjPrjWeatherBuilder alloc] init];
}
+ (PbPrjPrjWeatherBuilder*) builderWithPrototype:(PbPrjPrjWeather*) prototype {
  return [[PbPrjPrjWeather builder] mergeFrom:prototype];
}
- (PbPrjPrjWeatherBuilder*) builder {
  return [PbPrjPrjWeather builder];
}
- (PbPrjPrjWeatherBuilder*) toBuilder {
  return [PbPrjPrjWeather builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  [self.weatherInfoArray enumerateObjectsUsingBlock:^(PbPrjWeatherDetails *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"weatherInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  for (PbPrjWeatherDetails* element in self.weatherInfoArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"weatherInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjPrjWeather class]]) {
    return NO;
  }
  PbPrjPrjWeather *otherMessage = other;
  return
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      [self.weatherInfoArray isEqualToArray:otherMessage.weatherInfoArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  [self.weatherInfoArray enumerateObjectsUsingBlock:^(PbPrjWeatherDetails *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjPrjWeatherBuilder()
@property (strong) PbPrjPrjWeather* resultPbPrjPrjWeather;
@end

@implementation PbPrjPrjWeatherBuilder
@synthesize resultPbPrjPrjWeather;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjPrjWeather = [[PbPrjPrjWeather alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjPrjWeather;
}
- (PbPrjPrjWeatherBuilder*) clear {
  self.resultPbPrjPrjWeather = [[PbPrjPrjWeather alloc] init];
  return self;
}
- (PbPrjPrjWeatherBuilder*) clone {
  return [PbPrjPrjWeather builderWithPrototype:resultPbPrjPrjWeather];
}
- (PbPrjPrjWeather*) defaultInstance {
  return [PbPrjPrjWeather defaultInstance];
}
- (PbPrjPrjWeather*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjPrjWeather*) buildPartial {
  PbPrjPrjWeather* returnMe = resultPbPrjPrjWeather;
  self.resultPbPrjPrjWeather = nil;
  return returnMe;
}
- (PbPrjPrjWeatherBuilder*) mergeFrom:(PbPrjPrjWeather*) other {
  if (other == [PbPrjPrjWeather defaultInstance]) {
    return self;
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.weatherInfoArray.count > 0) {
    if (resultPbPrjPrjWeather.weatherInfoArray == nil) {
      resultPbPrjPrjWeather.weatherInfoArray = [[NSMutableArray alloc] initWithArray:other.weatherInfoArray];
    } else {
      [resultPbPrjPrjWeather.weatherInfoArray addObjectsFromArray:other.weatherInfoArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjPrjWeatherBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjPrjWeatherBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjId:[input readString]];
        break;
      }
      case 18: {
        PbPrjWeatherDetailsBuilder* subBuilder = [PbPrjWeatherDetails builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addWeatherInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjId {
  return resultPbPrjPrjWeather.hasPrjId;
}
- (NSString*) prjId {
  return resultPbPrjPrjWeather.prjId;
}
- (PbPrjPrjWeatherBuilder*) setPrjId:(NSString*) value {
  resultPbPrjPrjWeather.hasPrjId = YES;
  resultPbPrjPrjWeather.prjId = value;
  return self;
}
- (PbPrjPrjWeatherBuilder*) clearPrjId {
  resultPbPrjPrjWeather.hasPrjId = NO;
  resultPbPrjPrjWeather.prjId = @"";
  return self;
}
- (NSMutableArray *)weatherInfo {
  return resultPbPrjPrjWeather.weatherInfoArray;
}
- (PbPrjWeatherDetails*)weatherInfoAtIndex:(NSUInteger)index {
  return [resultPbPrjPrjWeather weatherInfoAtIndex:index];
}
- (PbPrjPrjWeatherBuilder *)addWeatherInfo:(PbPrjWeatherDetails*)value {
  if (resultPbPrjPrjWeather.weatherInfoArray == nil) {
    resultPbPrjPrjWeather.weatherInfoArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjPrjWeather.weatherInfoArray addObject:value];
  return self;
}
- (PbPrjPrjWeatherBuilder *)setWeatherInfoArray:(NSArray *)array {
  resultPbPrjPrjWeather.weatherInfoArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjPrjWeatherBuilder *)clearWeatherInfo {
  resultPbPrjPrjWeather.weatherInfoArray = nil;
  return self;
}
@end

@interface PbPrjInfo ()
@property (strong) NSString* prjId;
@property (strong) NSString* prjName;
@property SInt32 prjType;
@property (strong) NSString* prjImage;
@property (strong) NSString* groupId;
@property (strong) NSString* province;
@property (strong) NSString* city;
@property (strong) NSString* prjAddress;
@property SInt32 memberCount;
@property SInt32 floorArea;
@property SInt32 prjBegin;
@property SInt32 prjEnd;
@property (strong) NSString* jianzhuDanwei;
@property (strong) NSString* shigongDanwei;
@property (strong) NSString* jianliDanwei;
@property (strong) NSString* fenbaoDanwei;
@property Float64 lat;
@property Float64 lon;
@property (strong) NSString* jobType;
@property (strong) NSString* otherInfo;
@property (strong) NSString* smsMsg;
@property (strong) NSMutableArray * ownerTasksArray;
@property SInt32 ownerTasksCnt;
@property SInt32 addTime;
@property SInt32 createrUin;
@property (strong) PbPrjWeatherBase* weather;
@property (strong) NSString* prjMyJob;
@property SInt32 ownerAddTime;
@property Float32 floatFloorArea;
@end

@implementation PbPrjInfo

- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasPrjName {
  return !!hasPrjName_;
}
- (void) setHasPrjName:(BOOL) _value_ {
  hasPrjName_ = !!_value_;
}
@synthesize prjName;
- (BOOL) hasPrjType {
  return !!hasPrjType_;
}
- (void) setHasPrjType:(BOOL) _value_ {
  hasPrjType_ = !!_value_;
}
@synthesize prjType;
- (BOOL) hasPrjImage {
  return !!hasPrjImage_;
}
- (void) setHasPrjImage:(BOOL) _value_ {
  hasPrjImage_ = !!_value_;
}
@synthesize prjImage;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) _value_ {
  hasProvince_ = !!_value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (BOOL) hasPrjAddress {
  return !!hasPrjAddress_;
}
- (void) setHasPrjAddress:(BOOL) _value_ {
  hasPrjAddress_ = !!_value_;
}
@synthesize prjAddress;
- (BOOL) hasMemberCount {
  return !!hasMemberCount_;
}
- (void) setHasMemberCount:(BOOL) _value_ {
  hasMemberCount_ = !!_value_;
}
@synthesize memberCount;
- (BOOL) hasFloorArea {
  return !!hasFloorArea_;
}
- (void) setHasFloorArea:(BOOL) _value_ {
  hasFloorArea_ = !!_value_;
}
@synthesize floorArea;
- (BOOL) hasPrjBegin {
  return !!hasPrjBegin_;
}
- (void) setHasPrjBegin:(BOOL) _value_ {
  hasPrjBegin_ = !!_value_;
}
@synthesize prjBegin;
- (BOOL) hasPrjEnd {
  return !!hasPrjEnd_;
}
- (void) setHasPrjEnd:(BOOL) _value_ {
  hasPrjEnd_ = !!_value_;
}
@synthesize prjEnd;
- (BOOL) hasJianzhuDanwei {
  return !!hasJianzhuDanwei_;
}
- (void) setHasJianzhuDanwei:(BOOL) _value_ {
  hasJianzhuDanwei_ = !!_value_;
}
@synthesize jianzhuDanwei;
- (BOOL) hasShigongDanwei {
  return !!hasShigongDanwei_;
}
- (void) setHasShigongDanwei:(BOOL) _value_ {
  hasShigongDanwei_ = !!_value_;
}
@synthesize shigongDanwei;
- (BOOL) hasJianliDanwei {
  return !!hasJianliDanwei_;
}
- (void) setHasJianliDanwei:(BOOL) _value_ {
  hasJianliDanwei_ = !!_value_;
}
@synthesize jianliDanwei;
- (BOOL) hasFenbaoDanwei {
  return !!hasFenbaoDanwei_;
}
- (void) setHasFenbaoDanwei:(BOOL) _value_ {
  hasFenbaoDanwei_ = !!_value_;
}
@synthesize fenbaoDanwei;
- (BOOL) hasLat {
  return !!hasLat_;
}
- (void) setHasLat:(BOOL) _value_ {
  hasLat_ = !!_value_;
}
@synthesize lat;
- (BOOL) hasLon {
  return !!hasLon_;
}
- (void) setHasLon:(BOOL) _value_ {
  hasLon_ = !!_value_;
}
@synthesize lon;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasOtherInfo {
  return !!hasOtherInfo_;
}
- (void) setHasOtherInfo:(BOOL) _value_ {
  hasOtherInfo_ = !!_value_;
}
@synthesize otherInfo;
- (BOOL) hasSmsMsg {
  return !!hasSmsMsg_;
}
- (void) setHasSmsMsg:(BOOL) _value_ {
  hasSmsMsg_ = !!_value_;
}
@synthesize smsMsg;
@synthesize ownerTasksArray;
@dynamic ownerTasks;
- (BOOL) hasOwnerTasksCnt {
  return !!hasOwnerTasksCnt_;
}
- (void) setHasOwnerTasksCnt:(BOOL) _value_ {
  hasOwnerTasksCnt_ = !!_value_;
}
@synthesize ownerTasksCnt;
- (BOOL) hasAddTime {
  return !!hasAddTime_;
}
- (void) setHasAddTime:(BOOL) _value_ {
  hasAddTime_ = !!_value_;
}
@synthesize addTime;
- (BOOL) hasCreaterUin {
  return !!hasCreaterUin_;
}
- (void) setHasCreaterUin:(BOOL) _value_ {
  hasCreaterUin_ = !!_value_;
}
@synthesize createrUin;
- (BOOL) hasWeather {
  return !!hasWeather_;
}
- (void) setHasWeather:(BOOL) _value_ {
  hasWeather_ = !!_value_;
}
@synthesize weather;
- (BOOL) hasPrjMyJob {
  return !!hasPrjMyJob_;
}
- (void) setHasPrjMyJob:(BOOL) _value_ {
  hasPrjMyJob_ = !!_value_;
}
@synthesize prjMyJob;
- (BOOL) hasOwnerAddTime {
  return !!hasOwnerAddTime_;
}
- (void) setHasOwnerAddTime:(BOOL) _value_ {
  hasOwnerAddTime_ = !!_value_;
}
@synthesize ownerAddTime;
- (BOOL) hasFloatFloorArea {
  return !!hasFloatFloorArea_;
}
- (void) setHasFloatFloorArea:(BOOL) _value_ {
  hasFloatFloorArea_ = !!_value_;
}
@synthesize floatFloorArea;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjId = @"";
    self.prjName = @"";
    self.prjType = 0;
    self.prjImage = @"";
    self.groupId = @"";
    self.province = @"";
    self.city = @"";
    self.prjAddress = @"";
    self.memberCount = 0;
    self.floorArea = 0;
    self.prjBegin = 0;
    self.prjEnd = 0;
    self.jianzhuDanwei = @"";
    self.shigongDanwei = @"";
    self.jianliDanwei = @"";
    self.fenbaoDanwei = @"";
    self.lat = 0;
    self.lon = 0;
    self.jobType = @"";
    self.otherInfo = @"";
    self.smsMsg = @"";
    self.ownerTasksCnt = 0;
    self.addTime = 0;
    self.createrUin = 0;
    self.weather = [PbPrjWeatherBase defaultInstance];
    self.prjMyJob = @"";
    self.ownerAddTime = 0;
    self.floatFloorArea = 0;
  }
  return self;
}
static PbPrjInfo* defaultPbPrjInfoInstance = nil;
+ (void) initialize {
  if (self == [PbPrjInfo class]) {
    defaultPbPrjInfoInstance = [[PbPrjInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjInfoInstance;
}
- (NSArray *)ownerTasks {
  return ownerTasksArray;
}
- (PbPrjTask*)ownerTasksAtIndex:(NSUInteger)index {
  return [ownerTasksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjId) {
    [output writeString:1 value:self.prjId];
  }
  if (self.hasPrjName) {
    [output writeString:2 value:self.prjName];
  }
  if (self.hasPrjType) {
    [output writeInt32:3 value:self.prjType];
  }
  if (self.hasPrjImage) {
    [output writeString:4 value:self.prjImage];
  }
  if (self.hasGroupId) {
    [output writeString:5 value:self.groupId];
  }
  if (self.hasProvince) {
    [output writeString:6 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:7 value:self.city];
  }
  if (self.hasPrjAddress) {
    [output writeString:8 value:self.prjAddress];
  }
  if (self.hasMemberCount) {
    [output writeInt32:9 value:self.memberCount];
  }
  if (self.hasFloorArea) {
    [output writeInt32:10 value:self.floorArea];
  }
  if (self.hasPrjBegin) {
    [output writeInt32:11 value:self.prjBegin];
  }
  if (self.hasPrjEnd) {
    [output writeInt32:12 value:self.prjEnd];
  }
  if (self.hasJianzhuDanwei) {
    [output writeString:13 value:self.jianzhuDanwei];
  }
  if (self.hasShigongDanwei) {
    [output writeString:14 value:self.shigongDanwei];
  }
  if (self.hasJianliDanwei) {
    [output writeString:15 value:self.jianliDanwei];
  }
  if (self.hasFenbaoDanwei) {
    [output writeString:16 value:self.fenbaoDanwei];
  }
  if (self.hasLat) {
    [output writeDouble:17 value:self.lat];
  }
  if (self.hasLon) {
    [output writeDouble:18 value:self.lon];
  }
  if (self.hasJobType) {
    [output writeString:19 value:self.jobType];
  }
  if (self.hasOtherInfo) {
    [output writeString:20 value:self.otherInfo];
  }
  if (self.hasSmsMsg) {
    [output writeString:21 value:self.smsMsg];
  }
  [self.ownerTasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:22 value:element];
  }];
  if (self.hasOwnerTasksCnt) {
    [output writeInt32:23 value:self.ownerTasksCnt];
  }
  if (self.hasAddTime) {
    [output writeInt32:24 value:self.addTime];
  }
  if (self.hasCreaterUin) {
    [output writeInt32:25 value:self.createrUin];
  }
  if (self.hasWeather) {
    [output writeMessage:26 value:self.weather];
  }
  if (self.hasPrjMyJob) {
    [output writeString:27 value:self.prjMyJob];
  }
  if (self.hasOwnerAddTime) {
    [output writeInt32:28 value:self.ownerAddTime];
  }
  if (self.hasFloatFloorArea) {
    [output writeFloat:29 value:self.floatFloorArea];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjId) {
    size_ += computeStringSize(1, self.prjId);
  }
  if (self.hasPrjName) {
    size_ += computeStringSize(2, self.prjName);
  }
  if (self.hasPrjType) {
    size_ += computeInt32Size(3, self.prjType);
  }
  if (self.hasPrjImage) {
    size_ += computeStringSize(4, self.prjImage);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(5, self.groupId);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(6, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(7, self.city);
  }
  if (self.hasPrjAddress) {
    size_ += computeStringSize(8, self.prjAddress);
  }
  if (self.hasMemberCount) {
    size_ += computeInt32Size(9, self.memberCount);
  }
  if (self.hasFloorArea) {
    size_ += computeInt32Size(10, self.floorArea);
  }
  if (self.hasPrjBegin) {
    size_ += computeInt32Size(11, self.prjBegin);
  }
  if (self.hasPrjEnd) {
    size_ += computeInt32Size(12, self.prjEnd);
  }
  if (self.hasJianzhuDanwei) {
    size_ += computeStringSize(13, self.jianzhuDanwei);
  }
  if (self.hasShigongDanwei) {
    size_ += computeStringSize(14, self.shigongDanwei);
  }
  if (self.hasJianliDanwei) {
    size_ += computeStringSize(15, self.jianliDanwei);
  }
  if (self.hasFenbaoDanwei) {
    size_ += computeStringSize(16, self.fenbaoDanwei);
  }
  if (self.hasLat) {
    size_ += computeDoubleSize(17, self.lat);
  }
  if (self.hasLon) {
    size_ += computeDoubleSize(18, self.lon);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(19, self.jobType);
  }
  if (self.hasOtherInfo) {
    size_ += computeStringSize(20, self.otherInfo);
  }
  if (self.hasSmsMsg) {
    size_ += computeStringSize(21, self.smsMsg);
  }
  [self.ownerTasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(22, element);
  }];
  if (self.hasOwnerTasksCnt) {
    size_ += computeInt32Size(23, self.ownerTasksCnt);
  }
  if (self.hasAddTime) {
    size_ += computeInt32Size(24, self.addTime);
  }
  if (self.hasCreaterUin) {
    size_ += computeInt32Size(25, self.createrUin);
  }
  if (self.hasWeather) {
    size_ += computeMessageSize(26, self.weather);
  }
  if (self.hasPrjMyJob) {
    size_ += computeStringSize(27, self.prjMyJob);
  }
  if (self.hasOwnerAddTime) {
    size_ += computeInt32Size(28, self.ownerAddTime);
  }
  if (self.hasFloatFloorArea) {
    size_ += computeFloatSize(29, self.floatFloorArea);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjInfo*) parseFromData:(NSData*) data {
  return (PbPrjInfo*)[[[PbPrjInfo builder] mergeFromData:data] build];
}
+ (PbPrjInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjInfo*)[[[PbPrjInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjInfo*)[[[PbPrjInfo builder] mergeFromInputStream:input] build];
}
+ (PbPrjInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjInfo*)[[[PbPrjInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjInfo*)[[[PbPrjInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjInfo*)[[[PbPrjInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjInfoBuilder*) builder {
  return [[PbPrjInfoBuilder alloc] init];
}
+ (PbPrjInfoBuilder*) builderWithPrototype:(PbPrjInfo*) prototype {
  return [[PbPrjInfo builder] mergeFrom:prototype];
}
- (PbPrjInfoBuilder*) builder {
  return [PbPrjInfo builder];
}
- (PbPrjInfoBuilder*) toBuilder {
  return [PbPrjInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasPrjName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjName", self.prjName];
  }
  if (self.hasPrjType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjType", [NSNumber numberWithInteger:self.prjType]];
  }
  if (self.hasPrjImage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjImage", self.prjImage];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  if (self.hasPrjAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjAddress", self.prjAddress];
  }
  if (self.hasMemberCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberCount", [NSNumber numberWithInteger:self.memberCount]];
  }
  if (self.hasFloorArea) {
    [output appendFormat:@"%@%@: %@\n", indent, @"floorArea", [NSNumber numberWithInteger:self.floorArea]];
  }
  if (self.hasPrjBegin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjBegin", [NSNumber numberWithInteger:self.prjBegin]];
  }
  if (self.hasPrjEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjEnd", [NSNumber numberWithInteger:self.prjEnd]];
  }
  if (self.hasJianzhuDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jianzhuDanwei", self.jianzhuDanwei];
  }
  if (self.hasShigongDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shigongDanwei", self.shigongDanwei];
  }
  if (self.hasJianliDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jianliDanwei", self.jianliDanwei];
  }
  if (self.hasFenbaoDanwei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fenbaoDanwei", self.fenbaoDanwei];
  }
  if (self.hasLat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lat", [NSNumber numberWithDouble:self.lat]];
  }
  if (self.hasLon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lon", [NSNumber numberWithDouble:self.lon]];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasOtherInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"otherInfo", self.otherInfo];
  }
  if (self.hasSmsMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"smsMsg", self.smsMsg];
  }
  [self.ownerTasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ownerTasks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasOwnerTasksCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ownerTasksCnt", [NSNumber numberWithInteger:self.ownerTasksCnt]];
  }
  if (self.hasAddTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"addTime", [NSNumber numberWithInteger:self.addTime]];
  }
  if (self.hasCreaterUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createrUin", [NSNumber numberWithInteger:self.createrUin]];
  }
  if (self.hasWeather) {
    [output appendFormat:@"%@%@ {\n", indent, @"weather"];
    [self.weather writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPrjMyJob) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjMyJob", self.prjMyJob];
  }
  if (self.hasOwnerAddTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ownerAddTime", [NSNumber numberWithInteger:self.ownerAddTime]];
  }
  if (self.hasFloatFloorArea) {
    [output appendFormat:@"%@%@: %@\n", indent, @"floatFloorArea", [NSNumber numberWithFloat:self.floatFloorArea]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasPrjName) {
    [dictionary setObject: self.prjName forKey: @"prjName"];
  }
  if (self.hasPrjType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjType] forKey: @"prjType"];
  }
  if (self.hasPrjImage) {
    [dictionary setObject: self.prjImage forKey: @"prjImage"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasProvince) {
    [dictionary setObject: self.province forKey: @"province"];
  }
  if (self.hasCity) {
    [dictionary setObject: self.city forKey: @"city"];
  }
  if (self.hasPrjAddress) {
    [dictionary setObject: self.prjAddress forKey: @"prjAddress"];
  }
  if (self.hasMemberCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.memberCount] forKey: @"memberCount"];
  }
  if (self.hasFloorArea) {
    [dictionary setObject: [NSNumber numberWithInteger:self.floorArea] forKey: @"floorArea"];
  }
  if (self.hasPrjBegin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjBegin] forKey: @"prjBegin"];
  }
  if (self.hasPrjEnd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjEnd] forKey: @"prjEnd"];
  }
  if (self.hasJianzhuDanwei) {
    [dictionary setObject: self.jianzhuDanwei forKey: @"jianzhuDanwei"];
  }
  if (self.hasShigongDanwei) {
    [dictionary setObject: self.shigongDanwei forKey: @"shigongDanwei"];
  }
  if (self.hasJianliDanwei) {
    [dictionary setObject: self.jianliDanwei forKey: @"jianliDanwei"];
  }
  if (self.hasFenbaoDanwei) {
    [dictionary setObject: self.fenbaoDanwei forKey: @"fenbaoDanwei"];
  }
  if (self.hasLat) {
    [dictionary setObject: [NSNumber numberWithDouble:self.lat] forKey: @"lat"];
  }
  if (self.hasLon) {
    [dictionary setObject: [NSNumber numberWithDouble:self.lon] forKey: @"lon"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasOtherInfo) {
    [dictionary setObject: self.otherInfo forKey: @"otherInfo"];
  }
  if (self.hasSmsMsg) {
    [dictionary setObject: self.smsMsg forKey: @"smsMsg"];
  }
  for (PbPrjTask* element in self.ownerTasksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"ownerTasks"];
  }
  if (self.hasOwnerTasksCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ownerTasksCnt] forKey: @"ownerTasksCnt"];
  }
  if (self.hasAddTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.addTime] forKey: @"addTime"];
  }
  if (self.hasCreaterUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.createrUin] forKey: @"createrUin"];
  }
  if (self.hasWeather) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.weather storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"weather"];
  }
  if (self.hasPrjMyJob) {
    [dictionary setObject: self.prjMyJob forKey: @"prjMyJob"];
  }
  if (self.hasOwnerAddTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ownerAddTime] forKey: @"ownerAddTime"];
  }
  if (self.hasFloatFloorArea) {
    [dictionary setObject: [NSNumber numberWithFloat:self.floatFloorArea] forKey: @"floatFloorArea"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjInfo class]]) {
    return NO;
  }
  PbPrjInfo *otherMessage = other;
  return
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasPrjName == otherMessage.hasPrjName &&
      (!self.hasPrjName || [self.prjName isEqual:otherMessage.prjName]) &&
      self.hasPrjType == otherMessage.hasPrjType &&
      (!self.hasPrjType || self.prjType == otherMessage.prjType) &&
      self.hasPrjImage == otherMessage.hasPrjImage &&
      (!self.hasPrjImage || [self.prjImage isEqual:otherMessage.prjImage]) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      self.hasPrjAddress == otherMessage.hasPrjAddress &&
      (!self.hasPrjAddress || [self.prjAddress isEqual:otherMessage.prjAddress]) &&
      self.hasMemberCount == otherMessage.hasMemberCount &&
      (!self.hasMemberCount || self.memberCount == otherMessage.memberCount) &&
      self.hasFloorArea == otherMessage.hasFloorArea &&
      (!self.hasFloorArea || self.floorArea == otherMessage.floorArea) &&
      self.hasPrjBegin == otherMessage.hasPrjBegin &&
      (!self.hasPrjBegin || self.prjBegin == otherMessage.prjBegin) &&
      self.hasPrjEnd == otherMessage.hasPrjEnd &&
      (!self.hasPrjEnd || self.prjEnd == otherMessage.prjEnd) &&
      self.hasJianzhuDanwei == otherMessage.hasJianzhuDanwei &&
      (!self.hasJianzhuDanwei || [self.jianzhuDanwei isEqual:otherMessage.jianzhuDanwei]) &&
      self.hasShigongDanwei == otherMessage.hasShigongDanwei &&
      (!self.hasShigongDanwei || [self.shigongDanwei isEqual:otherMessage.shigongDanwei]) &&
      self.hasJianliDanwei == otherMessage.hasJianliDanwei &&
      (!self.hasJianliDanwei || [self.jianliDanwei isEqual:otherMessage.jianliDanwei]) &&
      self.hasFenbaoDanwei == otherMessage.hasFenbaoDanwei &&
      (!self.hasFenbaoDanwei || [self.fenbaoDanwei isEqual:otherMessage.fenbaoDanwei]) &&
      self.hasLat == otherMessage.hasLat &&
      (!self.hasLat || self.lat == otherMessage.lat) &&
      self.hasLon == otherMessage.hasLon &&
      (!self.hasLon || self.lon == otherMessage.lon) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasOtherInfo == otherMessage.hasOtherInfo &&
      (!self.hasOtherInfo || [self.otherInfo isEqual:otherMessage.otherInfo]) &&
      self.hasSmsMsg == otherMessage.hasSmsMsg &&
      (!self.hasSmsMsg || [self.smsMsg isEqual:otherMessage.smsMsg]) &&
      [self.ownerTasksArray isEqualToArray:otherMessage.ownerTasksArray] &&
      self.hasOwnerTasksCnt == otherMessage.hasOwnerTasksCnt &&
      (!self.hasOwnerTasksCnt || self.ownerTasksCnt == otherMessage.ownerTasksCnt) &&
      self.hasAddTime == otherMessage.hasAddTime &&
      (!self.hasAddTime || self.addTime == otherMessage.addTime) &&
      self.hasCreaterUin == otherMessage.hasCreaterUin &&
      (!self.hasCreaterUin || self.createrUin == otherMessage.createrUin) &&
      self.hasWeather == otherMessage.hasWeather &&
      (!self.hasWeather || [self.weather isEqual:otherMessage.weather]) &&
      self.hasPrjMyJob == otherMessage.hasPrjMyJob &&
      (!self.hasPrjMyJob || [self.prjMyJob isEqual:otherMessage.prjMyJob]) &&
      self.hasOwnerAddTime == otherMessage.hasOwnerAddTime &&
      (!self.hasOwnerAddTime || self.ownerAddTime == otherMessage.ownerAddTime) &&
      self.hasFloatFloorArea == otherMessage.hasFloatFloorArea &&
      (!self.hasFloatFloorArea || self.floatFloorArea == otherMessage.floatFloorArea) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasPrjName) {
    hashCode = hashCode * 31 + [self.prjName hash];
  }
  if (self.hasPrjType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjType] hash];
  }
  if (self.hasPrjImage) {
    hashCode = hashCode * 31 + [self.prjImage hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  if (self.hasPrjAddress) {
    hashCode = hashCode * 31 + [self.prjAddress hash];
  }
  if (self.hasMemberCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.memberCount] hash];
  }
  if (self.hasFloorArea) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.floorArea] hash];
  }
  if (self.hasPrjBegin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjBegin] hash];
  }
  if (self.hasPrjEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjEnd] hash];
  }
  if (self.hasJianzhuDanwei) {
    hashCode = hashCode * 31 + [self.jianzhuDanwei hash];
  }
  if (self.hasShigongDanwei) {
    hashCode = hashCode * 31 + [self.shigongDanwei hash];
  }
  if (self.hasJianliDanwei) {
    hashCode = hashCode * 31 + [self.jianliDanwei hash];
  }
  if (self.hasFenbaoDanwei) {
    hashCode = hashCode * 31 + [self.fenbaoDanwei hash];
  }
  if (self.hasLat) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.lat] hash];
  }
  if (self.hasLon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.lon] hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasOtherInfo) {
    hashCode = hashCode * 31 + [self.otherInfo hash];
  }
  if (self.hasSmsMsg) {
    hashCode = hashCode * 31 + [self.smsMsg hash];
  }
  [self.ownerTasksArray enumerateObjectsUsingBlock:^(PbPrjTask *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasOwnerTasksCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ownerTasksCnt] hash];
  }
  if (self.hasAddTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.addTime] hash];
  }
  if (self.hasCreaterUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.createrUin] hash];
  }
  if (self.hasWeather) {
    hashCode = hashCode * 31 + [self.weather hash];
  }
  if (self.hasPrjMyJob) {
    hashCode = hashCode * 31 + [self.prjMyJob hash];
  }
  if (self.hasOwnerAddTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ownerAddTime] hash];
  }
  if (self.hasFloatFloorArea) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.floatFloorArea] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjInfoBuilder()
@property (strong) PbPrjInfo* resultPbPrjInfo;
@end

@implementation PbPrjInfoBuilder
@synthesize resultPbPrjInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjInfo = [[PbPrjInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjInfo;
}
- (PbPrjInfoBuilder*) clear {
  self.resultPbPrjInfo = [[PbPrjInfo alloc] init];
  return self;
}
- (PbPrjInfoBuilder*) clone {
  return [PbPrjInfo builderWithPrototype:resultPbPrjInfo];
}
- (PbPrjInfo*) defaultInstance {
  return [PbPrjInfo defaultInstance];
}
- (PbPrjInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjInfo*) buildPartial {
  PbPrjInfo* returnMe = resultPbPrjInfo;
  self.resultPbPrjInfo = nil;
  return returnMe;
}
- (PbPrjInfoBuilder*) mergeFrom:(PbPrjInfo*) other {
  if (other == [PbPrjInfo defaultInstance]) {
    return self;
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasPrjName) {
    [self setPrjName:other.prjName];
  }
  if (other.hasPrjType) {
    [self setPrjType:other.prjType];
  }
  if (other.hasPrjImage) {
    [self setPrjImage:other.prjImage];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasPrjAddress) {
    [self setPrjAddress:other.prjAddress];
  }
  if (other.hasMemberCount) {
    [self setMemberCount:other.memberCount];
  }
  if (other.hasFloorArea) {
    [self setFloorArea:other.floorArea];
  }
  if (other.hasPrjBegin) {
    [self setPrjBegin:other.prjBegin];
  }
  if (other.hasPrjEnd) {
    [self setPrjEnd:other.prjEnd];
  }
  if (other.hasJianzhuDanwei) {
    [self setJianzhuDanwei:other.jianzhuDanwei];
  }
  if (other.hasShigongDanwei) {
    [self setShigongDanwei:other.shigongDanwei];
  }
  if (other.hasJianliDanwei) {
    [self setJianliDanwei:other.jianliDanwei];
  }
  if (other.hasFenbaoDanwei) {
    [self setFenbaoDanwei:other.fenbaoDanwei];
  }
  if (other.hasLat) {
    [self setLat:other.lat];
  }
  if (other.hasLon) {
    [self setLon:other.lon];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasOtherInfo) {
    [self setOtherInfo:other.otherInfo];
  }
  if (other.hasSmsMsg) {
    [self setSmsMsg:other.smsMsg];
  }
  if (other.ownerTasksArray.count > 0) {
    if (resultPbPrjInfo.ownerTasksArray == nil) {
      resultPbPrjInfo.ownerTasksArray = [[NSMutableArray alloc] initWithArray:other.ownerTasksArray];
    } else {
      [resultPbPrjInfo.ownerTasksArray addObjectsFromArray:other.ownerTasksArray];
    }
  }
  if (other.hasOwnerTasksCnt) {
    [self setOwnerTasksCnt:other.ownerTasksCnt];
  }
  if (other.hasAddTime) {
    [self setAddTime:other.addTime];
  }
  if (other.hasCreaterUin) {
    [self setCreaterUin:other.createrUin];
  }
  if (other.hasWeather) {
    [self mergeWeather:other.weather];
  }
  if (other.hasPrjMyJob) {
    [self setPrjMyJob:other.prjMyJob];
  }
  if (other.hasOwnerAddTime) {
    [self setOwnerAddTime:other.ownerAddTime];
  }
  if (other.hasFloatFloorArea) {
    [self setFloatFloorArea:other.floatFloorArea];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjId:[input readString]];
        break;
      }
      case 18: {
        [self setPrjName:[input readString]];
        break;
      }
      case 24: {
        [self setPrjType:[input readInt32]];
        break;
      }
      case 34: {
        [self setPrjImage:[input readString]];
        break;
      }
      case 42: {
        [self setGroupId:[input readString]];
        break;
      }
      case 50: {
        [self setProvince:[input readString]];
        break;
      }
      case 58: {
        [self setCity:[input readString]];
        break;
      }
      case 66: {
        [self setPrjAddress:[input readString]];
        break;
      }
      case 72: {
        [self setMemberCount:[input readInt32]];
        break;
      }
      case 80: {
        [self setFloorArea:[input readInt32]];
        break;
      }
      case 88: {
        [self setPrjBegin:[input readInt32]];
        break;
      }
      case 96: {
        [self setPrjEnd:[input readInt32]];
        break;
      }
      case 106: {
        [self setJianzhuDanwei:[input readString]];
        break;
      }
      case 114: {
        [self setShigongDanwei:[input readString]];
        break;
      }
      case 122: {
        [self setJianliDanwei:[input readString]];
        break;
      }
      case 130: {
        [self setFenbaoDanwei:[input readString]];
        break;
      }
      case 137: {
        [self setLat:[input readDouble]];
        break;
      }
      case 145: {
        [self setLon:[input readDouble]];
        break;
      }
      case 154: {
        [self setJobType:[input readString]];
        break;
      }
      case 162: {
        [self setOtherInfo:[input readString]];
        break;
      }
      case 170: {
        [self setSmsMsg:[input readString]];
        break;
      }
      case 178: {
        PbPrjTaskBuilder* subBuilder = [PbPrjTask builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addOwnerTasks:[subBuilder buildPartial]];
        break;
      }
      case 184: {
        [self setOwnerTasksCnt:[input readInt32]];
        break;
      }
      case 192: {
        [self setAddTime:[input readInt32]];
        break;
      }
      case 200: {
        [self setCreaterUin:[input readInt32]];
        break;
      }
      case 210: {
        PbPrjWeatherBaseBuilder* subBuilder = [PbPrjWeatherBase builder];
        if (self.hasWeather) {
          [subBuilder mergeFrom:self.weather];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWeather:[subBuilder buildPartial]];
        break;
      }
      case 218: {
        [self setPrjMyJob:[input readString]];
        break;
      }
      case 224: {
        [self setOwnerAddTime:[input readInt32]];
        break;
      }
      case 237: {
        [self setFloatFloorArea:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjId {
  return resultPbPrjInfo.hasPrjId;
}
- (NSString*) prjId {
  return resultPbPrjInfo.prjId;
}
- (PbPrjInfoBuilder*) setPrjId:(NSString*) value {
  resultPbPrjInfo.hasPrjId = YES;
  resultPbPrjInfo.prjId = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjId {
  resultPbPrjInfo.hasPrjId = NO;
  resultPbPrjInfo.prjId = @"";
  return self;
}
- (BOOL) hasPrjName {
  return resultPbPrjInfo.hasPrjName;
}
- (NSString*) prjName {
  return resultPbPrjInfo.prjName;
}
- (PbPrjInfoBuilder*) setPrjName:(NSString*) value {
  resultPbPrjInfo.hasPrjName = YES;
  resultPbPrjInfo.prjName = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjName {
  resultPbPrjInfo.hasPrjName = NO;
  resultPbPrjInfo.prjName = @"";
  return self;
}
- (BOOL) hasPrjType {
  return resultPbPrjInfo.hasPrjType;
}
- (SInt32) prjType {
  return resultPbPrjInfo.prjType;
}
- (PbPrjInfoBuilder*) setPrjType:(SInt32) value {
  resultPbPrjInfo.hasPrjType = YES;
  resultPbPrjInfo.prjType = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjType {
  resultPbPrjInfo.hasPrjType = NO;
  resultPbPrjInfo.prjType = 0;
  return self;
}
- (BOOL) hasPrjImage {
  return resultPbPrjInfo.hasPrjImage;
}
- (NSString*) prjImage {
  return resultPbPrjInfo.prjImage;
}
- (PbPrjInfoBuilder*) setPrjImage:(NSString*) value {
  resultPbPrjInfo.hasPrjImage = YES;
  resultPbPrjInfo.prjImage = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjImage {
  resultPbPrjInfo.hasPrjImage = NO;
  resultPbPrjInfo.prjImage = @"";
  return self;
}
- (BOOL) hasGroupId {
  return resultPbPrjInfo.hasGroupId;
}
- (NSString*) groupId {
  return resultPbPrjInfo.groupId;
}
- (PbPrjInfoBuilder*) setGroupId:(NSString*) value {
  resultPbPrjInfo.hasGroupId = YES;
  resultPbPrjInfo.groupId = value;
  return self;
}
- (PbPrjInfoBuilder*) clearGroupId {
  resultPbPrjInfo.hasGroupId = NO;
  resultPbPrjInfo.groupId = @"";
  return self;
}
- (BOOL) hasProvince {
  return resultPbPrjInfo.hasProvince;
}
- (NSString*) province {
  return resultPbPrjInfo.province;
}
- (PbPrjInfoBuilder*) setProvince:(NSString*) value {
  resultPbPrjInfo.hasProvince = YES;
  resultPbPrjInfo.province = value;
  return self;
}
- (PbPrjInfoBuilder*) clearProvince {
  resultPbPrjInfo.hasProvince = NO;
  resultPbPrjInfo.province = @"";
  return self;
}
- (BOOL) hasCity {
  return resultPbPrjInfo.hasCity;
}
- (NSString*) city {
  return resultPbPrjInfo.city;
}
- (PbPrjInfoBuilder*) setCity:(NSString*) value {
  resultPbPrjInfo.hasCity = YES;
  resultPbPrjInfo.city = value;
  return self;
}
- (PbPrjInfoBuilder*) clearCity {
  resultPbPrjInfo.hasCity = NO;
  resultPbPrjInfo.city = @"";
  return self;
}
- (BOOL) hasPrjAddress {
  return resultPbPrjInfo.hasPrjAddress;
}
- (NSString*) prjAddress {
  return resultPbPrjInfo.prjAddress;
}
- (PbPrjInfoBuilder*) setPrjAddress:(NSString*) value {
  resultPbPrjInfo.hasPrjAddress = YES;
  resultPbPrjInfo.prjAddress = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjAddress {
  resultPbPrjInfo.hasPrjAddress = NO;
  resultPbPrjInfo.prjAddress = @"";
  return self;
}
- (BOOL) hasMemberCount {
  return resultPbPrjInfo.hasMemberCount;
}
- (SInt32) memberCount {
  return resultPbPrjInfo.memberCount;
}
- (PbPrjInfoBuilder*) setMemberCount:(SInt32) value {
  resultPbPrjInfo.hasMemberCount = YES;
  resultPbPrjInfo.memberCount = value;
  return self;
}
- (PbPrjInfoBuilder*) clearMemberCount {
  resultPbPrjInfo.hasMemberCount = NO;
  resultPbPrjInfo.memberCount = 0;
  return self;
}
- (BOOL) hasFloorArea {
  return resultPbPrjInfo.hasFloorArea;
}
- (SInt32) floorArea {
  return resultPbPrjInfo.floorArea;
}
- (PbPrjInfoBuilder*) setFloorArea:(SInt32) value {
  resultPbPrjInfo.hasFloorArea = YES;
  resultPbPrjInfo.floorArea = value;
  return self;
}
- (PbPrjInfoBuilder*) clearFloorArea {
  resultPbPrjInfo.hasFloorArea = NO;
  resultPbPrjInfo.floorArea = 0;
  return self;
}
- (BOOL) hasPrjBegin {
  return resultPbPrjInfo.hasPrjBegin;
}
- (SInt32) prjBegin {
  return resultPbPrjInfo.prjBegin;
}
- (PbPrjInfoBuilder*) setPrjBegin:(SInt32) value {
  resultPbPrjInfo.hasPrjBegin = YES;
  resultPbPrjInfo.prjBegin = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjBegin {
  resultPbPrjInfo.hasPrjBegin = NO;
  resultPbPrjInfo.prjBegin = 0;
  return self;
}
- (BOOL) hasPrjEnd {
  return resultPbPrjInfo.hasPrjEnd;
}
- (SInt32) prjEnd {
  return resultPbPrjInfo.prjEnd;
}
- (PbPrjInfoBuilder*) setPrjEnd:(SInt32) value {
  resultPbPrjInfo.hasPrjEnd = YES;
  resultPbPrjInfo.prjEnd = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjEnd {
  resultPbPrjInfo.hasPrjEnd = NO;
  resultPbPrjInfo.prjEnd = 0;
  return self;
}
- (BOOL) hasJianzhuDanwei {
  return resultPbPrjInfo.hasJianzhuDanwei;
}
- (NSString*) jianzhuDanwei {
  return resultPbPrjInfo.jianzhuDanwei;
}
- (PbPrjInfoBuilder*) setJianzhuDanwei:(NSString*) value {
  resultPbPrjInfo.hasJianzhuDanwei = YES;
  resultPbPrjInfo.jianzhuDanwei = value;
  return self;
}
- (PbPrjInfoBuilder*) clearJianzhuDanwei {
  resultPbPrjInfo.hasJianzhuDanwei = NO;
  resultPbPrjInfo.jianzhuDanwei = @"";
  return self;
}
- (BOOL) hasShigongDanwei {
  return resultPbPrjInfo.hasShigongDanwei;
}
- (NSString*) shigongDanwei {
  return resultPbPrjInfo.shigongDanwei;
}
- (PbPrjInfoBuilder*) setShigongDanwei:(NSString*) value {
  resultPbPrjInfo.hasShigongDanwei = YES;
  resultPbPrjInfo.shigongDanwei = value;
  return self;
}
- (PbPrjInfoBuilder*) clearShigongDanwei {
  resultPbPrjInfo.hasShigongDanwei = NO;
  resultPbPrjInfo.shigongDanwei = @"";
  return self;
}
- (BOOL) hasJianliDanwei {
  return resultPbPrjInfo.hasJianliDanwei;
}
- (NSString*) jianliDanwei {
  return resultPbPrjInfo.jianliDanwei;
}
- (PbPrjInfoBuilder*) setJianliDanwei:(NSString*) value {
  resultPbPrjInfo.hasJianliDanwei = YES;
  resultPbPrjInfo.jianliDanwei = value;
  return self;
}
- (PbPrjInfoBuilder*) clearJianliDanwei {
  resultPbPrjInfo.hasJianliDanwei = NO;
  resultPbPrjInfo.jianliDanwei = @"";
  return self;
}
- (BOOL) hasFenbaoDanwei {
  return resultPbPrjInfo.hasFenbaoDanwei;
}
- (NSString*) fenbaoDanwei {
  return resultPbPrjInfo.fenbaoDanwei;
}
- (PbPrjInfoBuilder*) setFenbaoDanwei:(NSString*) value {
  resultPbPrjInfo.hasFenbaoDanwei = YES;
  resultPbPrjInfo.fenbaoDanwei = value;
  return self;
}
- (PbPrjInfoBuilder*) clearFenbaoDanwei {
  resultPbPrjInfo.hasFenbaoDanwei = NO;
  resultPbPrjInfo.fenbaoDanwei = @"";
  return self;
}
- (BOOL) hasLat {
  return resultPbPrjInfo.hasLat;
}
- (Float64) lat {
  return resultPbPrjInfo.lat;
}
- (PbPrjInfoBuilder*) setLat:(Float64) value {
  resultPbPrjInfo.hasLat = YES;
  resultPbPrjInfo.lat = value;
  return self;
}
- (PbPrjInfoBuilder*) clearLat {
  resultPbPrjInfo.hasLat = NO;
  resultPbPrjInfo.lat = 0;
  return self;
}
- (BOOL) hasLon {
  return resultPbPrjInfo.hasLon;
}
- (Float64) lon {
  return resultPbPrjInfo.lon;
}
- (PbPrjInfoBuilder*) setLon:(Float64) value {
  resultPbPrjInfo.hasLon = YES;
  resultPbPrjInfo.lon = value;
  return self;
}
- (PbPrjInfoBuilder*) clearLon {
  resultPbPrjInfo.hasLon = NO;
  resultPbPrjInfo.lon = 0;
  return self;
}
- (BOOL) hasJobType {
  return resultPbPrjInfo.hasJobType;
}
- (NSString*) jobType {
  return resultPbPrjInfo.jobType;
}
- (PbPrjInfoBuilder*) setJobType:(NSString*) value {
  resultPbPrjInfo.hasJobType = YES;
  resultPbPrjInfo.jobType = value;
  return self;
}
- (PbPrjInfoBuilder*) clearJobType {
  resultPbPrjInfo.hasJobType = NO;
  resultPbPrjInfo.jobType = @"";
  return self;
}
- (BOOL) hasOtherInfo {
  return resultPbPrjInfo.hasOtherInfo;
}
- (NSString*) otherInfo {
  return resultPbPrjInfo.otherInfo;
}
- (PbPrjInfoBuilder*) setOtherInfo:(NSString*) value {
  resultPbPrjInfo.hasOtherInfo = YES;
  resultPbPrjInfo.otherInfo = value;
  return self;
}
- (PbPrjInfoBuilder*) clearOtherInfo {
  resultPbPrjInfo.hasOtherInfo = NO;
  resultPbPrjInfo.otherInfo = @"";
  return self;
}
- (BOOL) hasSmsMsg {
  return resultPbPrjInfo.hasSmsMsg;
}
- (NSString*) smsMsg {
  return resultPbPrjInfo.smsMsg;
}
- (PbPrjInfoBuilder*) setSmsMsg:(NSString*) value {
  resultPbPrjInfo.hasSmsMsg = YES;
  resultPbPrjInfo.smsMsg = value;
  return self;
}
- (PbPrjInfoBuilder*) clearSmsMsg {
  resultPbPrjInfo.hasSmsMsg = NO;
  resultPbPrjInfo.smsMsg = @"";
  return self;
}
- (NSMutableArray *)ownerTasks {
  return resultPbPrjInfo.ownerTasksArray;
}
- (PbPrjTask*)ownerTasksAtIndex:(NSUInteger)index {
  return [resultPbPrjInfo ownerTasksAtIndex:index];
}
- (PbPrjInfoBuilder *)addOwnerTasks:(PbPrjTask*)value {
  if (resultPbPrjInfo.ownerTasksArray == nil) {
    resultPbPrjInfo.ownerTasksArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjInfo.ownerTasksArray addObject:value];
  return self;
}
- (PbPrjInfoBuilder *)setOwnerTasksArray:(NSArray *)array {
  resultPbPrjInfo.ownerTasksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjInfoBuilder *)clearOwnerTasks {
  resultPbPrjInfo.ownerTasksArray = nil;
  return self;
}
- (BOOL) hasOwnerTasksCnt {
  return resultPbPrjInfo.hasOwnerTasksCnt;
}
- (SInt32) ownerTasksCnt {
  return resultPbPrjInfo.ownerTasksCnt;
}
- (PbPrjInfoBuilder*) setOwnerTasksCnt:(SInt32) value {
  resultPbPrjInfo.hasOwnerTasksCnt = YES;
  resultPbPrjInfo.ownerTasksCnt = value;
  return self;
}
- (PbPrjInfoBuilder*) clearOwnerTasksCnt {
  resultPbPrjInfo.hasOwnerTasksCnt = NO;
  resultPbPrjInfo.ownerTasksCnt = 0;
  return self;
}
- (BOOL) hasAddTime {
  return resultPbPrjInfo.hasAddTime;
}
- (SInt32) addTime {
  return resultPbPrjInfo.addTime;
}
- (PbPrjInfoBuilder*) setAddTime:(SInt32) value {
  resultPbPrjInfo.hasAddTime = YES;
  resultPbPrjInfo.addTime = value;
  return self;
}
- (PbPrjInfoBuilder*) clearAddTime {
  resultPbPrjInfo.hasAddTime = NO;
  resultPbPrjInfo.addTime = 0;
  return self;
}
- (BOOL) hasCreaterUin {
  return resultPbPrjInfo.hasCreaterUin;
}
- (SInt32) createrUin {
  return resultPbPrjInfo.createrUin;
}
- (PbPrjInfoBuilder*) setCreaterUin:(SInt32) value {
  resultPbPrjInfo.hasCreaterUin = YES;
  resultPbPrjInfo.createrUin = value;
  return self;
}
- (PbPrjInfoBuilder*) clearCreaterUin {
  resultPbPrjInfo.hasCreaterUin = NO;
  resultPbPrjInfo.createrUin = 0;
  return self;
}
- (BOOL) hasWeather {
  return resultPbPrjInfo.hasWeather;
}
- (PbPrjWeatherBase*) weather {
  return resultPbPrjInfo.weather;
}
- (PbPrjInfoBuilder*) setWeather:(PbPrjWeatherBase*) value {
  resultPbPrjInfo.hasWeather = YES;
  resultPbPrjInfo.weather = value;
  return self;
}
- (PbPrjInfoBuilder*) setWeatherBuilder:(PbPrjWeatherBaseBuilder*) builderForValue {
  return [self setWeather:[builderForValue build]];
}
- (PbPrjInfoBuilder*) mergeWeather:(PbPrjWeatherBase*) value {
  if (resultPbPrjInfo.hasWeather &&
      resultPbPrjInfo.weather != [PbPrjWeatherBase defaultInstance]) {
    resultPbPrjInfo.weather =
      [[[PbPrjWeatherBase builderWithPrototype:resultPbPrjInfo.weather] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjInfo.weather = value;
  }
  resultPbPrjInfo.hasWeather = YES;
  return self;
}
- (PbPrjInfoBuilder*) clearWeather {
  resultPbPrjInfo.hasWeather = NO;
  resultPbPrjInfo.weather = [PbPrjWeatherBase defaultInstance];
  return self;
}
- (BOOL) hasPrjMyJob {
  return resultPbPrjInfo.hasPrjMyJob;
}
- (NSString*) prjMyJob {
  return resultPbPrjInfo.prjMyJob;
}
- (PbPrjInfoBuilder*) setPrjMyJob:(NSString*) value {
  resultPbPrjInfo.hasPrjMyJob = YES;
  resultPbPrjInfo.prjMyJob = value;
  return self;
}
- (PbPrjInfoBuilder*) clearPrjMyJob {
  resultPbPrjInfo.hasPrjMyJob = NO;
  resultPbPrjInfo.prjMyJob = @"";
  return self;
}
- (BOOL) hasOwnerAddTime {
  return resultPbPrjInfo.hasOwnerAddTime;
}
- (SInt32) ownerAddTime {
  return resultPbPrjInfo.ownerAddTime;
}
- (PbPrjInfoBuilder*) setOwnerAddTime:(SInt32) value {
  resultPbPrjInfo.hasOwnerAddTime = YES;
  resultPbPrjInfo.ownerAddTime = value;
  return self;
}
- (PbPrjInfoBuilder*) clearOwnerAddTime {
  resultPbPrjInfo.hasOwnerAddTime = NO;
  resultPbPrjInfo.ownerAddTime = 0;
  return self;
}
- (BOOL) hasFloatFloorArea {
  return resultPbPrjInfo.hasFloatFloorArea;
}
- (Float32) floatFloorArea {
  return resultPbPrjInfo.floatFloorArea;
}
- (PbPrjInfoBuilder*) setFloatFloorArea:(Float32) value {
  resultPbPrjInfo.hasFloatFloorArea = YES;
  resultPbPrjInfo.floatFloorArea = value;
  return self;
}
- (PbPrjInfoBuilder*) clearFloatFloorArea {
  resultPbPrjInfo.hasFloatFloorArea = NO;
  resultPbPrjInfo.floatFloorArea = 0;
  return self;
}
@end

@interface PbPrjLog ()
@property (strong) NSString* logContent;
@property SInt32 addTime;
@end

@implementation PbPrjLog

- (BOOL) hasLogContent {
  return !!hasLogContent_;
}
- (void) setHasLogContent:(BOOL) _value_ {
  hasLogContent_ = !!_value_;
}
@synthesize logContent;
- (BOOL) hasAddTime {
  return !!hasAddTime_;
}
- (void) setHasAddTime:(BOOL) _value_ {
  hasAddTime_ = !!_value_;
}
@synthesize addTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.logContent = @"";
    self.addTime = 0;
  }
  return self;
}
static PbPrjLog* defaultPbPrjLogInstance = nil;
+ (void) initialize {
  if (self == [PbPrjLog class]) {
    defaultPbPrjLogInstance = [[PbPrjLog alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjLogInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjLogInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLogContent) {
    [output writeString:1 value:self.logContent];
  }
  if (self.hasAddTime) {
    [output writeInt32:2 value:self.addTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLogContent) {
    size_ += computeStringSize(1, self.logContent);
  }
  if (self.hasAddTime) {
    size_ += computeInt32Size(2, self.addTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjLog*) parseFromData:(NSData*) data {
  return (PbPrjLog*)[[[PbPrjLog builder] mergeFromData:data] build];
}
+ (PbPrjLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjLog*)[[[PbPrjLog builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjLog*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjLog*)[[[PbPrjLog builder] mergeFromInputStream:input] build];
}
+ (PbPrjLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjLog*)[[[PbPrjLog builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjLog*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjLog*)[[[PbPrjLog builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjLog*)[[[PbPrjLog builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjLogBuilder*) builder {
  return [[PbPrjLogBuilder alloc] init];
}
+ (PbPrjLogBuilder*) builderWithPrototype:(PbPrjLog*) prototype {
  return [[PbPrjLog builder] mergeFrom:prototype];
}
- (PbPrjLogBuilder*) builder {
  return [PbPrjLog builder];
}
- (PbPrjLogBuilder*) toBuilder {
  return [PbPrjLog builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLogContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"logContent", self.logContent];
  }
  if (self.hasAddTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"addTime", [NSNumber numberWithInteger:self.addTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasLogContent) {
    [dictionary setObject: self.logContent forKey: @"logContent"];
  }
  if (self.hasAddTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.addTime] forKey: @"addTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjLog class]]) {
    return NO;
  }
  PbPrjLog *otherMessage = other;
  return
      self.hasLogContent == otherMessage.hasLogContent &&
      (!self.hasLogContent || [self.logContent isEqual:otherMessage.logContent]) &&
      self.hasAddTime == otherMessage.hasAddTime &&
      (!self.hasAddTime || self.addTime == otherMessage.addTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLogContent) {
    hashCode = hashCode * 31 + [self.logContent hash];
  }
  if (self.hasAddTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.addTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjLogBuilder()
@property (strong) PbPrjLog* resultPbPrjLog;
@end

@implementation PbPrjLogBuilder
@synthesize resultPbPrjLog;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjLog = [[PbPrjLog alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjLog;
}
- (PbPrjLogBuilder*) clear {
  self.resultPbPrjLog = [[PbPrjLog alloc] init];
  return self;
}
- (PbPrjLogBuilder*) clone {
  return [PbPrjLog builderWithPrototype:resultPbPrjLog];
}
- (PbPrjLog*) defaultInstance {
  return [PbPrjLog defaultInstance];
}
- (PbPrjLog*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjLog*) buildPartial {
  PbPrjLog* returnMe = resultPbPrjLog;
  self.resultPbPrjLog = nil;
  return returnMe;
}
- (PbPrjLogBuilder*) mergeFrom:(PbPrjLog*) other {
  if (other == [PbPrjLog defaultInstance]) {
    return self;
  }
  if (other.hasLogContent) {
    [self setLogContent:other.logContent];
  }
  if (other.hasAddTime) {
    [self setAddTime:other.addTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjLogBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjLogBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setLogContent:[input readString]];
        break;
      }
      case 16: {
        [self setAddTime:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasLogContent {
  return resultPbPrjLog.hasLogContent;
}
- (NSString*) logContent {
  return resultPbPrjLog.logContent;
}
- (PbPrjLogBuilder*) setLogContent:(NSString*) value {
  resultPbPrjLog.hasLogContent = YES;
  resultPbPrjLog.logContent = value;
  return self;
}
- (PbPrjLogBuilder*) clearLogContent {
  resultPbPrjLog.hasLogContent = NO;
  resultPbPrjLog.logContent = @"";
  return self;
}
- (BOOL) hasAddTime {
  return resultPbPrjLog.hasAddTime;
}
- (SInt32) addTime {
  return resultPbPrjLog.addTime;
}
- (PbPrjLogBuilder*) setAddTime:(SInt32) value {
  resultPbPrjLog.hasAddTime = YES;
  resultPbPrjLog.addTime = value;
  return self;
}
- (PbPrjLogBuilder*) clearAddTime {
  resultPbPrjLog.hasAddTime = NO;
  resultPbPrjLog.addTime = 0;
  return self;
}
@end

@interface PbPrjPrj ()
@property SInt32 updateType;
@property (strong) NSMutableArray * prjsArray;
@end

@implementation PbPrjPrj

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
@synthesize prjsArray;
@dynamic prjs;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
  }
  return self;
}
static PbPrjPrj* defaultPbPrjPrjInstance = nil;
+ (void) initialize {
  if (self == [PbPrjPrj class]) {
    defaultPbPrjPrjInstance = [[PbPrjPrj alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjPrjInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjPrjInstance;
}
- (NSArray *)prjs {
  return prjsArray;
}
- (PbPrjInfo*)prjsAtIndex:(NSUInteger)index {
  return [prjsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjPrj*) parseFromData:(NSData*) data {
  return (PbPrjPrj*)[[[PbPrjPrj builder] mergeFromData:data] build];
}
+ (PbPrjPrj*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjPrj*)[[[PbPrjPrj builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjPrj*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjPrj*)[[[PbPrjPrj builder] mergeFromInputStream:input] build];
}
+ (PbPrjPrj*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjPrj*)[[[PbPrjPrj builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjPrj*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjPrj*)[[[PbPrjPrj builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjPrj*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjPrj*)[[[PbPrjPrj builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjPrjBuilder*) builder {
  return [[PbPrjPrjBuilder alloc] init];
}
+ (PbPrjPrjBuilder*) builderWithPrototype:(PbPrjPrj*) prototype {
  return [[PbPrjPrj builder] mergeFrom:prototype];
}
- (PbPrjPrjBuilder*) builder {
  return [PbPrjPrj builder];
}
- (PbPrjPrjBuilder*) toBuilder {
  return [PbPrjPrj builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  for (PbPrjInfo* element in self.prjsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjs"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjPrj class]]) {
    return NO;
  }
  PbPrjPrj *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      [self.prjsArray isEqualToArray:otherMessage.prjsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjPrjBuilder()
@property (strong) PbPrjPrj* resultPbPrjPrj;
@end

@implementation PbPrjPrjBuilder
@synthesize resultPbPrjPrj;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjPrj = [[PbPrjPrj alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjPrj;
}
- (PbPrjPrjBuilder*) clear {
  self.resultPbPrjPrj = [[PbPrjPrj alloc] init];
  return self;
}
- (PbPrjPrjBuilder*) clone {
  return [PbPrjPrj builderWithPrototype:resultPbPrjPrj];
}
- (PbPrjPrj*) defaultInstance {
  return [PbPrjPrj defaultInstance];
}
- (PbPrjPrj*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjPrj*) buildPartial {
  PbPrjPrj* returnMe = resultPbPrjPrj;
  self.resultPbPrjPrj = nil;
  return returnMe;
}
- (PbPrjPrjBuilder*) mergeFrom:(PbPrjPrj*) other {
  if (other == [PbPrjPrj defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.prjsArray.count > 0) {
    if (resultPbPrjPrj.prjsArray == nil) {
      resultPbPrjPrj.prjsArray = [[NSMutableArray alloc] initWithArray:other.prjsArray];
    } else {
      [resultPbPrjPrj.prjsArray addObjectsFromArray:other.prjsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjPrjBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjPrjBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        PbPrjInfoBuilder* subBuilder = [PbPrjInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjs:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbPrjPrj.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbPrjPrj.updateType;
}
- (PbPrjPrjBuilder*) setUpdateType:(SInt32) value {
  resultPbPrjPrj.hasUpdateType = YES;
  resultPbPrjPrj.updateType = value;
  return self;
}
- (PbPrjPrjBuilder*) clearUpdateType {
  resultPbPrjPrj.hasUpdateType = NO;
  resultPbPrjPrj.updateType = 0;
  return self;
}
- (NSMutableArray *)prjs {
  return resultPbPrjPrj.prjsArray;
}
- (PbPrjInfo*)prjsAtIndex:(NSUInteger)index {
  return [resultPbPrjPrj prjsAtIndex:index];
}
- (PbPrjPrjBuilder *)addPrjs:(PbPrjInfo*)value {
  if (resultPbPrjPrj.prjsArray == nil) {
    resultPbPrjPrj.prjsArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjPrj.prjsArray addObject:value];
  return self;
}
- (PbPrjPrjBuilder *)setPrjsArray:(NSArray *)array {
  resultPbPrjPrj.prjsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjPrjBuilder *)clearPrjs {
  resultPbPrjPrj.prjsArray = nil;
  return self;
}
@end

@interface PbPrjRecommendInfo ()
@property (strong) PbPrjInfo* info;
@property UInt32 type;
@property SInt32 weight;
@property (strong) NSString* otherInfo;
@end

@implementation PbPrjRecommendInfo

- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value_ {
  hasInfo_ = !!_value_;
}
@synthesize info;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value_ {
  hasWeight_ = !!_value_;
}
@synthesize weight;
- (BOOL) hasOtherInfo {
  return !!hasOtherInfo_;
}
- (void) setHasOtherInfo:(BOOL) _value_ {
  hasOtherInfo_ = !!_value_;
}
@synthesize otherInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.info = [PbPrjInfo defaultInstance];
    self.type = 0;
    self.weight = 0;
    self.otherInfo = @"";
  }
  return self;
}
static PbPrjRecommendInfo* defaultPbPrjRecommendInfoInstance = nil;
+ (void) initialize {
  if (self == [PbPrjRecommendInfo class]) {
    defaultPbPrjRecommendInfoInstance = [[PbPrjRecommendInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjRecommendInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjRecommendInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInfo) {
    [output writeMessage:1 value:self.info];
  }
  if (self.hasType) {
    [output writeUInt32:2 value:self.type];
  }
  if (self.hasWeight) {
    [output writeInt32:3 value:self.weight];
  }
  if (self.hasOtherInfo) {
    [output writeString:4 value:self.otherInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInfo) {
    size_ += computeMessageSize(1, self.info);
  }
  if (self.hasType) {
    size_ += computeUInt32Size(2, self.type);
  }
  if (self.hasWeight) {
    size_ += computeInt32Size(3, self.weight);
  }
  if (self.hasOtherInfo) {
    size_ += computeStringSize(4, self.otherInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjRecommendInfo*) parseFromData:(NSData*) data {
  return (PbPrjRecommendInfo*)[[[PbPrjRecommendInfo builder] mergeFromData:data] build];
}
+ (PbPrjRecommendInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjRecommendInfo*)[[[PbPrjRecommendInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjRecommendInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjRecommendInfo*)[[[PbPrjRecommendInfo builder] mergeFromInputStream:input] build];
}
+ (PbPrjRecommendInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjRecommendInfo*)[[[PbPrjRecommendInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjRecommendInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjRecommendInfo*)[[[PbPrjRecommendInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjRecommendInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjRecommendInfo*)[[[PbPrjRecommendInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjRecommendInfoBuilder*) builder {
  return [[PbPrjRecommendInfoBuilder alloc] init];
}
+ (PbPrjRecommendInfoBuilder*) builderWithPrototype:(PbPrjRecommendInfo*) prototype {
  return [[PbPrjRecommendInfo builder] mergeFrom:prototype];
}
- (PbPrjRecommendInfoBuilder*) builder {
  return [PbPrjRecommendInfo builder];
}
- (PbPrjRecommendInfoBuilder*) toBuilder {
  return [PbPrjRecommendInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"info"];
    [self.info writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weight", [NSNumber numberWithInteger:self.weight]];
  }
  if (self.hasOtherInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"otherInfo", self.otherInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.info storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"info"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasWeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weight] forKey: @"weight"];
  }
  if (self.hasOtherInfo) {
    [dictionary setObject: self.otherInfo forKey: @"otherInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjRecommendInfo class]]) {
    return NO;
  }
  PbPrjRecommendInfo *otherMessage = other;
  return
      self.hasInfo == otherMessage.hasInfo &&
      (!self.hasInfo || [self.info isEqual:otherMessage.info]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasWeight == otherMessage.hasWeight &&
      (!self.hasWeight || self.weight == otherMessage.weight) &&
      self.hasOtherInfo == otherMessage.hasOtherInfo &&
      (!self.hasOtherInfo || [self.otherInfo isEqual:otherMessage.otherInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInfo) {
    hashCode = hashCode * 31 + [self.info hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weight] hash];
  }
  if (self.hasOtherInfo) {
    hashCode = hashCode * 31 + [self.otherInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjRecommendInfoBuilder()
@property (strong) PbPrjRecommendInfo* resultPbPrjRecommendInfo;
@end

@implementation PbPrjRecommendInfoBuilder
@synthesize resultPbPrjRecommendInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjRecommendInfo = [[PbPrjRecommendInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjRecommendInfo;
}
- (PbPrjRecommendInfoBuilder*) clear {
  self.resultPbPrjRecommendInfo = [[PbPrjRecommendInfo alloc] init];
  return self;
}
- (PbPrjRecommendInfoBuilder*) clone {
  return [PbPrjRecommendInfo builderWithPrototype:resultPbPrjRecommendInfo];
}
- (PbPrjRecommendInfo*) defaultInstance {
  return [PbPrjRecommendInfo defaultInstance];
}
- (PbPrjRecommendInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjRecommendInfo*) buildPartial {
  PbPrjRecommendInfo* returnMe = resultPbPrjRecommendInfo;
  self.resultPbPrjRecommendInfo = nil;
  return returnMe;
}
- (PbPrjRecommendInfoBuilder*) mergeFrom:(PbPrjRecommendInfo*) other {
  if (other == [PbPrjRecommendInfo defaultInstance]) {
    return self;
  }
  if (other.hasInfo) {
    [self mergeInfo:other.info];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasOtherInfo) {
    [self setOtherInfo:other.otherInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjRecommendInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjRecommendInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbPrjInfoBuilder* subBuilder = [PbPrjInfo builder];
        if (self.hasInfo) {
          [subBuilder mergeFrom:self.info];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setType:[input readUInt32]];
        break;
      }
      case 24: {
        [self setWeight:[input readInt32]];
        break;
      }
      case 34: {
        [self setOtherInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasInfo {
  return resultPbPrjRecommendInfo.hasInfo;
}
- (PbPrjInfo*) info {
  return resultPbPrjRecommendInfo.info;
}
- (PbPrjRecommendInfoBuilder*) setInfo:(PbPrjInfo*) value {
  resultPbPrjRecommendInfo.hasInfo = YES;
  resultPbPrjRecommendInfo.info = value;
  return self;
}
- (PbPrjRecommendInfoBuilder*) setInfoBuilder:(PbPrjInfoBuilder*) builderForValue {
  return [self setInfo:[builderForValue build]];
}
- (PbPrjRecommendInfoBuilder*) mergeInfo:(PbPrjInfo*) value {
  if (resultPbPrjRecommendInfo.hasInfo &&
      resultPbPrjRecommendInfo.info != [PbPrjInfo defaultInstance]) {
    resultPbPrjRecommendInfo.info =
      [[[PbPrjInfo builderWithPrototype:resultPbPrjRecommendInfo.info] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjRecommendInfo.info = value;
  }
  resultPbPrjRecommendInfo.hasInfo = YES;
  return self;
}
- (PbPrjRecommendInfoBuilder*) clearInfo {
  resultPbPrjRecommendInfo.hasInfo = NO;
  resultPbPrjRecommendInfo.info = [PbPrjInfo defaultInstance];
  return self;
}
- (BOOL) hasType {
  return resultPbPrjRecommendInfo.hasType;
}
- (UInt32) type {
  return resultPbPrjRecommendInfo.type;
}
- (PbPrjRecommendInfoBuilder*) setType:(UInt32) value {
  resultPbPrjRecommendInfo.hasType = YES;
  resultPbPrjRecommendInfo.type = value;
  return self;
}
- (PbPrjRecommendInfoBuilder*) clearType {
  resultPbPrjRecommendInfo.hasType = NO;
  resultPbPrjRecommendInfo.type = 0;
  return self;
}
- (BOOL) hasWeight {
  return resultPbPrjRecommendInfo.hasWeight;
}
- (SInt32) weight {
  return resultPbPrjRecommendInfo.weight;
}
- (PbPrjRecommendInfoBuilder*) setWeight:(SInt32) value {
  resultPbPrjRecommendInfo.hasWeight = YES;
  resultPbPrjRecommendInfo.weight = value;
  return self;
}
- (PbPrjRecommendInfoBuilder*) clearWeight {
  resultPbPrjRecommendInfo.hasWeight = NO;
  resultPbPrjRecommendInfo.weight = 0;
  return self;
}
- (BOOL) hasOtherInfo {
  return resultPbPrjRecommendInfo.hasOtherInfo;
}
- (NSString*) otherInfo {
  return resultPbPrjRecommendInfo.otherInfo;
}
- (PbPrjRecommendInfoBuilder*) setOtherInfo:(NSString*) value {
  resultPbPrjRecommendInfo.hasOtherInfo = YES;
  resultPbPrjRecommendInfo.otherInfo = value;
  return self;
}
- (PbPrjRecommendInfoBuilder*) clearOtherInfo {
  resultPbPrjRecommendInfo.hasOtherInfo = NO;
  resultPbPrjRecommendInfo.otherInfo = @"";
  return self;
}
@end

@interface PbPrjRecommendPrj ()
@property SInt32 updateType;
@property (strong) NSMutableArray * prjsArray;
@property SInt32 prjsCnt;
@end

@implementation PbPrjRecommendPrj

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
@synthesize prjsArray;
@dynamic prjs;
- (BOOL) hasPrjsCnt {
  return !!hasPrjsCnt_;
}
- (void) setHasPrjsCnt:(BOOL) _value_ {
  hasPrjsCnt_ = !!_value_;
}
@synthesize prjsCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.prjsCnt = 0;
  }
  return self;
}
static PbPrjRecommendPrj* defaultPbPrjRecommendPrjInstance = nil;
+ (void) initialize {
  if (self == [PbPrjRecommendPrj class]) {
    defaultPbPrjRecommendPrjInstance = [[PbPrjRecommendPrj alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjRecommendPrjInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjRecommendPrjInstance;
}
- (NSArray *)prjs {
  return prjsArray;
}
- (PbPrjRecommendInfo*)prjsAtIndex:(NSUInteger)index {
  return [prjsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasPrjsCnt) {
    [output writeInt32:3 value:self.prjsCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasPrjsCnt) {
    size_ += computeInt32Size(3, self.prjsCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjRecommendPrj*) parseFromData:(NSData*) data {
  return (PbPrjRecommendPrj*)[[[PbPrjRecommendPrj builder] mergeFromData:data] build];
}
+ (PbPrjRecommendPrj*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjRecommendPrj*)[[[PbPrjRecommendPrj builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjRecommendPrj*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjRecommendPrj*)[[[PbPrjRecommendPrj builder] mergeFromInputStream:input] build];
}
+ (PbPrjRecommendPrj*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjRecommendPrj*)[[[PbPrjRecommendPrj builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjRecommendPrj*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjRecommendPrj*)[[[PbPrjRecommendPrj builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjRecommendPrj*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjRecommendPrj*)[[[PbPrjRecommendPrj builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjRecommendPrjBuilder*) builder {
  return [[PbPrjRecommendPrjBuilder alloc] init];
}
+ (PbPrjRecommendPrjBuilder*) builderWithPrototype:(PbPrjRecommendPrj*) prototype {
  return [[PbPrjRecommendPrj builder] mergeFrom:prototype];
}
- (PbPrjRecommendPrjBuilder*) builder {
  return [PbPrjRecommendPrj builder];
}
- (PbPrjRecommendPrjBuilder*) toBuilder {
  return [PbPrjRecommendPrj builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPrjsCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjsCnt", [NSNumber numberWithInteger:self.prjsCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  for (PbPrjRecommendInfo* element in self.prjsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjs"];
  }
  if (self.hasPrjsCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjsCnt] forKey: @"prjsCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjRecommendPrj class]]) {
    return NO;
  }
  PbPrjRecommendPrj *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      [self.prjsArray isEqualToArray:otherMessage.prjsArray] &&
      self.hasPrjsCnt == otherMessage.hasPrjsCnt &&
      (!self.hasPrjsCnt || self.prjsCnt == otherMessage.prjsCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPrjsCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjsCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjRecommendPrjBuilder()
@property (strong) PbPrjRecommendPrj* resultPbPrjRecommendPrj;
@end

@implementation PbPrjRecommendPrjBuilder
@synthesize resultPbPrjRecommendPrj;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjRecommendPrj = [[PbPrjRecommendPrj alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjRecommendPrj;
}
- (PbPrjRecommendPrjBuilder*) clear {
  self.resultPbPrjRecommendPrj = [[PbPrjRecommendPrj alloc] init];
  return self;
}
- (PbPrjRecommendPrjBuilder*) clone {
  return [PbPrjRecommendPrj builderWithPrototype:resultPbPrjRecommendPrj];
}
- (PbPrjRecommendPrj*) defaultInstance {
  return [PbPrjRecommendPrj defaultInstance];
}
- (PbPrjRecommendPrj*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjRecommendPrj*) buildPartial {
  PbPrjRecommendPrj* returnMe = resultPbPrjRecommendPrj;
  self.resultPbPrjRecommendPrj = nil;
  return returnMe;
}
- (PbPrjRecommendPrjBuilder*) mergeFrom:(PbPrjRecommendPrj*) other {
  if (other == [PbPrjRecommendPrj defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.prjsArray.count > 0) {
    if (resultPbPrjRecommendPrj.prjsArray == nil) {
      resultPbPrjRecommendPrj.prjsArray = [[NSMutableArray alloc] initWithArray:other.prjsArray];
    } else {
      [resultPbPrjRecommendPrj.prjsArray addObjectsFromArray:other.prjsArray];
    }
  }
  if (other.hasPrjsCnt) {
    [self setPrjsCnt:other.prjsCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjRecommendPrjBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjRecommendPrjBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        PbPrjRecommendInfoBuilder* subBuilder = [PbPrjRecommendInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjs:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setPrjsCnt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbPrjRecommendPrj.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbPrjRecommendPrj.updateType;
}
- (PbPrjRecommendPrjBuilder*) setUpdateType:(SInt32) value {
  resultPbPrjRecommendPrj.hasUpdateType = YES;
  resultPbPrjRecommendPrj.updateType = value;
  return self;
}
- (PbPrjRecommendPrjBuilder*) clearUpdateType {
  resultPbPrjRecommendPrj.hasUpdateType = NO;
  resultPbPrjRecommendPrj.updateType = 0;
  return self;
}
- (NSMutableArray *)prjs {
  return resultPbPrjRecommendPrj.prjsArray;
}
- (PbPrjRecommendInfo*)prjsAtIndex:(NSUInteger)index {
  return [resultPbPrjRecommendPrj prjsAtIndex:index];
}
- (PbPrjRecommendPrjBuilder *)addPrjs:(PbPrjRecommendInfo*)value {
  if (resultPbPrjRecommendPrj.prjsArray == nil) {
    resultPbPrjRecommendPrj.prjsArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjRecommendPrj.prjsArray addObject:value];
  return self;
}
- (PbPrjRecommendPrjBuilder *)setPrjsArray:(NSArray *)array {
  resultPbPrjRecommendPrj.prjsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjRecommendPrjBuilder *)clearPrjs {
  resultPbPrjRecommendPrj.prjsArray = nil;
  return self;
}
- (BOOL) hasPrjsCnt {
  return resultPbPrjRecommendPrj.hasPrjsCnt;
}
- (SInt32) prjsCnt {
  return resultPbPrjRecommendPrj.prjsCnt;
}
- (PbPrjRecommendPrjBuilder*) setPrjsCnt:(SInt32) value {
  resultPbPrjRecommendPrj.hasPrjsCnt = YES;
  resultPbPrjRecommendPrj.prjsCnt = value;
  return self;
}
- (PbPrjRecommendPrjBuilder*) clearPrjsCnt {
  resultPbPrjRecommendPrj.hasPrjsCnt = NO;
  resultPbPrjRecommendPrj.prjsCnt = 0;
  return self;
}
@end

@interface PbPrjBaseFile ()
@property (strong) PbImMsgAttach* baseinfo;
@property SInt32 creUin;
@property (strong) NSString* creName;
@property (strong) NSString* jobType;
@property (strong) NSString* tag;
@property (strong) NSString* fid;
@property (strong) NSString* fpid;
@end

@implementation PbPrjBaseFile

- (BOOL) hasBaseinfo {
  return !!hasBaseinfo_;
}
- (void) setHasBaseinfo:(BOOL) _value_ {
  hasBaseinfo_ = !!_value_;
}
@synthesize baseinfo;
- (BOOL) hasCreUin {
  return !!hasCreUin_;
}
- (void) setHasCreUin:(BOOL) _value_ {
  hasCreUin_ = !!_value_;
}
@synthesize creUin;
- (BOOL) hasCreName {
  return !!hasCreName_;
}
- (void) setHasCreName:(BOOL) _value_ {
  hasCreName_ = !!_value_;
}
@synthesize creName;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) _value_ {
  hasTag_ = !!_value_;
}
@synthesize tag;
- (BOOL) hasFid {
  return !!hasFid_;
}
- (void) setHasFid:(BOOL) _value_ {
  hasFid_ = !!_value_;
}
@synthesize fid;
- (BOOL) hasFpid {
  return !!hasFpid_;
}
- (void) setHasFpid:(BOOL) _value_ {
  hasFpid_ = !!_value_;
}
@synthesize fpid;
- (instancetype) init {
  if ((self = [super init])) {
    self.baseinfo = [PbImMsgAttach defaultInstance];
    self.creUin = 0;
    self.creName = @"";
    self.jobType = @"";
    self.tag = @"";
    self.fid = @"";
    self.fpid = @"";
  }
  return self;
}
static PbPrjBaseFile* defaultPbPrjBaseFileInstance = nil;
+ (void) initialize {
  if (self == [PbPrjBaseFile class]) {
    defaultPbPrjBaseFileInstance = [[PbPrjBaseFile alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjBaseFileInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjBaseFileInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBaseinfo) {
    [output writeMessage:1 value:self.baseinfo];
  }
  if (self.hasCreUin) {
    [output writeInt32:2 value:self.creUin];
  }
  if (self.hasCreName) {
    [output writeString:3 value:self.creName];
  }
  if (self.hasJobType) {
    [output writeString:4 value:self.jobType];
  }
  if (self.hasTag) {
    [output writeString:5 value:self.tag];
  }
  if (self.hasFid) {
    [output writeString:6 value:self.fid];
  }
  if (self.hasFpid) {
    [output writeString:7 value:self.fpid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBaseinfo) {
    size_ += computeMessageSize(1, self.baseinfo);
  }
  if (self.hasCreUin) {
    size_ += computeInt32Size(2, self.creUin);
  }
  if (self.hasCreName) {
    size_ += computeStringSize(3, self.creName);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(4, self.jobType);
  }
  if (self.hasTag) {
    size_ += computeStringSize(5, self.tag);
  }
  if (self.hasFid) {
    size_ += computeStringSize(6, self.fid);
  }
  if (self.hasFpid) {
    size_ += computeStringSize(7, self.fpid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjBaseFile*) parseFromData:(NSData*) data {
  return (PbPrjBaseFile*)[[[PbPrjBaseFile builder] mergeFromData:data] build];
}
+ (PbPrjBaseFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjBaseFile*)[[[PbPrjBaseFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjBaseFile*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjBaseFile*)[[[PbPrjBaseFile builder] mergeFromInputStream:input] build];
}
+ (PbPrjBaseFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjBaseFile*)[[[PbPrjBaseFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjBaseFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjBaseFile*)[[[PbPrjBaseFile builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjBaseFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjBaseFile*)[[[PbPrjBaseFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjBaseFileBuilder*) builder {
  return [[PbPrjBaseFileBuilder alloc] init];
}
+ (PbPrjBaseFileBuilder*) builderWithPrototype:(PbPrjBaseFile*) prototype {
  return [[PbPrjBaseFile builder] mergeFrom:prototype];
}
- (PbPrjBaseFileBuilder*) builder {
  return [PbPrjBaseFile builder];
}
- (PbPrjBaseFileBuilder*) toBuilder {
  return [PbPrjBaseFile builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBaseinfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"baseinfo"];
    [self.baseinfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCreUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"creUin", [NSNumber numberWithInteger:self.creUin]];
  }
  if (self.hasCreName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"creName", self.creName];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasTag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tag", self.tag];
  }
  if (self.hasFid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fid", self.fid];
  }
  if (self.hasFpid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fpid", self.fpid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBaseinfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.baseinfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"baseinfo"];
  }
  if (self.hasCreUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.creUin] forKey: @"creUin"];
  }
  if (self.hasCreName) {
    [dictionary setObject: self.creName forKey: @"creName"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasTag) {
    [dictionary setObject: self.tag forKey: @"tag"];
  }
  if (self.hasFid) {
    [dictionary setObject: self.fid forKey: @"fid"];
  }
  if (self.hasFpid) {
    [dictionary setObject: self.fpid forKey: @"fpid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjBaseFile class]]) {
    return NO;
  }
  PbPrjBaseFile *otherMessage = other;
  return
      self.hasBaseinfo == otherMessage.hasBaseinfo &&
      (!self.hasBaseinfo || [self.baseinfo isEqual:otherMessage.baseinfo]) &&
      self.hasCreUin == otherMessage.hasCreUin &&
      (!self.hasCreUin || self.creUin == otherMessage.creUin) &&
      self.hasCreName == otherMessage.hasCreName &&
      (!self.hasCreName || [self.creName isEqual:otherMessage.creName]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasTag == otherMessage.hasTag &&
      (!self.hasTag || [self.tag isEqual:otherMessage.tag]) &&
      self.hasFid == otherMessage.hasFid &&
      (!self.hasFid || [self.fid isEqual:otherMessage.fid]) &&
      self.hasFpid == otherMessage.hasFpid &&
      (!self.hasFpid || [self.fpid isEqual:otherMessage.fpid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBaseinfo) {
    hashCode = hashCode * 31 + [self.baseinfo hash];
  }
  if (self.hasCreUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.creUin] hash];
  }
  if (self.hasCreName) {
    hashCode = hashCode * 31 + [self.creName hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasTag) {
    hashCode = hashCode * 31 + [self.tag hash];
  }
  if (self.hasFid) {
    hashCode = hashCode * 31 + [self.fid hash];
  }
  if (self.hasFpid) {
    hashCode = hashCode * 31 + [self.fpid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjBaseFileBuilder()
@property (strong) PbPrjBaseFile* resultPbPrjBaseFile;
@end

@implementation PbPrjBaseFileBuilder
@synthesize resultPbPrjBaseFile;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjBaseFile = [[PbPrjBaseFile alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjBaseFile;
}
- (PbPrjBaseFileBuilder*) clear {
  self.resultPbPrjBaseFile = [[PbPrjBaseFile alloc] init];
  return self;
}
- (PbPrjBaseFileBuilder*) clone {
  return [PbPrjBaseFile builderWithPrototype:resultPbPrjBaseFile];
}
- (PbPrjBaseFile*) defaultInstance {
  return [PbPrjBaseFile defaultInstance];
}
- (PbPrjBaseFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjBaseFile*) buildPartial {
  PbPrjBaseFile* returnMe = resultPbPrjBaseFile;
  self.resultPbPrjBaseFile = nil;
  return returnMe;
}
- (PbPrjBaseFileBuilder*) mergeFrom:(PbPrjBaseFile*) other {
  if (other == [PbPrjBaseFile defaultInstance]) {
    return self;
  }
  if (other.hasBaseinfo) {
    [self mergeBaseinfo:other.baseinfo];
  }
  if (other.hasCreUin) {
    [self setCreUin:other.creUin];
  }
  if (other.hasCreName) {
    [self setCreName:other.creName];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasFid) {
    [self setFid:other.fid];
  }
  if (other.hasFpid) {
    [self setFpid:other.fpid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjBaseFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjBaseFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbImMsgAttachBuilder* subBuilder = [PbImMsgAttach builder];
        if (self.hasBaseinfo) {
          [subBuilder mergeFrom:self.baseinfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBaseinfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCreUin:[input readInt32]];
        break;
      }
      case 26: {
        [self setCreName:[input readString]];
        break;
      }
      case 34: {
        [self setJobType:[input readString]];
        break;
      }
      case 42: {
        [self setTag:[input readString]];
        break;
      }
      case 50: {
        [self setFid:[input readString]];
        break;
      }
      case 58: {
        [self setFpid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasBaseinfo {
  return resultPbPrjBaseFile.hasBaseinfo;
}
- (PbImMsgAttach*) baseinfo {
  return resultPbPrjBaseFile.baseinfo;
}
- (PbPrjBaseFileBuilder*) setBaseinfo:(PbImMsgAttach*) value {
  resultPbPrjBaseFile.hasBaseinfo = YES;
  resultPbPrjBaseFile.baseinfo = value;
  return self;
}
- (PbPrjBaseFileBuilder*) setBaseinfoBuilder:(PbImMsgAttachBuilder*) builderForValue {
  return [self setBaseinfo:[builderForValue build]];
}
- (PbPrjBaseFileBuilder*) mergeBaseinfo:(PbImMsgAttach*) value {
  if (resultPbPrjBaseFile.hasBaseinfo &&
      resultPbPrjBaseFile.baseinfo != [PbImMsgAttach defaultInstance]) {
    resultPbPrjBaseFile.baseinfo =
      [[[PbImMsgAttach builderWithPrototype:resultPbPrjBaseFile.baseinfo] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjBaseFile.baseinfo = value;
  }
  resultPbPrjBaseFile.hasBaseinfo = YES;
  return self;
}
- (PbPrjBaseFileBuilder*) clearBaseinfo {
  resultPbPrjBaseFile.hasBaseinfo = NO;
  resultPbPrjBaseFile.baseinfo = [PbImMsgAttach defaultInstance];
  return self;
}
- (BOOL) hasCreUin {
  return resultPbPrjBaseFile.hasCreUin;
}
- (SInt32) creUin {
  return resultPbPrjBaseFile.creUin;
}
- (PbPrjBaseFileBuilder*) setCreUin:(SInt32) value {
  resultPbPrjBaseFile.hasCreUin = YES;
  resultPbPrjBaseFile.creUin = value;
  return self;
}
- (PbPrjBaseFileBuilder*) clearCreUin {
  resultPbPrjBaseFile.hasCreUin = NO;
  resultPbPrjBaseFile.creUin = 0;
  return self;
}
- (BOOL) hasCreName {
  return resultPbPrjBaseFile.hasCreName;
}
- (NSString*) creName {
  return resultPbPrjBaseFile.creName;
}
- (PbPrjBaseFileBuilder*) setCreName:(NSString*) value {
  resultPbPrjBaseFile.hasCreName = YES;
  resultPbPrjBaseFile.creName = value;
  return self;
}
- (PbPrjBaseFileBuilder*) clearCreName {
  resultPbPrjBaseFile.hasCreName = NO;
  resultPbPrjBaseFile.creName = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbPrjBaseFile.hasJobType;
}
- (NSString*) jobType {
  return resultPbPrjBaseFile.jobType;
}
- (PbPrjBaseFileBuilder*) setJobType:(NSString*) value {
  resultPbPrjBaseFile.hasJobType = YES;
  resultPbPrjBaseFile.jobType = value;
  return self;
}
- (PbPrjBaseFileBuilder*) clearJobType {
  resultPbPrjBaseFile.hasJobType = NO;
  resultPbPrjBaseFile.jobType = @"";
  return self;
}
- (BOOL) hasTag {
  return resultPbPrjBaseFile.hasTag;
}
- (NSString*) tag {
  return resultPbPrjBaseFile.tag;
}
- (PbPrjBaseFileBuilder*) setTag:(NSString*) value {
  resultPbPrjBaseFile.hasTag = YES;
  resultPbPrjBaseFile.tag = value;
  return self;
}
- (PbPrjBaseFileBuilder*) clearTag {
  resultPbPrjBaseFile.hasTag = NO;
  resultPbPrjBaseFile.tag = @"";
  return self;
}
- (BOOL) hasFid {
  return resultPbPrjBaseFile.hasFid;
}
- (NSString*) fid {
  return resultPbPrjBaseFile.fid;
}
- (PbPrjBaseFileBuilder*) setFid:(NSString*) value {
  resultPbPrjBaseFile.hasFid = YES;
  resultPbPrjBaseFile.fid = value;
  return self;
}
- (PbPrjBaseFileBuilder*) clearFid {
  resultPbPrjBaseFile.hasFid = NO;
  resultPbPrjBaseFile.fid = @"";
  return self;
}
- (BOOL) hasFpid {
  return resultPbPrjBaseFile.hasFpid;
}
- (NSString*) fpid {
  return resultPbPrjBaseFile.fpid;
}
- (PbPrjBaseFileBuilder*) setFpid:(NSString*) value {
  resultPbPrjBaseFile.hasFpid = YES;
  resultPbPrjBaseFile.fpid = value;
  return self;
}
- (PbPrjBaseFileBuilder*) clearFpid {
  resultPbPrjBaseFile.hasFpid = NO;
  resultPbPrjBaseFile.fpid = @"";
  return self;
}
@end

@interface PbPrjFile ()
@property SInt32 updateType;
@property (strong) NSString* prjId;
@property (strong) NSMutableArray * filesArray;
@property SInt32 filesCnt;
@end

@implementation PbPrjFile

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
@synthesize filesArray;
@dynamic files;
- (BOOL) hasFilesCnt {
  return !!hasFilesCnt_;
}
- (void) setHasFilesCnt:(BOOL) _value_ {
  hasFilesCnt_ = !!_value_;
}
@synthesize filesCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.prjId = @"";
    self.filesCnt = 0;
  }
  return self;
}
static PbPrjFile* defaultPbPrjFileInstance = nil;
+ (void) initialize {
  if (self == [PbPrjFile class]) {
    defaultPbPrjFileInstance = [[PbPrjFile alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjFileInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjFileInstance;
}
- (NSArray *)files {
  return filesArray;
}
- (PbPrjBaseFile*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  if (self.hasPrjId) {
    [output writeString:2 value:self.prjId];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasFilesCnt) {
    [output writeInt32:4 value:self.filesCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  if (self.hasPrjId) {
    size_ += computeStringSize(2, self.prjId);
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasFilesCnt) {
    size_ += computeInt32Size(4, self.filesCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjFile*) parseFromData:(NSData*) data {
  return (PbPrjFile*)[[[PbPrjFile builder] mergeFromData:data] build];
}
+ (PbPrjFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjFile*)[[[PbPrjFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjFile*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjFile*)[[[PbPrjFile builder] mergeFromInputStream:input] build];
}
+ (PbPrjFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjFile*)[[[PbPrjFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjFile*)[[[PbPrjFile builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjFile*)[[[PbPrjFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjFileBuilder*) builder {
  return [[PbPrjFileBuilder alloc] init];
}
+ (PbPrjFileBuilder*) builderWithPrototype:(PbPrjFile*) prototype {
  return [[PbPrjFile builder] mergeFrom:prototype];
}
- (PbPrjFileBuilder*) builder {
  return [PbPrjFile builder];
}
- (PbPrjFileBuilder*) toBuilder {
  return [PbPrjFile builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"files"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasFilesCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"filesCnt", [NSNumber numberWithInteger:self.filesCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  for (PbPrjBaseFile* element in self.filesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"files"];
  }
  if (self.hasFilesCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.filesCnt] forKey: @"filesCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjFile class]]) {
    return NO;
  }
  PbPrjFile *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      self.hasFilesCnt == otherMessage.hasFilesCnt &&
      (!self.hasFilesCnt || self.filesCnt == otherMessage.filesCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  [self.filesArray enumerateObjectsUsingBlock:^(PbPrjBaseFile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasFilesCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.filesCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjFileBuilder()
@property (strong) PbPrjFile* resultPbPrjFile;
@end

@implementation PbPrjFileBuilder
@synthesize resultPbPrjFile;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjFile = [[PbPrjFile alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjFile;
}
- (PbPrjFileBuilder*) clear {
  self.resultPbPrjFile = [[PbPrjFile alloc] init];
  return self;
}
- (PbPrjFileBuilder*) clone {
  return [PbPrjFile builderWithPrototype:resultPbPrjFile];
}
- (PbPrjFile*) defaultInstance {
  return [PbPrjFile defaultInstance];
}
- (PbPrjFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjFile*) buildPartial {
  PbPrjFile* returnMe = resultPbPrjFile;
  self.resultPbPrjFile = nil;
  return returnMe;
}
- (PbPrjFileBuilder*) mergeFrom:(PbPrjFile*) other {
  if (other == [PbPrjFile defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.filesArray.count > 0) {
    if (resultPbPrjFile.filesArray == nil) {
      resultPbPrjFile.filesArray = [[NSMutableArray alloc] initWithArray:other.filesArray];
    } else {
      [resultPbPrjFile.filesArray addObjectsFromArray:other.filesArray];
    }
  }
  if (other.hasFilesCnt) {
    [self setFilesCnt:other.filesCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        [self setPrjId:[input readString]];
        break;
      }
      case 26: {
        PbPrjBaseFileBuilder* subBuilder = [PbPrjBaseFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFiles:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setFilesCnt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbPrjFile.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbPrjFile.updateType;
}
- (PbPrjFileBuilder*) setUpdateType:(SInt32) value {
  resultPbPrjFile.hasUpdateType = YES;
  resultPbPrjFile.updateType = value;
  return self;
}
- (PbPrjFileBuilder*) clearUpdateType {
  resultPbPrjFile.hasUpdateType = NO;
  resultPbPrjFile.updateType = 0;
  return self;
}
- (BOOL) hasPrjId {
  return resultPbPrjFile.hasPrjId;
}
- (NSString*) prjId {
  return resultPbPrjFile.prjId;
}
- (PbPrjFileBuilder*) setPrjId:(NSString*) value {
  resultPbPrjFile.hasPrjId = YES;
  resultPbPrjFile.prjId = value;
  return self;
}
- (PbPrjFileBuilder*) clearPrjId {
  resultPbPrjFile.hasPrjId = NO;
  resultPbPrjFile.prjId = @"";
  return self;
}
- (NSMutableArray *)files {
  return resultPbPrjFile.filesArray;
}
- (PbPrjBaseFile*)filesAtIndex:(NSUInteger)index {
  return [resultPbPrjFile filesAtIndex:index];
}
- (PbPrjFileBuilder *)addFiles:(PbPrjBaseFile*)value {
  if (resultPbPrjFile.filesArray == nil) {
    resultPbPrjFile.filesArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjFile.filesArray addObject:value];
  return self;
}
- (PbPrjFileBuilder *)setFilesArray:(NSArray *)array {
  resultPbPrjFile.filesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjFileBuilder *)clearFiles {
  resultPbPrjFile.filesArray = nil;
  return self;
}
- (BOOL) hasFilesCnt {
  return resultPbPrjFile.hasFilesCnt;
}
- (SInt32) filesCnt {
  return resultPbPrjFile.filesCnt;
}
- (PbPrjFileBuilder*) setFilesCnt:(SInt32) value {
  resultPbPrjFile.hasFilesCnt = YES;
  resultPbPrjFile.filesCnt = value;
  return self;
}
- (PbPrjFileBuilder*) clearFilesCnt {
  resultPbPrjFile.hasFilesCnt = NO;
  resultPbPrjFile.filesCnt = 0;
  return self;
}
@end

@interface PbPrjDepartment ()
@property (strong) NSString* id;
@property (strong) NSString* name;
@end

@implementation PbPrjDepartment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
  }
  return self;
}
static PbPrjDepartment* defaultPbPrjDepartmentInstance = nil;
+ (void) initialize {
  if (self == [PbPrjDepartment class]) {
    defaultPbPrjDepartmentInstance = [[PbPrjDepartment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjDepartmentInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjDepartmentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjDepartment*) parseFromData:(NSData*) data {
  return (PbPrjDepartment*)[[[PbPrjDepartment builder] mergeFromData:data] build];
}
+ (PbPrjDepartment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjDepartment*)[[[PbPrjDepartment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjDepartment*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjDepartment*)[[[PbPrjDepartment builder] mergeFromInputStream:input] build];
}
+ (PbPrjDepartment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjDepartment*)[[[PbPrjDepartment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjDepartment*)[[[PbPrjDepartment builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjDepartment*)[[[PbPrjDepartment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjDepartmentBuilder*) builder {
  return [[PbPrjDepartmentBuilder alloc] init];
}
+ (PbPrjDepartmentBuilder*) builderWithPrototype:(PbPrjDepartment*) prototype {
  return [[PbPrjDepartment builder] mergeFrom:prototype];
}
- (PbPrjDepartmentBuilder*) builder {
  return [PbPrjDepartment builder];
}
- (PbPrjDepartmentBuilder*) toBuilder {
  return [PbPrjDepartment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: self.id forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjDepartment class]]) {
    return NO;
  }
  PbPrjDepartment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjDepartmentBuilder()
@property (strong) PbPrjDepartment* resultPbPrjDepartment;
@end

@implementation PbPrjDepartmentBuilder
@synthesize resultPbPrjDepartment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjDepartment = [[PbPrjDepartment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjDepartment;
}
- (PbPrjDepartmentBuilder*) clear {
  self.resultPbPrjDepartment = [[PbPrjDepartment alloc] init];
  return self;
}
- (PbPrjDepartmentBuilder*) clone {
  return [PbPrjDepartment builderWithPrototype:resultPbPrjDepartment];
}
- (PbPrjDepartment*) defaultInstance {
  return [PbPrjDepartment defaultInstance];
}
- (PbPrjDepartment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjDepartment*) buildPartial {
  PbPrjDepartment* returnMe = resultPbPrjDepartment;
  self.resultPbPrjDepartment = nil;
  return returnMe;
}
- (PbPrjDepartmentBuilder*) mergeFrom:(PbPrjDepartment*) other {
  if (other == [PbPrjDepartment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultPbPrjDepartment.hasId;
}
- (NSString*) id {
  return resultPbPrjDepartment.id;
}
- (PbPrjDepartmentBuilder*) setId:(NSString*) value {
  resultPbPrjDepartment.hasId = YES;
  resultPbPrjDepartment.id = value;
  return self;
}
- (PbPrjDepartmentBuilder*) clearId {
  resultPbPrjDepartment.hasId = NO;
  resultPbPrjDepartment.id = @"";
  return self;
}
- (BOOL) hasName {
  return resultPbPrjDepartment.hasName;
}
- (NSString*) name {
  return resultPbPrjDepartment.name;
}
- (PbPrjDepartmentBuilder*) setName:(NSString*) value {
  resultPbPrjDepartment.hasName = YES;
  resultPbPrjDepartment.name = value;
  return self;
}
- (PbPrjDepartmentBuilder*) clearName {
  resultPbPrjDepartment.hasName = NO;
  resultPbPrjDepartment.name = @"";
  return self;
}
@end

@interface PbPrjDetails ()
@property (strong) PbPrjInfo* info;
@property (strong) PbCltGroup* imGroup;
@property SInt32 taskTotalCount;
@property SInt32 taskUnfinishedCount;
@property SInt32 taskDelayCount;
@property SInt32 prjAllDayCount;
@property SInt32 prjRemainDayCount;
@property (strong) NSMutableArray * usersArray;
@property (strong) NSMutableArray * appUsersArray;
@property (strong) PbCltFriend* frd;
@property (strong) NSMutableArray * feedsArray;
@property (strong) NSMutableArray * prjLogArray;
@property (strong) NSMutableArray * milestoreArray;
@property (strong) NSMutableArray * departmentArray;
@end

@implementation PbPrjDetails

- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value_ {
  hasInfo_ = !!_value_;
}
@synthesize info;
- (BOOL) hasImGroup {
  return !!hasImGroup_;
}
- (void) setHasImGroup:(BOOL) _value_ {
  hasImGroup_ = !!_value_;
}
@synthesize imGroup;
- (BOOL) hasTaskTotalCount {
  return !!hasTaskTotalCount_;
}
- (void) setHasTaskTotalCount:(BOOL) _value_ {
  hasTaskTotalCount_ = !!_value_;
}
@synthesize taskTotalCount;
- (BOOL) hasTaskUnfinishedCount {
  return !!hasTaskUnfinishedCount_;
}
- (void) setHasTaskUnfinishedCount:(BOOL) _value_ {
  hasTaskUnfinishedCount_ = !!_value_;
}
@synthesize taskUnfinishedCount;
- (BOOL) hasTaskDelayCount {
  return !!hasTaskDelayCount_;
}
- (void) setHasTaskDelayCount:(BOOL) _value_ {
  hasTaskDelayCount_ = !!_value_;
}
@synthesize taskDelayCount;
- (BOOL) hasPrjAllDayCount {
  return !!hasPrjAllDayCount_;
}
- (void) setHasPrjAllDayCount:(BOOL) _value_ {
  hasPrjAllDayCount_ = !!_value_;
}
@synthesize prjAllDayCount;
- (BOOL) hasPrjRemainDayCount {
  return !!hasPrjRemainDayCount_;
}
- (void) setHasPrjRemainDayCount:(BOOL) _value_ {
  hasPrjRemainDayCount_ = !!_value_;
}
@synthesize prjRemainDayCount;
@synthesize usersArray;
@dynamic users;
@synthesize appUsersArray;
@dynamic appUsers;
- (BOOL) hasFrd {
  return !!hasFrd_;
}
- (void) setHasFrd:(BOOL) _value_ {
  hasFrd_ = !!_value_;
}
@synthesize frd;
@synthesize feedsArray;
@dynamic feeds;
@synthesize prjLogArray;
@dynamic prjLog;
@synthesize milestoreArray;
@dynamic milestore;
@synthesize departmentArray;
@dynamic department;
- (instancetype) init {
  if ((self = [super init])) {
    self.info = [PbPrjInfo defaultInstance];
    self.imGroup = [PbCltGroup defaultInstance];
    self.taskTotalCount = 0;
    self.taskUnfinishedCount = 0;
    self.taskDelayCount = 0;
    self.prjAllDayCount = 0;
    self.prjRemainDayCount = 0;
    self.frd = [PbCltFriend defaultInstance];
  }
  return self;
}
static PbPrjDetails* defaultPbPrjDetailsInstance = nil;
+ (void) initialize {
  if (self == [PbPrjDetails class]) {
    defaultPbPrjDetailsInstance = [[PbPrjDetails alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbPrjDetailsInstance;
}
- (instancetype) defaultInstance {
  return defaultPbPrjDetailsInstance;
}
- (NSArray *)users {
  return usersArray;
}
- (PbPrjUser*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (NSArray *)appUsers {
  return appUsersArray;
}
- (PbPrjUser*)appUsersAtIndex:(NSUInteger)index {
  return [appUsersArray objectAtIndex:index];
}
- (NSArray *)feeds {
  return feedsArray;
}
- (PbPrjFeed*)feedsAtIndex:(NSUInteger)index {
  return [feedsArray objectAtIndex:index];
}
- (NSArray *)prjLog {
  return prjLogArray;
}
- (PbPrjLog*)prjLogAtIndex:(NSUInteger)index {
  return [prjLogArray objectAtIndex:index];
}
- (NSArray *)milestore {
  return milestoreArray;
}
- (PbPrjMilestore*)milestoreAtIndex:(NSUInteger)index {
  return [milestoreArray objectAtIndex:index];
}
- (NSArray *)department {
  return departmentArray;
}
- (PbPrjDepartment*)departmentAtIndex:(NSUInteger)index {
  return [departmentArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInfo) {
    [output writeMessage:1 value:self.info];
  }
  if (self.hasImGroup) {
    [output writeMessage:2 value:self.imGroup];
  }
  if (self.hasTaskTotalCount) {
    [output writeInt32:3 value:self.taskTotalCount];
  }
  if (self.hasTaskUnfinishedCount) {
    [output writeInt32:4 value:self.taskUnfinishedCount];
  }
  if (self.hasTaskDelayCount) {
    [output writeInt32:5 value:self.taskDelayCount];
  }
  if (self.hasPrjAllDayCount) {
    [output writeInt32:6 value:self.prjAllDayCount];
  }
  if (self.hasPrjRemainDayCount) {
    [output writeInt32:7 value:self.prjRemainDayCount];
  }
  [self.usersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  [self.appUsersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:9 value:element];
  }];
  if (self.hasFrd) {
    [output writeMessage:10 value:self.frd];
  }
  [self.feedsArray enumerateObjectsUsingBlock:^(PbPrjFeed *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:11 value:element];
  }];
  [self.prjLogArray enumerateObjectsUsingBlock:^(PbPrjLog *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:12 value:element];
  }];
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbPrjMilestore *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:13 value:element];
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbPrjDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:14 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInfo) {
    size_ += computeMessageSize(1, self.info);
  }
  if (self.hasImGroup) {
    size_ += computeMessageSize(2, self.imGroup);
  }
  if (self.hasTaskTotalCount) {
    size_ += computeInt32Size(3, self.taskTotalCount);
  }
  if (self.hasTaskUnfinishedCount) {
    size_ += computeInt32Size(4, self.taskUnfinishedCount);
  }
  if (self.hasTaskDelayCount) {
    size_ += computeInt32Size(5, self.taskDelayCount);
  }
  if (self.hasPrjAllDayCount) {
    size_ += computeInt32Size(6, self.prjAllDayCount);
  }
  if (self.hasPrjRemainDayCount) {
    size_ += computeInt32Size(7, self.prjRemainDayCount);
  }
  [self.usersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  [self.appUsersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(9, element);
  }];
  if (self.hasFrd) {
    size_ += computeMessageSize(10, self.frd);
  }
  [self.feedsArray enumerateObjectsUsingBlock:^(PbPrjFeed *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(11, element);
  }];
  [self.prjLogArray enumerateObjectsUsingBlock:^(PbPrjLog *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(12, element);
  }];
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbPrjMilestore *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(13, element);
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbPrjDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(14, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbPrjDetails*) parseFromData:(NSData*) data {
  return (PbPrjDetails*)[[[PbPrjDetails builder] mergeFromData:data] build];
}
+ (PbPrjDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjDetails*)[[[PbPrjDetails builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbPrjDetails*) parseFromInputStream:(NSInputStream*) input {
  return (PbPrjDetails*)[[[PbPrjDetails builder] mergeFromInputStream:input] build];
}
+ (PbPrjDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjDetails*)[[[PbPrjDetails builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbPrjDetails*)[[[PbPrjDetails builder] mergeFromCodedInputStream:input] build];
}
+ (PbPrjDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbPrjDetails*)[[[PbPrjDetails builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbPrjDetailsBuilder*) builder {
  return [[PbPrjDetailsBuilder alloc] init];
}
+ (PbPrjDetailsBuilder*) builderWithPrototype:(PbPrjDetails*) prototype {
  return [[PbPrjDetails builder] mergeFrom:prototype];
}
- (PbPrjDetailsBuilder*) builder {
  return [PbPrjDetails builder];
}
- (PbPrjDetailsBuilder*) toBuilder {
  return [PbPrjDetails builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"info"];
    [self.info writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasImGroup) {
    [output appendFormat:@"%@%@ {\n", indent, @"imGroup"];
    [self.imGroup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTaskTotalCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskTotalCount", [NSNumber numberWithInteger:self.taskTotalCount]];
  }
  if (self.hasTaskUnfinishedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskUnfinishedCount", [NSNumber numberWithInteger:self.taskUnfinishedCount]];
  }
  if (self.hasTaskDelayCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskDelayCount", [NSNumber numberWithInteger:self.taskDelayCount]];
  }
  if (self.hasPrjAllDayCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjAllDayCount", [NSNumber numberWithInteger:self.prjAllDayCount]];
  }
  if (self.hasPrjRemainDayCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjRemainDayCount", [NSNumber numberWithInteger:self.prjRemainDayCount]];
  }
  [self.usersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.appUsersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"appUsers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasFrd) {
    [output appendFormat:@"%@%@ {\n", indent, @"frd"];
    [self.frd writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.feedsArray enumerateObjectsUsingBlock:^(PbPrjFeed *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"feeds"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.prjLogArray enumerateObjectsUsingBlock:^(PbPrjLog *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjLog"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbPrjMilestore *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"milestore"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbPrjDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"department"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.info storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"info"];
  }
  if (self.hasImGroup) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.imGroup storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"imGroup"];
  }
  if (self.hasTaskTotalCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskTotalCount] forKey: @"taskTotalCount"];
  }
  if (self.hasTaskUnfinishedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskUnfinishedCount] forKey: @"taskUnfinishedCount"];
  }
  if (self.hasTaskDelayCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.taskDelayCount] forKey: @"taskDelayCount"];
  }
  if (self.hasPrjAllDayCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjAllDayCount] forKey: @"prjAllDayCount"];
  }
  if (self.hasPrjRemainDayCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.prjRemainDayCount] forKey: @"prjRemainDayCount"];
  }
  for (PbPrjUser* element in self.usersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"users"];
  }
  for (PbPrjUser* element in self.appUsersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"appUsers"];
  }
  if (self.hasFrd) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.frd storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"frd"];
  }
  for (PbPrjFeed* element in self.feedsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"feeds"];
  }
  for (PbPrjLog* element in self.prjLogArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjLog"];
  }
  for (PbPrjMilestore* element in self.milestoreArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"milestore"];
  }
  for (PbPrjDepartment* element in self.departmentArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"department"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbPrjDetails class]]) {
    return NO;
  }
  PbPrjDetails *otherMessage = other;
  return
      self.hasInfo == otherMessage.hasInfo &&
      (!self.hasInfo || [self.info isEqual:otherMessage.info]) &&
      self.hasImGroup == otherMessage.hasImGroup &&
      (!self.hasImGroup || [self.imGroup isEqual:otherMessage.imGroup]) &&
      self.hasTaskTotalCount == otherMessage.hasTaskTotalCount &&
      (!self.hasTaskTotalCount || self.taskTotalCount == otherMessage.taskTotalCount) &&
      self.hasTaskUnfinishedCount == otherMessage.hasTaskUnfinishedCount &&
      (!self.hasTaskUnfinishedCount || self.taskUnfinishedCount == otherMessage.taskUnfinishedCount) &&
      self.hasTaskDelayCount == otherMessage.hasTaskDelayCount &&
      (!self.hasTaskDelayCount || self.taskDelayCount == otherMessage.taskDelayCount) &&
      self.hasPrjAllDayCount == otherMessage.hasPrjAllDayCount &&
      (!self.hasPrjAllDayCount || self.prjAllDayCount == otherMessage.prjAllDayCount) &&
      self.hasPrjRemainDayCount == otherMessage.hasPrjRemainDayCount &&
      (!self.hasPrjRemainDayCount || self.prjRemainDayCount == otherMessage.prjRemainDayCount) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      [self.appUsersArray isEqualToArray:otherMessage.appUsersArray] &&
      self.hasFrd == otherMessage.hasFrd &&
      (!self.hasFrd || [self.frd isEqual:otherMessage.frd]) &&
      [self.feedsArray isEqualToArray:otherMessage.feedsArray] &&
      [self.prjLogArray isEqualToArray:otherMessage.prjLogArray] &&
      [self.milestoreArray isEqualToArray:otherMessage.milestoreArray] &&
      [self.departmentArray isEqualToArray:otherMessage.departmentArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInfo) {
    hashCode = hashCode * 31 + [self.info hash];
  }
  if (self.hasImGroup) {
    hashCode = hashCode * 31 + [self.imGroup hash];
  }
  if (self.hasTaskTotalCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskTotalCount] hash];
  }
  if (self.hasTaskUnfinishedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskUnfinishedCount] hash];
  }
  if (self.hasTaskDelayCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskDelayCount] hash];
  }
  if (self.hasPrjAllDayCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjAllDayCount] hash];
  }
  if (self.hasPrjRemainDayCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.prjRemainDayCount] hash];
  }
  [self.usersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.appUsersArray enumerateObjectsUsingBlock:^(PbPrjUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasFrd) {
    hashCode = hashCode * 31 + [self.frd hash];
  }
  [self.feedsArray enumerateObjectsUsingBlock:^(PbPrjFeed *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.prjLogArray enumerateObjectsUsingBlock:^(PbPrjLog *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.milestoreArray enumerateObjectsUsingBlock:^(PbPrjMilestore *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.departmentArray enumerateObjectsUsingBlock:^(PbPrjDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbPrjDetailsBuilder()
@property (strong) PbPrjDetails* resultPbPrjDetails;
@end

@implementation PbPrjDetailsBuilder
@synthesize resultPbPrjDetails;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbPrjDetails = [[PbPrjDetails alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbPrjDetails;
}
- (PbPrjDetailsBuilder*) clear {
  self.resultPbPrjDetails = [[PbPrjDetails alloc] init];
  return self;
}
- (PbPrjDetailsBuilder*) clone {
  return [PbPrjDetails builderWithPrototype:resultPbPrjDetails];
}
- (PbPrjDetails*) defaultInstance {
  return [PbPrjDetails defaultInstance];
}
- (PbPrjDetails*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbPrjDetails*) buildPartial {
  PbPrjDetails* returnMe = resultPbPrjDetails;
  self.resultPbPrjDetails = nil;
  return returnMe;
}
- (PbPrjDetailsBuilder*) mergeFrom:(PbPrjDetails*) other {
  if (other == [PbPrjDetails defaultInstance]) {
    return self;
  }
  if (other.hasInfo) {
    [self mergeInfo:other.info];
  }
  if (other.hasImGroup) {
    [self mergeImGroup:other.imGroup];
  }
  if (other.hasTaskTotalCount) {
    [self setTaskTotalCount:other.taskTotalCount];
  }
  if (other.hasTaskUnfinishedCount) {
    [self setTaskUnfinishedCount:other.taskUnfinishedCount];
  }
  if (other.hasTaskDelayCount) {
    [self setTaskDelayCount:other.taskDelayCount];
  }
  if (other.hasPrjAllDayCount) {
    [self setPrjAllDayCount:other.prjAllDayCount];
  }
  if (other.hasPrjRemainDayCount) {
    [self setPrjRemainDayCount:other.prjRemainDayCount];
  }
  if (other.usersArray.count > 0) {
    if (resultPbPrjDetails.usersArray == nil) {
      resultPbPrjDetails.usersArray = [[NSMutableArray alloc] initWithArray:other.usersArray];
    } else {
      [resultPbPrjDetails.usersArray addObjectsFromArray:other.usersArray];
    }
  }
  if (other.appUsersArray.count > 0) {
    if (resultPbPrjDetails.appUsersArray == nil) {
      resultPbPrjDetails.appUsersArray = [[NSMutableArray alloc] initWithArray:other.appUsersArray];
    } else {
      [resultPbPrjDetails.appUsersArray addObjectsFromArray:other.appUsersArray];
    }
  }
  if (other.hasFrd) {
    [self mergeFrd:other.frd];
  }
  if (other.feedsArray.count > 0) {
    if (resultPbPrjDetails.feedsArray == nil) {
      resultPbPrjDetails.feedsArray = [[NSMutableArray alloc] initWithArray:other.feedsArray];
    } else {
      [resultPbPrjDetails.feedsArray addObjectsFromArray:other.feedsArray];
    }
  }
  if (other.prjLogArray.count > 0) {
    if (resultPbPrjDetails.prjLogArray == nil) {
      resultPbPrjDetails.prjLogArray = [[NSMutableArray alloc] initWithArray:other.prjLogArray];
    } else {
      [resultPbPrjDetails.prjLogArray addObjectsFromArray:other.prjLogArray];
    }
  }
  if (other.milestoreArray.count > 0) {
    if (resultPbPrjDetails.milestoreArray == nil) {
      resultPbPrjDetails.milestoreArray = [[NSMutableArray alloc] initWithArray:other.milestoreArray];
    } else {
      [resultPbPrjDetails.milestoreArray addObjectsFromArray:other.milestoreArray];
    }
  }
  if (other.departmentArray.count > 0) {
    if (resultPbPrjDetails.departmentArray == nil) {
      resultPbPrjDetails.departmentArray = [[NSMutableArray alloc] initWithArray:other.departmentArray];
    } else {
      [resultPbPrjDetails.departmentArray addObjectsFromArray:other.departmentArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbPrjDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbPrjDetailsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbPrjInfoBuilder* subBuilder = [PbPrjInfo builder];
        if (self.hasInfo) {
          [subBuilder mergeFrom:self.info];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PbCltGroupBuilder* subBuilder = [PbCltGroup builder];
        if (self.hasImGroup) {
          [subBuilder mergeFrom:self.imGroup];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setImGroup:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setTaskTotalCount:[input readInt32]];
        break;
      }
      case 32: {
        [self setTaskUnfinishedCount:[input readInt32]];
        break;
      }
      case 40: {
        [self setTaskDelayCount:[input readInt32]];
        break;
      }
      case 48: {
        [self setPrjAllDayCount:[input readInt32]];
        break;
      }
      case 56: {
        [self setPrjRemainDayCount:[input readInt32]];
        break;
      }
      case 66: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        PbPrjUserBuilder* subBuilder = [PbPrjUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAppUsers:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        PbCltFriendBuilder* subBuilder = [PbCltFriend builder];
        if (self.hasFrd) {
          [subBuilder mergeFrom:self.frd];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFrd:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        PbPrjFeedBuilder* subBuilder = [PbPrjFeed builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeeds:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        PbPrjLogBuilder* subBuilder = [PbPrjLog builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjLog:[subBuilder buildPartial]];
        break;
      }
      case 106: {
        PbPrjMilestoreBuilder* subBuilder = [PbPrjMilestore builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMilestore:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        PbPrjDepartmentBuilder* subBuilder = [PbPrjDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartment:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasInfo {
  return resultPbPrjDetails.hasInfo;
}
- (PbPrjInfo*) info {
  return resultPbPrjDetails.info;
}
- (PbPrjDetailsBuilder*) setInfo:(PbPrjInfo*) value {
  resultPbPrjDetails.hasInfo = YES;
  resultPbPrjDetails.info = value;
  return self;
}
- (PbPrjDetailsBuilder*) setInfoBuilder:(PbPrjInfoBuilder*) builderForValue {
  return [self setInfo:[builderForValue build]];
}
- (PbPrjDetailsBuilder*) mergeInfo:(PbPrjInfo*) value {
  if (resultPbPrjDetails.hasInfo &&
      resultPbPrjDetails.info != [PbPrjInfo defaultInstance]) {
    resultPbPrjDetails.info =
      [[[PbPrjInfo builderWithPrototype:resultPbPrjDetails.info] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjDetails.info = value;
  }
  resultPbPrjDetails.hasInfo = YES;
  return self;
}
- (PbPrjDetailsBuilder*) clearInfo {
  resultPbPrjDetails.hasInfo = NO;
  resultPbPrjDetails.info = [PbPrjInfo defaultInstance];
  return self;
}
- (BOOL) hasImGroup {
  return resultPbPrjDetails.hasImGroup;
}
- (PbCltGroup*) imGroup {
  return resultPbPrjDetails.imGroup;
}
- (PbPrjDetailsBuilder*) setImGroup:(PbCltGroup*) value {
  resultPbPrjDetails.hasImGroup = YES;
  resultPbPrjDetails.imGroup = value;
  return self;
}
- (PbPrjDetailsBuilder*) setImGroupBuilder:(PbCltGroupBuilder*) builderForValue {
  return [self setImGroup:[builderForValue build]];
}
- (PbPrjDetailsBuilder*) mergeImGroup:(PbCltGroup*) value {
  if (resultPbPrjDetails.hasImGroup &&
      resultPbPrjDetails.imGroup != [PbCltGroup defaultInstance]) {
    resultPbPrjDetails.imGroup =
      [[[PbCltGroup builderWithPrototype:resultPbPrjDetails.imGroup] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjDetails.imGroup = value;
  }
  resultPbPrjDetails.hasImGroup = YES;
  return self;
}
- (PbPrjDetailsBuilder*) clearImGroup {
  resultPbPrjDetails.hasImGroup = NO;
  resultPbPrjDetails.imGroup = [PbCltGroup defaultInstance];
  return self;
}
- (BOOL) hasTaskTotalCount {
  return resultPbPrjDetails.hasTaskTotalCount;
}
- (SInt32) taskTotalCount {
  return resultPbPrjDetails.taskTotalCount;
}
- (PbPrjDetailsBuilder*) setTaskTotalCount:(SInt32) value {
  resultPbPrjDetails.hasTaskTotalCount = YES;
  resultPbPrjDetails.taskTotalCount = value;
  return self;
}
- (PbPrjDetailsBuilder*) clearTaskTotalCount {
  resultPbPrjDetails.hasTaskTotalCount = NO;
  resultPbPrjDetails.taskTotalCount = 0;
  return self;
}
- (BOOL) hasTaskUnfinishedCount {
  return resultPbPrjDetails.hasTaskUnfinishedCount;
}
- (SInt32) taskUnfinishedCount {
  return resultPbPrjDetails.taskUnfinishedCount;
}
- (PbPrjDetailsBuilder*) setTaskUnfinishedCount:(SInt32) value {
  resultPbPrjDetails.hasTaskUnfinishedCount = YES;
  resultPbPrjDetails.taskUnfinishedCount = value;
  return self;
}
- (PbPrjDetailsBuilder*) clearTaskUnfinishedCount {
  resultPbPrjDetails.hasTaskUnfinishedCount = NO;
  resultPbPrjDetails.taskUnfinishedCount = 0;
  return self;
}
- (BOOL) hasTaskDelayCount {
  return resultPbPrjDetails.hasTaskDelayCount;
}
- (SInt32) taskDelayCount {
  return resultPbPrjDetails.taskDelayCount;
}
- (PbPrjDetailsBuilder*) setTaskDelayCount:(SInt32) value {
  resultPbPrjDetails.hasTaskDelayCount = YES;
  resultPbPrjDetails.taskDelayCount = value;
  return self;
}
- (PbPrjDetailsBuilder*) clearTaskDelayCount {
  resultPbPrjDetails.hasTaskDelayCount = NO;
  resultPbPrjDetails.taskDelayCount = 0;
  return self;
}
- (BOOL) hasPrjAllDayCount {
  return resultPbPrjDetails.hasPrjAllDayCount;
}
- (SInt32) prjAllDayCount {
  return resultPbPrjDetails.prjAllDayCount;
}
- (PbPrjDetailsBuilder*) setPrjAllDayCount:(SInt32) value {
  resultPbPrjDetails.hasPrjAllDayCount = YES;
  resultPbPrjDetails.prjAllDayCount = value;
  return self;
}
- (PbPrjDetailsBuilder*) clearPrjAllDayCount {
  resultPbPrjDetails.hasPrjAllDayCount = NO;
  resultPbPrjDetails.prjAllDayCount = 0;
  return self;
}
- (BOOL) hasPrjRemainDayCount {
  return resultPbPrjDetails.hasPrjRemainDayCount;
}
- (SInt32) prjRemainDayCount {
  return resultPbPrjDetails.prjRemainDayCount;
}
- (PbPrjDetailsBuilder*) setPrjRemainDayCount:(SInt32) value {
  resultPbPrjDetails.hasPrjRemainDayCount = YES;
  resultPbPrjDetails.prjRemainDayCount = value;
  return self;
}
- (PbPrjDetailsBuilder*) clearPrjRemainDayCount {
  resultPbPrjDetails.hasPrjRemainDayCount = NO;
  resultPbPrjDetails.prjRemainDayCount = 0;
  return self;
}
- (NSMutableArray *)users {
  return resultPbPrjDetails.usersArray;
}
- (PbPrjUser*)usersAtIndex:(NSUInteger)index {
  return [resultPbPrjDetails usersAtIndex:index];
}
- (PbPrjDetailsBuilder *)addUsers:(PbPrjUser*)value {
  if (resultPbPrjDetails.usersArray == nil) {
    resultPbPrjDetails.usersArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjDetails.usersArray addObject:value];
  return self;
}
- (PbPrjDetailsBuilder *)setUsersArray:(NSArray *)array {
  resultPbPrjDetails.usersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjDetailsBuilder *)clearUsers {
  resultPbPrjDetails.usersArray = nil;
  return self;
}
- (NSMutableArray *)appUsers {
  return resultPbPrjDetails.appUsersArray;
}
- (PbPrjUser*)appUsersAtIndex:(NSUInteger)index {
  return [resultPbPrjDetails appUsersAtIndex:index];
}
- (PbPrjDetailsBuilder *)addAppUsers:(PbPrjUser*)value {
  if (resultPbPrjDetails.appUsersArray == nil) {
    resultPbPrjDetails.appUsersArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjDetails.appUsersArray addObject:value];
  return self;
}
- (PbPrjDetailsBuilder *)setAppUsersArray:(NSArray *)array {
  resultPbPrjDetails.appUsersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjDetailsBuilder *)clearAppUsers {
  resultPbPrjDetails.appUsersArray = nil;
  return self;
}
- (BOOL) hasFrd {
  return resultPbPrjDetails.hasFrd;
}
- (PbCltFriend*) frd {
  return resultPbPrjDetails.frd;
}
- (PbPrjDetailsBuilder*) setFrd:(PbCltFriend*) value {
  resultPbPrjDetails.hasFrd = YES;
  resultPbPrjDetails.frd = value;
  return self;
}
- (PbPrjDetailsBuilder*) setFrdBuilder:(PbCltFriendBuilder*) builderForValue {
  return [self setFrd:[builderForValue build]];
}
- (PbPrjDetailsBuilder*) mergeFrd:(PbCltFriend*) value {
  if (resultPbPrjDetails.hasFrd &&
      resultPbPrjDetails.frd != [PbCltFriend defaultInstance]) {
    resultPbPrjDetails.frd =
      [[[PbCltFriend builderWithPrototype:resultPbPrjDetails.frd] mergeFrom:value] buildPartial];
  } else {
    resultPbPrjDetails.frd = value;
  }
  resultPbPrjDetails.hasFrd = YES;
  return self;
}
- (PbPrjDetailsBuilder*) clearFrd {
  resultPbPrjDetails.hasFrd = NO;
  resultPbPrjDetails.frd = [PbCltFriend defaultInstance];
  return self;
}
- (NSMutableArray *)feeds {
  return resultPbPrjDetails.feedsArray;
}
- (PbPrjFeed*)feedsAtIndex:(NSUInteger)index {
  return [resultPbPrjDetails feedsAtIndex:index];
}
- (PbPrjDetailsBuilder *)addFeeds:(PbPrjFeed*)value {
  if (resultPbPrjDetails.feedsArray == nil) {
    resultPbPrjDetails.feedsArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjDetails.feedsArray addObject:value];
  return self;
}
- (PbPrjDetailsBuilder *)setFeedsArray:(NSArray *)array {
  resultPbPrjDetails.feedsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjDetailsBuilder *)clearFeeds {
  resultPbPrjDetails.feedsArray = nil;
  return self;
}
- (NSMutableArray *)prjLog {
  return resultPbPrjDetails.prjLogArray;
}
- (PbPrjLog*)prjLogAtIndex:(NSUInteger)index {
  return [resultPbPrjDetails prjLogAtIndex:index];
}
- (PbPrjDetailsBuilder *)addPrjLog:(PbPrjLog*)value {
  if (resultPbPrjDetails.prjLogArray == nil) {
    resultPbPrjDetails.prjLogArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjDetails.prjLogArray addObject:value];
  return self;
}
- (PbPrjDetailsBuilder *)setPrjLogArray:(NSArray *)array {
  resultPbPrjDetails.prjLogArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjDetailsBuilder *)clearPrjLog {
  resultPbPrjDetails.prjLogArray = nil;
  return self;
}
- (NSMutableArray *)milestore {
  return resultPbPrjDetails.milestoreArray;
}
- (PbPrjMilestore*)milestoreAtIndex:(NSUInteger)index {
  return [resultPbPrjDetails milestoreAtIndex:index];
}
- (PbPrjDetailsBuilder *)addMilestore:(PbPrjMilestore*)value {
  if (resultPbPrjDetails.milestoreArray == nil) {
    resultPbPrjDetails.milestoreArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjDetails.milestoreArray addObject:value];
  return self;
}
- (PbPrjDetailsBuilder *)setMilestoreArray:(NSArray *)array {
  resultPbPrjDetails.milestoreArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjDetailsBuilder *)clearMilestore {
  resultPbPrjDetails.milestoreArray = nil;
  return self;
}
- (NSMutableArray *)department {
  return resultPbPrjDetails.departmentArray;
}
- (PbPrjDepartment*)departmentAtIndex:(NSUInteger)index {
  return [resultPbPrjDetails departmentAtIndex:index];
}
- (PbPrjDetailsBuilder *)addDepartment:(PbPrjDepartment*)value {
  if (resultPbPrjDetails.departmentArray == nil) {
    resultPbPrjDetails.departmentArray = [[NSMutableArray alloc]init];
  }
  [resultPbPrjDetails.departmentArray addObject:value];
  return self;
}
- (PbPrjDetailsBuilder *)setDepartmentArray:(NSArray *)array {
  resultPbPrjDetails.departmentArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbPrjDetailsBuilder *)clearDepartment {
  resultPbPrjDetails.departmentArray = nil;
  return self;
}
@end

@interface PbUserInfo ()
@property UInt32 uin;
@property (strong) NSString* province;
@property (strong) NSString* city;
@property (strong) NSString* phone;
@property (strong) NSString* name;
@property (strong) NSString* companyType;
@property (strong) NSString* company;
@property (strong) NSString* yearsOfWorking;
@property (strong) NSString* jobType;
@property (strong) NSString* jobTitle;
@property SInt32 influence;
@property SInt32 setting;
@property (strong) NSString* namePinyin;
@property (strong) NSString* namePinyinJ;
@property SInt32 type;
@property (strong) NSString* teaKey;
@property SInt32 goOnDay;
@property SInt32 degree;
@property (strong) NSString* codeId;
@property SInt32 avatarVersion;
@end

@implementation PbUserInfo

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) _value_ {
  hasProvince_ = !!_value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasCompanyType {
  return !!hasCompanyType_;
}
- (void) setHasCompanyType:(BOOL) _value_ {
  hasCompanyType_ = !!_value_;
}
@synthesize companyType;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) _value_ {
  hasCompany_ = !!_value_;
}
@synthesize company;
- (BOOL) hasYearsOfWorking {
  return !!hasYearsOfWorking_;
}
- (void) setHasYearsOfWorking:(BOOL) _value_ {
  hasYearsOfWorking_ = !!_value_;
}
@synthesize yearsOfWorking;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasJobTitle {
  return !!hasJobTitle_;
}
- (void) setHasJobTitle:(BOOL) _value_ {
  hasJobTitle_ = !!_value_;
}
@synthesize jobTitle;
- (BOOL) hasInfluence {
  return !!hasInfluence_;
}
- (void) setHasInfluence:(BOOL) _value_ {
  hasInfluence_ = !!_value_;
}
@synthesize influence;
- (BOOL) hasSetting {
  return !!hasSetting_;
}
- (void) setHasSetting:(BOOL) _value_ {
  hasSetting_ = !!_value_;
}
@synthesize setting;
- (BOOL) hasNamePinyin {
  return !!hasNamePinyin_;
}
- (void) setHasNamePinyin:(BOOL) _value_ {
  hasNamePinyin_ = !!_value_;
}
@synthesize namePinyin;
- (BOOL) hasNamePinyinJ {
  return !!hasNamePinyinJ_;
}
- (void) setHasNamePinyinJ:(BOOL) _value_ {
  hasNamePinyinJ_ = !!_value_;
}
@synthesize namePinyinJ;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasTeaKey {
  return !!hasTeaKey_;
}
- (void) setHasTeaKey:(BOOL) _value_ {
  hasTeaKey_ = !!_value_;
}
@synthesize teaKey;
- (BOOL) hasGoOnDay {
  return !!hasGoOnDay_;
}
- (void) setHasGoOnDay:(BOOL) _value_ {
  hasGoOnDay_ = !!_value_;
}
@synthesize goOnDay;
- (BOOL) hasDegree {
  return !!hasDegree_;
}
- (void) setHasDegree:(BOOL) _value_ {
  hasDegree_ = !!_value_;
}
@synthesize degree;
- (BOOL) hasCodeId {
  return !!hasCodeId_;
}
- (void) setHasCodeId:(BOOL) _value_ {
  hasCodeId_ = !!_value_;
}
@synthesize codeId;
- (BOOL) hasAvatarVersion {
  return !!hasAvatarVersion_;
}
- (void) setHasAvatarVersion:(BOOL) _value_ {
  hasAvatarVersion_ = !!_value_;
}
@synthesize avatarVersion;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.province = @"";
    self.city = @"";
    self.phone = @"";
    self.name = @"";
    self.companyType = @"";
    self.company = @"";
    self.yearsOfWorking = @"";
    self.jobType = @"";
    self.jobTitle = @"";
    self.influence = 0;
    self.setting = 0;
    self.namePinyin = @"";
    self.namePinyinJ = @"";
    self.type = 0;
    self.teaKey = @"";
    self.goOnDay = 0;
    self.degree = 0;
    self.codeId = @"";
    self.avatarVersion = 0;
  }
  return self;
}
static PbUserInfo* defaultPbUserInfoInstance = nil;
+ (void) initialize {
  if (self == [PbUserInfo class]) {
    defaultPbUserInfoInstance = [[PbUserInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasProvince) {
    [output writeString:2 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:3 value:self.city];
  }
  if (self.hasPhone) {
    [output writeString:4 value:self.phone];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasCompanyType) {
    [output writeString:6 value:self.companyType];
  }
  if (self.hasCompany) {
    [output writeString:7 value:self.company];
  }
  if (self.hasYearsOfWorking) {
    [output writeString:8 value:self.yearsOfWorking];
  }
  if (self.hasJobType) {
    [output writeString:9 value:self.jobType];
  }
  if (self.hasJobTitle) {
    [output writeString:10 value:self.jobTitle];
  }
  if (self.hasInfluence) {
    [output writeInt32:11 value:self.influence];
  }
  if (self.hasSetting) {
    [output writeInt32:12 value:self.setting];
  }
  if (self.hasNamePinyin) {
    [output writeString:13 value:self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output writeString:14 value:self.namePinyinJ];
  }
  if (self.hasType) {
    [output writeInt32:15 value:self.type];
  }
  if (self.hasTeaKey) {
    [output writeString:16 value:self.teaKey];
  }
  if (self.hasGoOnDay) {
    [output writeInt32:17 value:self.goOnDay];
  }
  if (self.hasDegree) {
    [output writeInt32:18 value:self.degree];
  }
  if (self.hasCodeId) {
    [output writeString:19 value:self.codeId];
  }
  if (self.hasAvatarVersion) {
    [output writeInt32:20 value:self.avatarVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(2, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(3, self.city);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(4, self.phone);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  if (self.hasCompanyType) {
    size_ += computeStringSize(6, self.companyType);
  }
  if (self.hasCompany) {
    size_ += computeStringSize(7, self.company);
  }
  if (self.hasYearsOfWorking) {
    size_ += computeStringSize(8, self.yearsOfWorking);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(9, self.jobType);
  }
  if (self.hasJobTitle) {
    size_ += computeStringSize(10, self.jobTitle);
  }
  if (self.hasInfluence) {
    size_ += computeInt32Size(11, self.influence);
  }
  if (self.hasSetting) {
    size_ += computeInt32Size(12, self.setting);
  }
  if (self.hasNamePinyin) {
    size_ += computeStringSize(13, self.namePinyin);
  }
  if (self.hasNamePinyinJ) {
    size_ += computeStringSize(14, self.namePinyinJ);
  }
  if (self.hasType) {
    size_ += computeInt32Size(15, self.type);
  }
  if (self.hasTeaKey) {
    size_ += computeStringSize(16, self.teaKey);
  }
  if (self.hasGoOnDay) {
    size_ += computeInt32Size(17, self.goOnDay);
  }
  if (self.hasDegree) {
    size_ += computeInt32Size(18, self.degree);
  }
  if (self.hasCodeId) {
    size_ += computeStringSize(19, self.codeId);
  }
  if (self.hasAvatarVersion) {
    size_ += computeInt32Size(20, self.avatarVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserInfo*) parseFromData:(NSData*) data {
  return (PbUserInfo*)[[[PbUserInfo builder] mergeFromData:data] build];
}
+ (PbUserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserInfo*)[[[PbUserInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserInfo*)[[[PbUserInfo builder] mergeFromInputStream:input] build];
}
+ (PbUserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserInfo*)[[[PbUserInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserInfo*)[[[PbUserInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserInfo*)[[[PbUserInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserInfoBuilder*) builder {
  return [[PbUserInfoBuilder alloc] init];
}
+ (PbUserInfoBuilder*) builderWithPrototype:(PbUserInfo*) prototype {
  return [[PbUserInfo builder] mergeFrom:prototype];
}
- (PbUserInfoBuilder*) builder {
  return [PbUserInfo builder];
}
- (PbUserInfoBuilder*) toBuilder {
  return [PbUserInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCompanyType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyType", self.companyType];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@: %@\n", indent, @"company", self.company];
  }
  if (self.hasYearsOfWorking) {
    [output appendFormat:@"%@%@: %@\n", indent, @"yearsOfWorking", self.yearsOfWorking];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasJobTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobTitle", self.jobTitle];
  }
  if (self.hasInfluence) {
    [output appendFormat:@"%@%@: %@\n", indent, @"influence", [NSNumber numberWithInteger:self.influence]];
  }
  if (self.hasSetting) {
    [output appendFormat:@"%@%@: %@\n", indent, @"setting", [NSNumber numberWithInteger:self.setting]];
  }
  if (self.hasNamePinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyin", self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyinJ", self.namePinyinJ];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasTeaKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teaKey", self.teaKey];
  }
  if (self.hasGoOnDay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"goOnDay", [NSNumber numberWithInteger:self.goOnDay]];
  }
  if (self.hasDegree) {
    [output appendFormat:@"%@%@: %@\n", indent, @"degree", [NSNumber numberWithInteger:self.degree]];
  }
  if (self.hasCodeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"codeId", self.codeId];
  }
  if (self.hasAvatarVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatarVersion", [NSNumber numberWithInteger:self.avatarVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasProvince) {
    [dictionary setObject: self.province forKey: @"province"];
  }
  if (self.hasCity) {
    [dictionary setObject: self.city forKey: @"city"];
  }
  if (self.hasPhone) {
    [dictionary setObject: self.phone forKey: @"phone"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasCompanyType) {
    [dictionary setObject: self.companyType forKey: @"companyType"];
  }
  if (self.hasCompany) {
    [dictionary setObject: self.company forKey: @"company"];
  }
  if (self.hasYearsOfWorking) {
    [dictionary setObject: self.yearsOfWorking forKey: @"yearsOfWorking"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasJobTitle) {
    [dictionary setObject: self.jobTitle forKey: @"jobTitle"];
  }
  if (self.hasInfluence) {
    [dictionary setObject: [NSNumber numberWithInteger:self.influence] forKey: @"influence"];
  }
  if (self.hasSetting) {
    [dictionary setObject: [NSNumber numberWithInteger:self.setting] forKey: @"setting"];
  }
  if (self.hasNamePinyin) {
    [dictionary setObject: self.namePinyin forKey: @"namePinyin"];
  }
  if (self.hasNamePinyinJ) {
    [dictionary setObject: self.namePinyinJ forKey: @"namePinyinJ"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasTeaKey) {
    [dictionary setObject: self.teaKey forKey: @"teaKey"];
  }
  if (self.hasGoOnDay) {
    [dictionary setObject: [NSNumber numberWithInteger:self.goOnDay] forKey: @"goOnDay"];
  }
  if (self.hasDegree) {
    [dictionary setObject: [NSNumber numberWithInteger:self.degree] forKey: @"degree"];
  }
  if (self.hasCodeId) {
    [dictionary setObject: self.codeId forKey: @"codeId"];
  }
  if (self.hasAvatarVersion) {
    [dictionary setObject: [NSNumber numberWithInteger:self.avatarVersion] forKey: @"avatarVersion"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserInfo class]]) {
    return NO;
  }
  PbUserInfo *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCompanyType == otherMessage.hasCompanyType &&
      (!self.hasCompanyType || [self.companyType isEqual:otherMessage.companyType]) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      self.hasYearsOfWorking == otherMessage.hasYearsOfWorking &&
      (!self.hasYearsOfWorking || [self.yearsOfWorking isEqual:otherMessage.yearsOfWorking]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasJobTitle == otherMessage.hasJobTitle &&
      (!self.hasJobTitle || [self.jobTitle isEqual:otherMessage.jobTitle]) &&
      self.hasInfluence == otherMessage.hasInfluence &&
      (!self.hasInfluence || self.influence == otherMessage.influence) &&
      self.hasSetting == otherMessage.hasSetting &&
      (!self.hasSetting || self.setting == otherMessage.setting) &&
      self.hasNamePinyin == otherMessage.hasNamePinyin &&
      (!self.hasNamePinyin || [self.namePinyin isEqual:otherMessage.namePinyin]) &&
      self.hasNamePinyinJ == otherMessage.hasNamePinyinJ &&
      (!self.hasNamePinyinJ || [self.namePinyinJ isEqual:otherMessage.namePinyinJ]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasTeaKey == otherMessage.hasTeaKey &&
      (!self.hasTeaKey || [self.teaKey isEqual:otherMessage.teaKey]) &&
      self.hasGoOnDay == otherMessage.hasGoOnDay &&
      (!self.hasGoOnDay || self.goOnDay == otherMessage.goOnDay) &&
      self.hasDegree == otherMessage.hasDegree &&
      (!self.hasDegree || self.degree == otherMessage.degree) &&
      self.hasCodeId == otherMessage.hasCodeId &&
      (!self.hasCodeId || [self.codeId isEqual:otherMessage.codeId]) &&
      self.hasAvatarVersion == otherMessage.hasAvatarVersion &&
      (!self.hasAvatarVersion || self.avatarVersion == otherMessage.avatarVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCompanyType) {
    hashCode = hashCode * 31 + [self.companyType hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  if (self.hasYearsOfWorking) {
    hashCode = hashCode * 31 + [self.yearsOfWorking hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasJobTitle) {
    hashCode = hashCode * 31 + [self.jobTitle hash];
  }
  if (self.hasInfluence) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.influence] hash];
  }
  if (self.hasSetting) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.setting] hash];
  }
  if (self.hasNamePinyin) {
    hashCode = hashCode * 31 + [self.namePinyin hash];
  }
  if (self.hasNamePinyinJ) {
    hashCode = hashCode * 31 + [self.namePinyinJ hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasTeaKey) {
    hashCode = hashCode * 31 + [self.teaKey hash];
  }
  if (self.hasGoOnDay) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.goOnDay] hash];
  }
  if (self.hasDegree) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.degree] hash];
  }
  if (self.hasCodeId) {
    hashCode = hashCode * 31 + [self.codeId hash];
  }
  if (self.hasAvatarVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.avatarVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserInfoBuilder()
@property (strong) PbUserInfo* resultPbUserInfo;
@end

@implementation PbUserInfoBuilder
@synthesize resultPbUserInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserInfo = [[PbUserInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserInfo;
}
- (PbUserInfoBuilder*) clear {
  self.resultPbUserInfo = [[PbUserInfo alloc] init];
  return self;
}
- (PbUserInfoBuilder*) clone {
  return [PbUserInfo builderWithPrototype:resultPbUserInfo];
}
- (PbUserInfo*) defaultInstance {
  return [PbUserInfo defaultInstance];
}
- (PbUserInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserInfo*) buildPartial {
  PbUserInfo* returnMe = resultPbUserInfo;
  self.resultPbUserInfo = nil;
  return returnMe;
}
- (PbUserInfoBuilder*) mergeFrom:(PbUserInfo*) other {
  if (other == [PbUserInfo defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCompanyType) {
    [self setCompanyType:other.companyType];
  }
  if (other.hasCompany) {
    [self setCompany:other.company];
  }
  if (other.hasYearsOfWorking) {
    [self setYearsOfWorking:other.yearsOfWorking];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasJobTitle) {
    [self setJobTitle:other.jobTitle];
  }
  if (other.hasInfluence) {
    [self setInfluence:other.influence];
  }
  if (other.hasSetting) {
    [self setSetting:other.setting];
  }
  if (other.hasNamePinyin) {
    [self setNamePinyin:other.namePinyin];
  }
  if (other.hasNamePinyinJ) {
    [self setNamePinyinJ:other.namePinyinJ];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasTeaKey) {
    [self setTeaKey:other.teaKey];
  }
  if (other.hasGoOnDay) {
    [self setGoOnDay:other.goOnDay];
  }
  if (other.hasDegree) {
    [self setDegree:other.degree];
  }
  if (other.hasCodeId) {
    [self setCodeId:other.codeId];
  }
  if (other.hasAvatarVersion) {
    [self setAvatarVersion:other.avatarVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 18: {
        [self setProvince:[input readString]];
        break;
      }
      case 26: {
        [self setCity:[input readString]];
        break;
      }
      case 34: {
        [self setPhone:[input readString]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 50: {
        [self setCompanyType:[input readString]];
        break;
      }
      case 58: {
        [self setCompany:[input readString]];
        break;
      }
      case 66: {
        [self setYearsOfWorking:[input readString]];
        break;
      }
      case 74: {
        [self setJobType:[input readString]];
        break;
      }
      case 82: {
        [self setJobTitle:[input readString]];
        break;
      }
      case 88: {
        [self setInfluence:[input readInt32]];
        break;
      }
      case 96: {
        [self setSetting:[input readInt32]];
        break;
      }
      case 106: {
        [self setNamePinyin:[input readString]];
        break;
      }
      case 114: {
        [self setNamePinyinJ:[input readString]];
        break;
      }
      case 120: {
        [self setType:[input readInt32]];
        break;
      }
      case 130: {
        [self setTeaKey:[input readString]];
        break;
      }
      case 136: {
        [self setGoOnDay:[input readInt32]];
        break;
      }
      case 144: {
        [self setDegree:[input readInt32]];
        break;
      }
      case 154: {
        [self setCodeId:[input readString]];
        break;
      }
      case 160: {
        [self setAvatarVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbUserInfo.hasUin;
}
- (UInt32) uin {
  return resultPbUserInfo.uin;
}
- (PbUserInfoBuilder*) setUin:(UInt32) value {
  resultPbUserInfo.hasUin = YES;
  resultPbUserInfo.uin = value;
  return self;
}
- (PbUserInfoBuilder*) clearUin {
  resultPbUserInfo.hasUin = NO;
  resultPbUserInfo.uin = 0;
  return self;
}
- (BOOL) hasProvince {
  return resultPbUserInfo.hasProvince;
}
- (NSString*) province {
  return resultPbUserInfo.province;
}
- (PbUserInfoBuilder*) setProvince:(NSString*) value {
  resultPbUserInfo.hasProvince = YES;
  resultPbUserInfo.province = value;
  return self;
}
- (PbUserInfoBuilder*) clearProvince {
  resultPbUserInfo.hasProvince = NO;
  resultPbUserInfo.province = @"";
  return self;
}
- (BOOL) hasCity {
  return resultPbUserInfo.hasCity;
}
- (NSString*) city {
  return resultPbUserInfo.city;
}
- (PbUserInfoBuilder*) setCity:(NSString*) value {
  resultPbUserInfo.hasCity = YES;
  resultPbUserInfo.city = value;
  return self;
}
- (PbUserInfoBuilder*) clearCity {
  resultPbUserInfo.hasCity = NO;
  resultPbUserInfo.city = @"";
  return self;
}
- (BOOL) hasPhone {
  return resultPbUserInfo.hasPhone;
}
- (NSString*) phone {
  return resultPbUserInfo.phone;
}
- (PbUserInfoBuilder*) setPhone:(NSString*) value {
  resultPbUserInfo.hasPhone = YES;
  resultPbUserInfo.phone = value;
  return self;
}
- (PbUserInfoBuilder*) clearPhone {
  resultPbUserInfo.hasPhone = NO;
  resultPbUserInfo.phone = @"";
  return self;
}
- (BOOL) hasName {
  return resultPbUserInfo.hasName;
}
- (NSString*) name {
  return resultPbUserInfo.name;
}
- (PbUserInfoBuilder*) setName:(NSString*) value {
  resultPbUserInfo.hasName = YES;
  resultPbUserInfo.name = value;
  return self;
}
- (PbUserInfoBuilder*) clearName {
  resultPbUserInfo.hasName = NO;
  resultPbUserInfo.name = @"";
  return self;
}
- (BOOL) hasCompanyType {
  return resultPbUserInfo.hasCompanyType;
}
- (NSString*) companyType {
  return resultPbUserInfo.companyType;
}
- (PbUserInfoBuilder*) setCompanyType:(NSString*) value {
  resultPbUserInfo.hasCompanyType = YES;
  resultPbUserInfo.companyType = value;
  return self;
}
- (PbUserInfoBuilder*) clearCompanyType {
  resultPbUserInfo.hasCompanyType = NO;
  resultPbUserInfo.companyType = @"";
  return self;
}
- (BOOL) hasCompany {
  return resultPbUserInfo.hasCompany;
}
- (NSString*) company {
  return resultPbUserInfo.company;
}
- (PbUserInfoBuilder*) setCompany:(NSString*) value {
  resultPbUserInfo.hasCompany = YES;
  resultPbUserInfo.company = value;
  return self;
}
- (PbUserInfoBuilder*) clearCompany {
  resultPbUserInfo.hasCompany = NO;
  resultPbUserInfo.company = @"";
  return self;
}
- (BOOL) hasYearsOfWorking {
  return resultPbUserInfo.hasYearsOfWorking;
}
- (NSString*) yearsOfWorking {
  return resultPbUserInfo.yearsOfWorking;
}
- (PbUserInfoBuilder*) setYearsOfWorking:(NSString*) value {
  resultPbUserInfo.hasYearsOfWorking = YES;
  resultPbUserInfo.yearsOfWorking = value;
  return self;
}
- (PbUserInfoBuilder*) clearYearsOfWorking {
  resultPbUserInfo.hasYearsOfWorking = NO;
  resultPbUserInfo.yearsOfWorking = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbUserInfo.hasJobType;
}
- (NSString*) jobType {
  return resultPbUserInfo.jobType;
}
- (PbUserInfoBuilder*) setJobType:(NSString*) value {
  resultPbUserInfo.hasJobType = YES;
  resultPbUserInfo.jobType = value;
  return self;
}
- (PbUserInfoBuilder*) clearJobType {
  resultPbUserInfo.hasJobType = NO;
  resultPbUserInfo.jobType = @"";
  return self;
}
- (BOOL) hasJobTitle {
  return resultPbUserInfo.hasJobTitle;
}
- (NSString*) jobTitle {
  return resultPbUserInfo.jobTitle;
}
- (PbUserInfoBuilder*) setJobTitle:(NSString*) value {
  resultPbUserInfo.hasJobTitle = YES;
  resultPbUserInfo.jobTitle = value;
  return self;
}
- (PbUserInfoBuilder*) clearJobTitle {
  resultPbUserInfo.hasJobTitle = NO;
  resultPbUserInfo.jobTitle = @"";
  return self;
}
- (BOOL) hasInfluence {
  return resultPbUserInfo.hasInfluence;
}
- (SInt32) influence {
  return resultPbUserInfo.influence;
}
- (PbUserInfoBuilder*) setInfluence:(SInt32) value {
  resultPbUserInfo.hasInfluence = YES;
  resultPbUserInfo.influence = value;
  return self;
}
- (PbUserInfoBuilder*) clearInfluence {
  resultPbUserInfo.hasInfluence = NO;
  resultPbUserInfo.influence = 0;
  return self;
}
- (BOOL) hasSetting {
  return resultPbUserInfo.hasSetting;
}
- (SInt32) setting {
  return resultPbUserInfo.setting;
}
- (PbUserInfoBuilder*) setSetting:(SInt32) value {
  resultPbUserInfo.hasSetting = YES;
  resultPbUserInfo.setting = value;
  return self;
}
- (PbUserInfoBuilder*) clearSetting {
  resultPbUserInfo.hasSetting = NO;
  resultPbUserInfo.setting = 0;
  return self;
}
- (BOOL) hasNamePinyin {
  return resultPbUserInfo.hasNamePinyin;
}
- (NSString*) namePinyin {
  return resultPbUserInfo.namePinyin;
}
- (PbUserInfoBuilder*) setNamePinyin:(NSString*) value {
  resultPbUserInfo.hasNamePinyin = YES;
  resultPbUserInfo.namePinyin = value;
  return self;
}
- (PbUserInfoBuilder*) clearNamePinyin {
  resultPbUserInfo.hasNamePinyin = NO;
  resultPbUserInfo.namePinyin = @"";
  return self;
}
- (BOOL) hasNamePinyinJ {
  return resultPbUserInfo.hasNamePinyinJ;
}
- (NSString*) namePinyinJ {
  return resultPbUserInfo.namePinyinJ;
}
- (PbUserInfoBuilder*) setNamePinyinJ:(NSString*) value {
  resultPbUserInfo.hasNamePinyinJ = YES;
  resultPbUserInfo.namePinyinJ = value;
  return self;
}
- (PbUserInfoBuilder*) clearNamePinyinJ {
  resultPbUserInfo.hasNamePinyinJ = NO;
  resultPbUserInfo.namePinyinJ = @"";
  return self;
}
- (BOOL) hasType {
  return resultPbUserInfo.hasType;
}
- (SInt32) type {
  return resultPbUserInfo.type;
}
- (PbUserInfoBuilder*) setType:(SInt32) value {
  resultPbUserInfo.hasType = YES;
  resultPbUserInfo.type = value;
  return self;
}
- (PbUserInfoBuilder*) clearType {
  resultPbUserInfo.hasType = NO;
  resultPbUserInfo.type = 0;
  return self;
}
- (BOOL) hasTeaKey {
  return resultPbUserInfo.hasTeaKey;
}
- (NSString*) teaKey {
  return resultPbUserInfo.teaKey;
}
- (PbUserInfoBuilder*) setTeaKey:(NSString*) value {
  resultPbUserInfo.hasTeaKey = YES;
  resultPbUserInfo.teaKey = value;
  return self;
}
- (PbUserInfoBuilder*) clearTeaKey {
  resultPbUserInfo.hasTeaKey = NO;
  resultPbUserInfo.teaKey = @"";
  return self;
}
- (BOOL) hasGoOnDay {
  return resultPbUserInfo.hasGoOnDay;
}
- (SInt32) goOnDay {
  return resultPbUserInfo.goOnDay;
}
- (PbUserInfoBuilder*) setGoOnDay:(SInt32) value {
  resultPbUserInfo.hasGoOnDay = YES;
  resultPbUserInfo.goOnDay = value;
  return self;
}
- (PbUserInfoBuilder*) clearGoOnDay {
  resultPbUserInfo.hasGoOnDay = NO;
  resultPbUserInfo.goOnDay = 0;
  return self;
}
- (BOOL) hasDegree {
  return resultPbUserInfo.hasDegree;
}
- (SInt32) degree {
  return resultPbUserInfo.degree;
}
- (PbUserInfoBuilder*) setDegree:(SInt32) value {
  resultPbUserInfo.hasDegree = YES;
  resultPbUserInfo.degree = value;
  return self;
}
- (PbUserInfoBuilder*) clearDegree {
  resultPbUserInfo.hasDegree = NO;
  resultPbUserInfo.degree = 0;
  return self;
}
- (BOOL) hasCodeId {
  return resultPbUserInfo.hasCodeId;
}
- (NSString*) codeId {
  return resultPbUserInfo.codeId;
}
- (PbUserInfoBuilder*) setCodeId:(NSString*) value {
  resultPbUserInfo.hasCodeId = YES;
  resultPbUserInfo.codeId = value;
  return self;
}
- (PbUserInfoBuilder*) clearCodeId {
  resultPbUserInfo.hasCodeId = NO;
  resultPbUserInfo.codeId = @"";
  return self;
}
- (BOOL) hasAvatarVersion {
  return resultPbUserInfo.hasAvatarVersion;
}
- (SInt32) avatarVersion {
  return resultPbUserInfo.avatarVersion;
}
- (PbUserInfoBuilder*) setAvatarVersion:(SInt32) value {
  resultPbUserInfo.hasAvatarVersion = YES;
  resultPbUserInfo.avatarVersion = value;
  return self;
}
- (PbUserInfoBuilder*) clearAvatarVersion {
  resultPbUserInfo.hasAvatarVersion = NO;
  resultPbUserInfo.avatarVersion = 0;
  return self;
}
@end

@interface PbUserExtra ()
@property SInt32 autoIncId;
@property SInt32 lastReqTime;
@end

@implementation PbUserExtra

- (BOOL) hasAutoIncId {
  return !!hasAutoIncId_;
}
- (void) setHasAutoIncId:(BOOL) _value_ {
  hasAutoIncId_ = !!_value_;
}
@synthesize autoIncId;
- (BOOL) hasLastReqTime {
  return !!hasLastReqTime_;
}
- (void) setHasLastReqTime:(BOOL) _value_ {
  hasLastReqTime_ = !!_value_;
}
@synthesize lastReqTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.autoIncId = 0;
    self.lastReqTime = 0;
  }
  return self;
}
static PbUserExtra* defaultPbUserExtraInstance = nil;
+ (void) initialize {
  if (self == [PbUserExtra class]) {
    defaultPbUserExtraInstance = [[PbUserExtra alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserExtraInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserExtraInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAutoIncId) {
    [output writeInt32:1 value:self.autoIncId];
  }
  if (self.hasLastReqTime) {
    [output writeInt32:2 value:self.lastReqTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAutoIncId) {
    size_ += computeInt32Size(1, self.autoIncId);
  }
  if (self.hasLastReqTime) {
    size_ += computeInt32Size(2, self.lastReqTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserExtra*) parseFromData:(NSData*) data {
  return (PbUserExtra*)[[[PbUserExtra builder] mergeFromData:data] build];
}
+ (PbUserExtra*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserExtra*)[[[PbUserExtra builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserExtra*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserExtra*)[[[PbUserExtra builder] mergeFromInputStream:input] build];
}
+ (PbUserExtra*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserExtra*)[[[PbUserExtra builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserExtra*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserExtra*)[[[PbUserExtra builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserExtra*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserExtra*)[[[PbUserExtra builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserExtraBuilder*) builder {
  return [[PbUserExtraBuilder alloc] init];
}
+ (PbUserExtraBuilder*) builderWithPrototype:(PbUserExtra*) prototype {
  return [[PbUserExtra builder] mergeFrom:prototype];
}
- (PbUserExtraBuilder*) builder {
  return [PbUserExtra builder];
}
- (PbUserExtraBuilder*) toBuilder {
  return [PbUserExtra builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAutoIncId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"autoIncId", [NSNumber numberWithInteger:self.autoIncId]];
  }
  if (self.hasLastReqTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastReqTime", [NSNumber numberWithInteger:self.lastReqTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAutoIncId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.autoIncId] forKey: @"autoIncId"];
  }
  if (self.hasLastReqTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.lastReqTime] forKey: @"lastReqTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserExtra class]]) {
    return NO;
  }
  PbUserExtra *otherMessage = other;
  return
      self.hasAutoIncId == otherMessage.hasAutoIncId &&
      (!self.hasAutoIncId || self.autoIncId == otherMessage.autoIncId) &&
      self.hasLastReqTime == otherMessage.hasLastReqTime &&
      (!self.hasLastReqTime || self.lastReqTime == otherMessage.lastReqTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAutoIncId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.autoIncId] hash];
  }
  if (self.hasLastReqTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.lastReqTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserExtraBuilder()
@property (strong) PbUserExtra* resultPbUserExtra;
@end

@implementation PbUserExtraBuilder
@synthesize resultPbUserExtra;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserExtra = [[PbUserExtra alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserExtra;
}
- (PbUserExtraBuilder*) clear {
  self.resultPbUserExtra = [[PbUserExtra alloc] init];
  return self;
}
- (PbUserExtraBuilder*) clone {
  return [PbUserExtra builderWithPrototype:resultPbUserExtra];
}
- (PbUserExtra*) defaultInstance {
  return [PbUserExtra defaultInstance];
}
- (PbUserExtra*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserExtra*) buildPartial {
  PbUserExtra* returnMe = resultPbUserExtra;
  self.resultPbUserExtra = nil;
  return returnMe;
}
- (PbUserExtraBuilder*) mergeFrom:(PbUserExtra*) other {
  if (other == [PbUserExtra defaultInstance]) {
    return self;
  }
  if (other.hasAutoIncId) {
    [self setAutoIncId:other.autoIncId];
  }
  if (other.hasLastReqTime) {
    [self setLastReqTime:other.lastReqTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserExtraBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserExtraBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAutoIncId:[input readInt32]];
        break;
      }
      case 16: {
        [self setLastReqTime:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAutoIncId {
  return resultPbUserExtra.hasAutoIncId;
}
- (SInt32) autoIncId {
  return resultPbUserExtra.autoIncId;
}
- (PbUserExtraBuilder*) setAutoIncId:(SInt32) value {
  resultPbUserExtra.hasAutoIncId = YES;
  resultPbUserExtra.autoIncId = value;
  return self;
}
- (PbUserExtraBuilder*) clearAutoIncId {
  resultPbUserExtra.hasAutoIncId = NO;
  resultPbUserExtra.autoIncId = 0;
  return self;
}
- (BOOL) hasLastReqTime {
  return resultPbUserExtra.hasLastReqTime;
}
- (SInt32) lastReqTime {
  return resultPbUserExtra.lastReqTime;
}
- (PbUserExtraBuilder*) setLastReqTime:(SInt32) value {
  resultPbUserExtra.hasLastReqTime = YES;
  resultPbUserExtra.lastReqTime = value;
  return self;
}
- (PbUserExtraBuilder*) clearLastReqTime {
  resultPbUserExtra.hasLastReqTime = NO;
  resultPbUserExtra.lastReqTime = 0;
  return self;
}
@end

@interface PbUserFriend ()
@property UInt32 uin;
@property (strong) NSString* name;
@property (strong) NSString* remark;
@property (strong) NSString* phone;
@property (strong) NSString* msg;
@property SInt32 flag;
@property (strong) NSString* groupId;
@property (strong) NSString* initial;
@property SInt32 weight;
@property (strong) NSString* namePinyin;
@property (strong) NSString* namePinyinJ;
@property (strong) NSString* remarkPinyin;
@property (strong) NSString* remarkPinyinJ;
@property SInt32 addTime;
@property (strong) NSString* province;
@property (strong) NSString* city;
@property (strong) NSString* companyType;
@property (strong) NSString* jobType;
@property SInt32 validationAddTime;
@end

@implementation PbUserFriend

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasRemark {
  return !!hasRemark_;
}
- (void) setHasRemark:(BOOL) _value_ {
  hasRemark_ = !!_value_;
}
@synthesize remark;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) _value_ {
  hasMsg_ = !!_value_;
}
@synthesize msg;
- (BOOL) hasFlag {
  return !!hasFlag_;
}
- (void) setHasFlag:(BOOL) _value_ {
  hasFlag_ = !!_value_;
}
@synthesize flag;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasInitial {
  return !!hasInitial_;
}
- (void) setHasInitial:(BOOL) _value_ {
  hasInitial_ = !!_value_;
}
@synthesize initial;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value_ {
  hasWeight_ = !!_value_;
}
@synthesize weight;
- (BOOL) hasNamePinyin {
  return !!hasNamePinyin_;
}
- (void) setHasNamePinyin:(BOOL) _value_ {
  hasNamePinyin_ = !!_value_;
}
@synthesize namePinyin;
- (BOOL) hasNamePinyinJ {
  return !!hasNamePinyinJ_;
}
- (void) setHasNamePinyinJ:(BOOL) _value_ {
  hasNamePinyinJ_ = !!_value_;
}
@synthesize namePinyinJ;
- (BOOL) hasRemarkPinyin {
  return !!hasRemarkPinyin_;
}
- (void) setHasRemarkPinyin:(BOOL) _value_ {
  hasRemarkPinyin_ = !!_value_;
}
@synthesize remarkPinyin;
- (BOOL) hasRemarkPinyinJ {
  return !!hasRemarkPinyinJ_;
}
- (void) setHasRemarkPinyinJ:(BOOL) _value_ {
  hasRemarkPinyinJ_ = !!_value_;
}
@synthesize remarkPinyinJ;
- (BOOL) hasAddTime {
  return !!hasAddTime_;
}
- (void) setHasAddTime:(BOOL) _value_ {
  hasAddTime_ = !!_value_;
}
@synthesize addTime;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) _value_ {
  hasProvince_ = !!_value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (BOOL) hasCompanyType {
  return !!hasCompanyType_;
}
- (void) setHasCompanyType:(BOOL) _value_ {
  hasCompanyType_ = !!_value_;
}
@synthesize companyType;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasValidationAddTime {
  return !!hasValidationAddTime_;
}
- (void) setHasValidationAddTime:(BOOL) _value_ {
  hasValidationAddTime_ = !!_value_;
}
@synthesize validationAddTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.name = @"";
    self.remark = @"";
    self.phone = @"";
    self.msg = @"";
    self.flag = 0;
    self.groupId = @"";
    self.initial = @"";
    self.weight = 0;
    self.namePinyin = @"";
    self.namePinyinJ = @"";
    self.remarkPinyin = @"";
    self.remarkPinyinJ = @"";
    self.addTime = 0;
    self.province = @"";
    self.city = @"";
    self.companyType = @"";
    self.jobType = @"";
    self.validationAddTime = 0;
  }
  return self;
}
static PbUserFriend* defaultPbUserFriendInstance = nil;
+ (void) initialize {
  if (self == [PbUserFriend class]) {
    defaultPbUserFriendInstance = [[PbUserFriend alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserFriendInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserFriendInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasRemark) {
    [output writeString:3 value:self.remark];
  }
  if (self.hasPhone) {
    [output writeString:4 value:self.phone];
  }
  if (self.hasMsg) {
    [output writeString:5 value:self.msg];
  }
  if (self.hasFlag) {
    [output writeInt32:6 value:self.flag];
  }
  if (self.hasGroupId) {
    [output writeString:7 value:self.groupId];
  }
  if (self.hasInitial) {
    [output writeString:8 value:self.initial];
  }
  if (self.hasWeight) {
    [output writeInt32:9 value:self.weight];
  }
  if (self.hasNamePinyin) {
    [output writeString:10 value:self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output writeString:11 value:self.namePinyinJ];
  }
  if (self.hasRemarkPinyin) {
    [output writeString:12 value:self.remarkPinyin];
  }
  if (self.hasRemarkPinyinJ) {
    [output writeString:13 value:self.remarkPinyinJ];
  }
  if (self.hasAddTime) {
    [output writeInt32:14 value:self.addTime];
  }
  if (self.hasProvince) {
    [output writeString:15 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:16 value:self.city];
  }
  if (self.hasCompanyType) {
    [output writeString:17 value:self.companyType];
  }
  if (self.hasJobType) {
    [output writeString:18 value:self.jobType];
  }
  if (self.hasValidationAddTime) {
    [output writeInt32:19 value:self.validationAddTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasRemark) {
    size_ += computeStringSize(3, self.remark);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(4, self.phone);
  }
  if (self.hasMsg) {
    size_ += computeStringSize(5, self.msg);
  }
  if (self.hasFlag) {
    size_ += computeInt32Size(6, self.flag);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(7, self.groupId);
  }
  if (self.hasInitial) {
    size_ += computeStringSize(8, self.initial);
  }
  if (self.hasWeight) {
    size_ += computeInt32Size(9, self.weight);
  }
  if (self.hasNamePinyin) {
    size_ += computeStringSize(10, self.namePinyin);
  }
  if (self.hasNamePinyinJ) {
    size_ += computeStringSize(11, self.namePinyinJ);
  }
  if (self.hasRemarkPinyin) {
    size_ += computeStringSize(12, self.remarkPinyin);
  }
  if (self.hasRemarkPinyinJ) {
    size_ += computeStringSize(13, self.remarkPinyinJ);
  }
  if (self.hasAddTime) {
    size_ += computeInt32Size(14, self.addTime);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(15, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(16, self.city);
  }
  if (self.hasCompanyType) {
    size_ += computeStringSize(17, self.companyType);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(18, self.jobType);
  }
  if (self.hasValidationAddTime) {
    size_ += computeInt32Size(19, self.validationAddTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserFriend*) parseFromData:(NSData*) data {
  return (PbUserFriend*)[[[PbUserFriend builder] mergeFromData:data] build];
}
+ (PbUserFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserFriend*)[[[PbUserFriend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserFriend*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserFriend*)[[[PbUserFriend builder] mergeFromInputStream:input] build];
}
+ (PbUserFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserFriend*)[[[PbUserFriend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserFriend*)[[[PbUserFriend builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserFriend*)[[[PbUserFriend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserFriendBuilder*) builder {
  return [[PbUserFriendBuilder alloc] init];
}
+ (PbUserFriendBuilder*) builderWithPrototype:(PbUserFriend*) prototype {
  return [[PbUserFriend builder] mergeFrom:prototype];
}
- (PbUserFriendBuilder*) builder {
  return [PbUserFriend builder];
}
- (PbUserFriendBuilder*) toBuilder {
  return [PbUserFriend builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remark", self.remark];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msg", self.msg];
  }
  if (self.hasFlag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"flag", [NSNumber numberWithInteger:self.flag]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasInitial) {
    [output appendFormat:@"%@%@: %@\n", indent, @"initial", self.initial];
  }
  if (self.hasWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weight", [NSNumber numberWithInteger:self.weight]];
  }
  if (self.hasNamePinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyin", self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyinJ", self.namePinyinJ];
  }
  if (self.hasRemarkPinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remarkPinyin", self.remarkPinyin];
  }
  if (self.hasRemarkPinyinJ) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remarkPinyinJ", self.remarkPinyinJ];
  }
  if (self.hasAddTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"addTime", [NSNumber numberWithInteger:self.addTime]];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  if (self.hasCompanyType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyType", self.companyType];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasValidationAddTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"validationAddTime", [NSNumber numberWithInteger:self.validationAddTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasRemark) {
    [dictionary setObject: self.remark forKey: @"remark"];
  }
  if (self.hasPhone) {
    [dictionary setObject: self.phone forKey: @"phone"];
  }
  if (self.hasMsg) {
    [dictionary setObject: self.msg forKey: @"msg"];
  }
  if (self.hasFlag) {
    [dictionary setObject: [NSNumber numberWithInteger:self.flag] forKey: @"flag"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasInitial) {
    [dictionary setObject: self.initial forKey: @"initial"];
  }
  if (self.hasWeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weight] forKey: @"weight"];
  }
  if (self.hasNamePinyin) {
    [dictionary setObject: self.namePinyin forKey: @"namePinyin"];
  }
  if (self.hasNamePinyinJ) {
    [dictionary setObject: self.namePinyinJ forKey: @"namePinyinJ"];
  }
  if (self.hasRemarkPinyin) {
    [dictionary setObject: self.remarkPinyin forKey: @"remarkPinyin"];
  }
  if (self.hasRemarkPinyinJ) {
    [dictionary setObject: self.remarkPinyinJ forKey: @"remarkPinyinJ"];
  }
  if (self.hasAddTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.addTime] forKey: @"addTime"];
  }
  if (self.hasProvince) {
    [dictionary setObject: self.province forKey: @"province"];
  }
  if (self.hasCity) {
    [dictionary setObject: self.city forKey: @"city"];
  }
  if (self.hasCompanyType) {
    [dictionary setObject: self.companyType forKey: @"companyType"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasValidationAddTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.validationAddTime] forKey: @"validationAddTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserFriend class]]) {
    return NO;
  }
  PbUserFriend *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasRemark == otherMessage.hasRemark &&
      (!self.hasRemark || [self.remark isEqual:otherMessage.remark]) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      self.hasFlag == otherMessage.hasFlag &&
      (!self.hasFlag || self.flag == otherMessage.flag) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasInitial == otherMessage.hasInitial &&
      (!self.hasInitial || [self.initial isEqual:otherMessage.initial]) &&
      self.hasWeight == otherMessage.hasWeight &&
      (!self.hasWeight || self.weight == otherMessage.weight) &&
      self.hasNamePinyin == otherMessage.hasNamePinyin &&
      (!self.hasNamePinyin || [self.namePinyin isEqual:otherMessage.namePinyin]) &&
      self.hasNamePinyinJ == otherMessage.hasNamePinyinJ &&
      (!self.hasNamePinyinJ || [self.namePinyinJ isEqual:otherMessage.namePinyinJ]) &&
      self.hasRemarkPinyin == otherMessage.hasRemarkPinyin &&
      (!self.hasRemarkPinyin || [self.remarkPinyin isEqual:otherMessage.remarkPinyin]) &&
      self.hasRemarkPinyinJ == otherMessage.hasRemarkPinyinJ &&
      (!self.hasRemarkPinyinJ || [self.remarkPinyinJ isEqual:otherMessage.remarkPinyinJ]) &&
      self.hasAddTime == otherMessage.hasAddTime &&
      (!self.hasAddTime || self.addTime == otherMessage.addTime) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      self.hasCompanyType == otherMessage.hasCompanyType &&
      (!self.hasCompanyType || [self.companyType isEqual:otherMessage.companyType]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasValidationAddTime == otherMessage.hasValidationAddTime &&
      (!self.hasValidationAddTime || self.validationAddTime == otherMessage.validationAddTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasRemark) {
    hashCode = hashCode * 31 + [self.remark hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  if (self.hasFlag) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.flag] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasInitial) {
    hashCode = hashCode * 31 + [self.initial hash];
  }
  if (self.hasWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weight] hash];
  }
  if (self.hasNamePinyin) {
    hashCode = hashCode * 31 + [self.namePinyin hash];
  }
  if (self.hasNamePinyinJ) {
    hashCode = hashCode * 31 + [self.namePinyinJ hash];
  }
  if (self.hasRemarkPinyin) {
    hashCode = hashCode * 31 + [self.remarkPinyin hash];
  }
  if (self.hasRemarkPinyinJ) {
    hashCode = hashCode * 31 + [self.remarkPinyinJ hash];
  }
  if (self.hasAddTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.addTime] hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  if (self.hasCompanyType) {
    hashCode = hashCode * 31 + [self.companyType hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasValidationAddTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.validationAddTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserFriendBuilder()
@property (strong) PbUserFriend* resultPbUserFriend;
@end

@implementation PbUserFriendBuilder
@synthesize resultPbUserFriend;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserFriend = [[PbUserFriend alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserFriend;
}
- (PbUserFriendBuilder*) clear {
  self.resultPbUserFriend = [[PbUserFriend alloc] init];
  return self;
}
- (PbUserFriendBuilder*) clone {
  return [PbUserFriend builderWithPrototype:resultPbUserFriend];
}
- (PbUserFriend*) defaultInstance {
  return [PbUserFriend defaultInstance];
}
- (PbUserFriend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserFriend*) buildPartial {
  PbUserFriend* returnMe = resultPbUserFriend;
  self.resultPbUserFriend = nil;
  return returnMe;
}
- (PbUserFriendBuilder*) mergeFrom:(PbUserFriend*) other {
  if (other == [PbUserFriend defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasRemark) {
    [self setRemark:other.remark];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  if (other.hasFlag) {
    [self setFlag:other.flag];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasInitial) {
    [self setInitial:other.initial];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasNamePinyin) {
    [self setNamePinyin:other.namePinyin];
  }
  if (other.hasNamePinyinJ) {
    [self setNamePinyinJ:other.namePinyinJ];
  }
  if (other.hasRemarkPinyin) {
    [self setRemarkPinyin:other.remarkPinyin];
  }
  if (other.hasRemarkPinyinJ) {
    [self setRemarkPinyinJ:other.remarkPinyinJ];
  }
  if (other.hasAddTime) {
    [self setAddTime:other.addTime];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasCompanyType) {
    [self setCompanyType:other.companyType];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasValidationAddTime) {
    [self setValidationAddTime:other.validationAddTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setRemark:[input readString]];
        break;
      }
      case 34: {
        [self setPhone:[input readString]];
        break;
      }
      case 42: {
        [self setMsg:[input readString]];
        break;
      }
      case 48: {
        [self setFlag:[input readInt32]];
        break;
      }
      case 58: {
        [self setGroupId:[input readString]];
        break;
      }
      case 66: {
        [self setInitial:[input readString]];
        break;
      }
      case 72: {
        [self setWeight:[input readInt32]];
        break;
      }
      case 82: {
        [self setNamePinyin:[input readString]];
        break;
      }
      case 90: {
        [self setNamePinyinJ:[input readString]];
        break;
      }
      case 98: {
        [self setRemarkPinyin:[input readString]];
        break;
      }
      case 106: {
        [self setRemarkPinyinJ:[input readString]];
        break;
      }
      case 112: {
        [self setAddTime:[input readInt32]];
        break;
      }
      case 122: {
        [self setProvince:[input readString]];
        break;
      }
      case 130: {
        [self setCity:[input readString]];
        break;
      }
      case 138: {
        [self setCompanyType:[input readString]];
        break;
      }
      case 146: {
        [self setJobType:[input readString]];
        break;
      }
      case 152: {
        [self setValidationAddTime:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbUserFriend.hasUin;
}
- (UInt32) uin {
  return resultPbUserFriend.uin;
}
- (PbUserFriendBuilder*) setUin:(UInt32) value {
  resultPbUserFriend.hasUin = YES;
  resultPbUserFriend.uin = value;
  return self;
}
- (PbUserFriendBuilder*) clearUin {
  resultPbUserFriend.hasUin = NO;
  resultPbUserFriend.uin = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbUserFriend.hasName;
}
- (NSString*) name {
  return resultPbUserFriend.name;
}
- (PbUserFriendBuilder*) setName:(NSString*) value {
  resultPbUserFriend.hasName = YES;
  resultPbUserFriend.name = value;
  return self;
}
- (PbUserFriendBuilder*) clearName {
  resultPbUserFriend.hasName = NO;
  resultPbUserFriend.name = @"";
  return self;
}
- (BOOL) hasRemark {
  return resultPbUserFriend.hasRemark;
}
- (NSString*) remark {
  return resultPbUserFriend.remark;
}
- (PbUserFriendBuilder*) setRemark:(NSString*) value {
  resultPbUserFriend.hasRemark = YES;
  resultPbUserFriend.remark = value;
  return self;
}
- (PbUserFriendBuilder*) clearRemark {
  resultPbUserFriend.hasRemark = NO;
  resultPbUserFriend.remark = @"";
  return self;
}
- (BOOL) hasPhone {
  return resultPbUserFriend.hasPhone;
}
- (NSString*) phone {
  return resultPbUserFriend.phone;
}
- (PbUserFriendBuilder*) setPhone:(NSString*) value {
  resultPbUserFriend.hasPhone = YES;
  resultPbUserFriend.phone = value;
  return self;
}
- (PbUserFriendBuilder*) clearPhone {
  resultPbUserFriend.hasPhone = NO;
  resultPbUserFriend.phone = @"";
  return self;
}
- (BOOL) hasMsg {
  return resultPbUserFriend.hasMsg;
}
- (NSString*) msg {
  return resultPbUserFriend.msg;
}
- (PbUserFriendBuilder*) setMsg:(NSString*) value {
  resultPbUserFriend.hasMsg = YES;
  resultPbUserFriend.msg = value;
  return self;
}
- (PbUserFriendBuilder*) clearMsg {
  resultPbUserFriend.hasMsg = NO;
  resultPbUserFriend.msg = @"";
  return self;
}
- (BOOL) hasFlag {
  return resultPbUserFriend.hasFlag;
}
- (SInt32) flag {
  return resultPbUserFriend.flag;
}
- (PbUserFriendBuilder*) setFlag:(SInt32) value {
  resultPbUserFriend.hasFlag = YES;
  resultPbUserFriend.flag = value;
  return self;
}
- (PbUserFriendBuilder*) clearFlag {
  resultPbUserFriend.hasFlag = NO;
  resultPbUserFriend.flag = 0;
  return self;
}
- (BOOL) hasGroupId {
  return resultPbUserFriend.hasGroupId;
}
- (NSString*) groupId {
  return resultPbUserFriend.groupId;
}
- (PbUserFriendBuilder*) setGroupId:(NSString*) value {
  resultPbUserFriend.hasGroupId = YES;
  resultPbUserFriend.groupId = value;
  return self;
}
- (PbUserFriendBuilder*) clearGroupId {
  resultPbUserFriend.hasGroupId = NO;
  resultPbUserFriend.groupId = @"";
  return self;
}
- (BOOL) hasInitial {
  return resultPbUserFriend.hasInitial;
}
- (NSString*) initial {
  return resultPbUserFriend.initial;
}
- (PbUserFriendBuilder*) setInitial:(NSString*) value {
  resultPbUserFriend.hasInitial = YES;
  resultPbUserFriend.initial = value;
  return self;
}
- (PbUserFriendBuilder*) clearInitial {
  resultPbUserFriend.hasInitial = NO;
  resultPbUserFriend.initial = @"";
  return self;
}
- (BOOL) hasWeight {
  return resultPbUserFriend.hasWeight;
}
- (SInt32) weight {
  return resultPbUserFriend.weight;
}
- (PbUserFriendBuilder*) setWeight:(SInt32) value {
  resultPbUserFriend.hasWeight = YES;
  resultPbUserFriend.weight = value;
  return self;
}
- (PbUserFriendBuilder*) clearWeight {
  resultPbUserFriend.hasWeight = NO;
  resultPbUserFriend.weight = 0;
  return self;
}
- (BOOL) hasNamePinyin {
  return resultPbUserFriend.hasNamePinyin;
}
- (NSString*) namePinyin {
  return resultPbUserFriend.namePinyin;
}
- (PbUserFriendBuilder*) setNamePinyin:(NSString*) value {
  resultPbUserFriend.hasNamePinyin = YES;
  resultPbUserFriend.namePinyin = value;
  return self;
}
- (PbUserFriendBuilder*) clearNamePinyin {
  resultPbUserFriend.hasNamePinyin = NO;
  resultPbUserFriend.namePinyin = @"";
  return self;
}
- (BOOL) hasNamePinyinJ {
  return resultPbUserFriend.hasNamePinyinJ;
}
- (NSString*) namePinyinJ {
  return resultPbUserFriend.namePinyinJ;
}
- (PbUserFriendBuilder*) setNamePinyinJ:(NSString*) value {
  resultPbUserFriend.hasNamePinyinJ = YES;
  resultPbUserFriend.namePinyinJ = value;
  return self;
}
- (PbUserFriendBuilder*) clearNamePinyinJ {
  resultPbUserFriend.hasNamePinyinJ = NO;
  resultPbUserFriend.namePinyinJ = @"";
  return self;
}
- (BOOL) hasRemarkPinyin {
  return resultPbUserFriend.hasRemarkPinyin;
}
- (NSString*) remarkPinyin {
  return resultPbUserFriend.remarkPinyin;
}
- (PbUserFriendBuilder*) setRemarkPinyin:(NSString*) value {
  resultPbUserFriend.hasRemarkPinyin = YES;
  resultPbUserFriend.remarkPinyin = value;
  return self;
}
- (PbUserFriendBuilder*) clearRemarkPinyin {
  resultPbUserFriend.hasRemarkPinyin = NO;
  resultPbUserFriend.remarkPinyin = @"";
  return self;
}
- (BOOL) hasRemarkPinyinJ {
  return resultPbUserFriend.hasRemarkPinyinJ;
}
- (NSString*) remarkPinyinJ {
  return resultPbUserFriend.remarkPinyinJ;
}
- (PbUserFriendBuilder*) setRemarkPinyinJ:(NSString*) value {
  resultPbUserFriend.hasRemarkPinyinJ = YES;
  resultPbUserFriend.remarkPinyinJ = value;
  return self;
}
- (PbUserFriendBuilder*) clearRemarkPinyinJ {
  resultPbUserFriend.hasRemarkPinyinJ = NO;
  resultPbUserFriend.remarkPinyinJ = @"";
  return self;
}
- (BOOL) hasAddTime {
  return resultPbUserFriend.hasAddTime;
}
- (SInt32) addTime {
  return resultPbUserFriend.addTime;
}
- (PbUserFriendBuilder*) setAddTime:(SInt32) value {
  resultPbUserFriend.hasAddTime = YES;
  resultPbUserFriend.addTime = value;
  return self;
}
- (PbUserFriendBuilder*) clearAddTime {
  resultPbUserFriend.hasAddTime = NO;
  resultPbUserFriend.addTime = 0;
  return self;
}
- (BOOL) hasProvince {
  return resultPbUserFriend.hasProvince;
}
- (NSString*) province {
  return resultPbUserFriend.province;
}
- (PbUserFriendBuilder*) setProvince:(NSString*) value {
  resultPbUserFriend.hasProvince = YES;
  resultPbUserFriend.province = value;
  return self;
}
- (PbUserFriendBuilder*) clearProvince {
  resultPbUserFriend.hasProvince = NO;
  resultPbUserFriend.province = @"";
  return self;
}
- (BOOL) hasCity {
  return resultPbUserFriend.hasCity;
}
- (NSString*) city {
  return resultPbUserFriend.city;
}
- (PbUserFriendBuilder*) setCity:(NSString*) value {
  resultPbUserFriend.hasCity = YES;
  resultPbUserFriend.city = value;
  return self;
}
- (PbUserFriendBuilder*) clearCity {
  resultPbUserFriend.hasCity = NO;
  resultPbUserFriend.city = @"";
  return self;
}
- (BOOL) hasCompanyType {
  return resultPbUserFriend.hasCompanyType;
}
- (NSString*) companyType {
  return resultPbUserFriend.companyType;
}
- (PbUserFriendBuilder*) setCompanyType:(NSString*) value {
  resultPbUserFriend.hasCompanyType = YES;
  resultPbUserFriend.companyType = value;
  return self;
}
- (PbUserFriendBuilder*) clearCompanyType {
  resultPbUserFriend.hasCompanyType = NO;
  resultPbUserFriend.companyType = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbUserFriend.hasJobType;
}
- (NSString*) jobType {
  return resultPbUserFriend.jobType;
}
- (PbUserFriendBuilder*) setJobType:(NSString*) value {
  resultPbUserFriend.hasJobType = YES;
  resultPbUserFriend.jobType = value;
  return self;
}
- (PbUserFriendBuilder*) clearJobType {
  resultPbUserFriend.hasJobType = NO;
  resultPbUserFriend.jobType = @"";
  return self;
}
- (BOOL) hasValidationAddTime {
  return resultPbUserFriend.hasValidationAddTime;
}
- (SInt32) validationAddTime {
  return resultPbUserFriend.validationAddTime;
}
- (PbUserFriendBuilder*) setValidationAddTime:(SInt32) value {
  resultPbUserFriend.hasValidationAddTime = YES;
  resultPbUserFriend.validationAddTime = value;
  return self;
}
- (PbUserFriendBuilder*) clearValidationAddTime {
  resultPbUserFriend.hasValidationAddTime = NO;
  resultPbUserFriend.validationAddTime = 0;
  return self;
}
@end

@interface PbUserRecommendFriend ()
@property UInt32 uin;
@property (strong) NSString* name;
@property UInt32 type;
@property SInt32 weight;
@property (strong) NSString* namePinyin;
@property (strong) NSString* namePinyinJ;
@property (strong) NSString* companyType;
@property (strong) NSString* company;
@property (strong) NSString* otherInfo;
@end

@implementation PbUserRecommendFriend

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasWeight {
  return !!hasWeight_;
}
- (void) setHasWeight:(BOOL) _value_ {
  hasWeight_ = !!_value_;
}
@synthesize weight;
- (BOOL) hasNamePinyin {
  return !!hasNamePinyin_;
}
- (void) setHasNamePinyin:(BOOL) _value_ {
  hasNamePinyin_ = !!_value_;
}
@synthesize namePinyin;
- (BOOL) hasNamePinyinJ {
  return !!hasNamePinyinJ_;
}
- (void) setHasNamePinyinJ:(BOOL) _value_ {
  hasNamePinyinJ_ = !!_value_;
}
@synthesize namePinyinJ;
- (BOOL) hasCompanyType {
  return !!hasCompanyType_;
}
- (void) setHasCompanyType:(BOOL) _value_ {
  hasCompanyType_ = !!_value_;
}
@synthesize companyType;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) _value_ {
  hasCompany_ = !!_value_;
}
@synthesize company;
- (BOOL) hasOtherInfo {
  return !!hasOtherInfo_;
}
- (void) setHasOtherInfo:(BOOL) _value_ {
  hasOtherInfo_ = !!_value_;
}
@synthesize otherInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.name = @"";
    self.type = 0;
    self.weight = 0;
    self.namePinyin = @"";
    self.namePinyinJ = @"";
    self.companyType = @"";
    self.company = @"";
    self.otherInfo = @"";
  }
  return self;
}
static PbUserRecommendFriend* defaultPbUserRecommendFriendInstance = nil;
+ (void) initialize {
  if (self == [PbUserRecommendFriend class]) {
    defaultPbUserRecommendFriendInstance = [[PbUserRecommendFriend alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserRecommendFriendInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserRecommendFriendInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasType) {
    [output writeUInt32:3 value:self.type];
  }
  if (self.hasWeight) {
    [output writeInt32:4 value:self.weight];
  }
  if (self.hasNamePinyin) {
    [output writeString:5 value:self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output writeString:6 value:self.namePinyinJ];
  }
  if (self.hasCompanyType) {
    [output writeString:7 value:self.companyType];
  }
  if (self.hasCompany) {
    [output writeString:8 value:self.company];
  }
  if (self.hasOtherInfo) {
    [output writeString:9 value:self.otherInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasType) {
    size_ += computeUInt32Size(3, self.type);
  }
  if (self.hasWeight) {
    size_ += computeInt32Size(4, self.weight);
  }
  if (self.hasNamePinyin) {
    size_ += computeStringSize(5, self.namePinyin);
  }
  if (self.hasNamePinyinJ) {
    size_ += computeStringSize(6, self.namePinyinJ);
  }
  if (self.hasCompanyType) {
    size_ += computeStringSize(7, self.companyType);
  }
  if (self.hasCompany) {
    size_ += computeStringSize(8, self.company);
  }
  if (self.hasOtherInfo) {
    size_ += computeStringSize(9, self.otherInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserRecommendFriend*) parseFromData:(NSData*) data {
  return (PbUserRecommendFriend*)[[[PbUserRecommendFriend builder] mergeFromData:data] build];
}
+ (PbUserRecommendFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserRecommendFriend*)[[[PbUserRecommendFriend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserRecommendFriend*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserRecommendFriend*)[[[PbUserRecommendFriend builder] mergeFromInputStream:input] build];
}
+ (PbUserRecommendFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserRecommendFriend*)[[[PbUserRecommendFriend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserRecommendFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserRecommendFriend*)[[[PbUserRecommendFriend builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserRecommendFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserRecommendFriend*)[[[PbUserRecommendFriend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserRecommendFriendBuilder*) builder {
  return [[PbUserRecommendFriendBuilder alloc] init];
}
+ (PbUserRecommendFriendBuilder*) builderWithPrototype:(PbUserRecommendFriend*) prototype {
  return [[PbUserRecommendFriend builder] mergeFrom:prototype];
}
- (PbUserRecommendFriendBuilder*) builder {
  return [PbUserRecommendFriend builder];
}
- (PbUserRecommendFriendBuilder*) toBuilder {
  return [PbUserRecommendFriend builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"weight", [NSNumber numberWithInteger:self.weight]];
  }
  if (self.hasNamePinyin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyin", self.namePinyin];
  }
  if (self.hasNamePinyinJ) {
    [output appendFormat:@"%@%@: %@\n", indent, @"namePinyinJ", self.namePinyinJ];
  }
  if (self.hasCompanyType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyType", self.companyType];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@: %@\n", indent, @"company", self.company];
  }
  if (self.hasOtherInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"otherInfo", self.otherInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasWeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.weight] forKey: @"weight"];
  }
  if (self.hasNamePinyin) {
    [dictionary setObject: self.namePinyin forKey: @"namePinyin"];
  }
  if (self.hasNamePinyinJ) {
    [dictionary setObject: self.namePinyinJ forKey: @"namePinyinJ"];
  }
  if (self.hasCompanyType) {
    [dictionary setObject: self.companyType forKey: @"companyType"];
  }
  if (self.hasCompany) {
    [dictionary setObject: self.company forKey: @"company"];
  }
  if (self.hasOtherInfo) {
    [dictionary setObject: self.otherInfo forKey: @"otherInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserRecommendFriend class]]) {
    return NO;
  }
  PbUserRecommendFriend *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasWeight == otherMessage.hasWeight &&
      (!self.hasWeight || self.weight == otherMessage.weight) &&
      self.hasNamePinyin == otherMessage.hasNamePinyin &&
      (!self.hasNamePinyin || [self.namePinyin isEqual:otherMessage.namePinyin]) &&
      self.hasNamePinyinJ == otherMessage.hasNamePinyinJ &&
      (!self.hasNamePinyinJ || [self.namePinyinJ isEqual:otherMessage.namePinyinJ]) &&
      self.hasCompanyType == otherMessage.hasCompanyType &&
      (!self.hasCompanyType || [self.companyType isEqual:otherMessage.companyType]) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      self.hasOtherInfo == otherMessage.hasOtherInfo &&
      (!self.hasOtherInfo || [self.otherInfo isEqual:otherMessage.otherInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.weight] hash];
  }
  if (self.hasNamePinyin) {
    hashCode = hashCode * 31 + [self.namePinyin hash];
  }
  if (self.hasNamePinyinJ) {
    hashCode = hashCode * 31 + [self.namePinyinJ hash];
  }
  if (self.hasCompanyType) {
    hashCode = hashCode * 31 + [self.companyType hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  if (self.hasOtherInfo) {
    hashCode = hashCode * 31 + [self.otherInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserRecommendFriendBuilder()
@property (strong) PbUserRecommendFriend* resultPbUserRecommendFriend;
@end

@implementation PbUserRecommendFriendBuilder
@synthesize resultPbUserRecommendFriend;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserRecommendFriend = [[PbUserRecommendFriend alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserRecommendFriend;
}
- (PbUserRecommendFriendBuilder*) clear {
  self.resultPbUserRecommendFriend = [[PbUserRecommendFriend alloc] init];
  return self;
}
- (PbUserRecommendFriendBuilder*) clone {
  return [PbUserRecommendFriend builderWithPrototype:resultPbUserRecommendFriend];
}
- (PbUserRecommendFriend*) defaultInstance {
  return [PbUserRecommendFriend defaultInstance];
}
- (PbUserRecommendFriend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserRecommendFriend*) buildPartial {
  PbUserRecommendFriend* returnMe = resultPbUserRecommendFriend;
  self.resultPbUserRecommendFriend = nil;
  return returnMe;
}
- (PbUserRecommendFriendBuilder*) mergeFrom:(PbUserRecommendFriend*) other {
  if (other == [PbUserRecommendFriend defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasWeight) {
    [self setWeight:other.weight];
  }
  if (other.hasNamePinyin) {
    [self setNamePinyin:other.namePinyin];
  }
  if (other.hasNamePinyinJ) {
    [self setNamePinyinJ:other.namePinyinJ];
  }
  if (other.hasCompanyType) {
    [self setCompanyType:other.companyType];
  }
  if (other.hasCompany) {
    [self setCompany:other.company];
  }
  if (other.hasOtherInfo) {
    [self setOtherInfo:other.otherInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserRecommendFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserRecommendFriendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setType:[input readUInt32]];
        break;
      }
      case 32: {
        [self setWeight:[input readInt32]];
        break;
      }
      case 42: {
        [self setNamePinyin:[input readString]];
        break;
      }
      case 50: {
        [self setNamePinyinJ:[input readString]];
        break;
      }
      case 58: {
        [self setCompanyType:[input readString]];
        break;
      }
      case 66: {
        [self setCompany:[input readString]];
        break;
      }
      case 74: {
        [self setOtherInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbUserRecommendFriend.hasUin;
}
- (UInt32) uin {
  return resultPbUserRecommendFriend.uin;
}
- (PbUserRecommendFriendBuilder*) setUin:(UInt32) value {
  resultPbUserRecommendFriend.hasUin = YES;
  resultPbUserRecommendFriend.uin = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearUin {
  resultPbUserRecommendFriend.hasUin = NO;
  resultPbUserRecommendFriend.uin = 0;
  return self;
}
- (BOOL) hasName {
  return resultPbUserRecommendFriend.hasName;
}
- (NSString*) name {
  return resultPbUserRecommendFriend.name;
}
- (PbUserRecommendFriendBuilder*) setName:(NSString*) value {
  resultPbUserRecommendFriend.hasName = YES;
  resultPbUserRecommendFriend.name = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearName {
  resultPbUserRecommendFriend.hasName = NO;
  resultPbUserRecommendFriend.name = @"";
  return self;
}
- (BOOL) hasType {
  return resultPbUserRecommendFriend.hasType;
}
- (UInt32) type {
  return resultPbUserRecommendFriend.type;
}
- (PbUserRecommendFriendBuilder*) setType:(UInt32) value {
  resultPbUserRecommendFriend.hasType = YES;
  resultPbUserRecommendFriend.type = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearType {
  resultPbUserRecommendFriend.hasType = NO;
  resultPbUserRecommendFriend.type = 0;
  return self;
}
- (BOOL) hasWeight {
  return resultPbUserRecommendFriend.hasWeight;
}
- (SInt32) weight {
  return resultPbUserRecommendFriend.weight;
}
- (PbUserRecommendFriendBuilder*) setWeight:(SInt32) value {
  resultPbUserRecommendFriend.hasWeight = YES;
  resultPbUserRecommendFriend.weight = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearWeight {
  resultPbUserRecommendFriend.hasWeight = NO;
  resultPbUserRecommendFriend.weight = 0;
  return self;
}
- (BOOL) hasNamePinyin {
  return resultPbUserRecommendFriend.hasNamePinyin;
}
- (NSString*) namePinyin {
  return resultPbUserRecommendFriend.namePinyin;
}
- (PbUserRecommendFriendBuilder*) setNamePinyin:(NSString*) value {
  resultPbUserRecommendFriend.hasNamePinyin = YES;
  resultPbUserRecommendFriend.namePinyin = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearNamePinyin {
  resultPbUserRecommendFriend.hasNamePinyin = NO;
  resultPbUserRecommendFriend.namePinyin = @"";
  return self;
}
- (BOOL) hasNamePinyinJ {
  return resultPbUserRecommendFriend.hasNamePinyinJ;
}
- (NSString*) namePinyinJ {
  return resultPbUserRecommendFriend.namePinyinJ;
}
- (PbUserRecommendFriendBuilder*) setNamePinyinJ:(NSString*) value {
  resultPbUserRecommendFriend.hasNamePinyinJ = YES;
  resultPbUserRecommendFriend.namePinyinJ = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearNamePinyinJ {
  resultPbUserRecommendFriend.hasNamePinyinJ = NO;
  resultPbUserRecommendFriend.namePinyinJ = @"";
  return self;
}
- (BOOL) hasCompanyType {
  return resultPbUserRecommendFriend.hasCompanyType;
}
- (NSString*) companyType {
  return resultPbUserRecommendFriend.companyType;
}
- (PbUserRecommendFriendBuilder*) setCompanyType:(NSString*) value {
  resultPbUserRecommendFriend.hasCompanyType = YES;
  resultPbUserRecommendFriend.companyType = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearCompanyType {
  resultPbUserRecommendFriend.hasCompanyType = NO;
  resultPbUserRecommendFriend.companyType = @"";
  return self;
}
- (BOOL) hasCompany {
  return resultPbUserRecommendFriend.hasCompany;
}
- (NSString*) company {
  return resultPbUserRecommendFriend.company;
}
- (PbUserRecommendFriendBuilder*) setCompany:(NSString*) value {
  resultPbUserRecommendFriend.hasCompany = YES;
  resultPbUserRecommendFriend.company = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearCompany {
  resultPbUserRecommendFriend.hasCompany = NO;
  resultPbUserRecommendFriend.company = @"";
  return self;
}
- (BOOL) hasOtherInfo {
  return resultPbUserRecommendFriend.hasOtherInfo;
}
- (NSString*) otherInfo {
  return resultPbUserRecommendFriend.otherInfo;
}
- (PbUserRecommendFriendBuilder*) setOtherInfo:(NSString*) value {
  resultPbUserRecommendFriend.hasOtherInfo = YES;
  resultPbUserRecommendFriend.otherInfo = value;
  return self;
}
- (PbUserRecommendFriendBuilder*) clearOtherInfo {
  resultPbUserRecommendFriend.hasOtherInfo = NO;
  resultPbUserRecommendFriend.otherInfo = @"";
  return self;
}
@end

@interface PbUserPhoneAddress ()
@property (strong) NSString* name;
@property (strong) NSString* phone;
@end

@implementation PbUserPhoneAddress

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (instancetype) init {
  if ((self = [super init])) {
    self.name = @"";
    self.phone = @"";
  }
  return self;
}
static PbUserPhoneAddress* defaultPbUserPhoneAddressInstance = nil;
+ (void) initialize {
  if (self == [PbUserPhoneAddress class]) {
    defaultPbUserPhoneAddressInstance = [[PbUserPhoneAddress alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserPhoneAddressInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserPhoneAddressInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasPhone) {
    [output writeString:2 value:self.phone];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(2, self.phone);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserPhoneAddress*) parseFromData:(NSData*) data {
  return (PbUserPhoneAddress*)[[[PbUserPhoneAddress builder] mergeFromData:data] build];
}
+ (PbUserPhoneAddress*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserPhoneAddress*)[[[PbUserPhoneAddress builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserPhoneAddress*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserPhoneAddress*)[[[PbUserPhoneAddress builder] mergeFromInputStream:input] build];
}
+ (PbUserPhoneAddress*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserPhoneAddress*)[[[PbUserPhoneAddress builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserPhoneAddress*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserPhoneAddress*)[[[PbUserPhoneAddress builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserPhoneAddress*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserPhoneAddress*)[[[PbUserPhoneAddress builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserPhoneAddressBuilder*) builder {
  return [[PbUserPhoneAddressBuilder alloc] init];
}
+ (PbUserPhoneAddressBuilder*) builderWithPrototype:(PbUserPhoneAddress*) prototype {
  return [[PbUserPhoneAddress builder] mergeFrom:prototype];
}
- (PbUserPhoneAddressBuilder*) builder {
  return [PbUserPhoneAddress builder];
}
- (PbUserPhoneAddressBuilder*) toBuilder {
  return [PbUserPhoneAddress builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasPhone) {
    [dictionary setObject: self.phone forKey: @"phone"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserPhoneAddress class]]) {
    return NO;
  }
  PbUserPhoneAddress *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserPhoneAddressBuilder()
@property (strong) PbUserPhoneAddress* resultPbUserPhoneAddress;
@end

@implementation PbUserPhoneAddressBuilder
@synthesize resultPbUserPhoneAddress;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserPhoneAddress = [[PbUserPhoneAddress alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserPhoneAddress;
}
- (PbUserPhoneAddressBuilder*) clear {
  self.resultPbUserPhoneAddress = [[PbUserPhoneAddress alloc] init];
  return self;
}
- (PbUserPhoneAddressBuilder*) clone {
  return [PbUserPhoneAddress builderWithPrototype:resultPbUserPhoneAddress];
}
- (PbUserPhoneAddress*) defaultInstance {
  return [PbUserPhoneAddress defaultInstance];
}
- (PbUserPhoneAddress*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserPhoneAddress*) buildPartial {
  PbUserPhoneAddress* returnMe = resultPbUserPhoneAddress;
  self.resultPbUserPhoneAddress = nil;
  return returnMe;
}
- (PbUserPhoneAddressBuilder*) mergeFrom:(PbUserPhoneAddress*) other {
  if (other == [PbUserPhoneAddress defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserPhoneAddressBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserPhoneAddressBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setPhone:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return resultPbUserPhoneAddress.hasName;
}
- (NSString*) name {
  return resultPbUserPhoneAddress.name;
}
- (PbUserPhoneAddressBuilder*) setName:(NSString*) value {
  resultPbUserPhoneAddress.hasName = YES;
  resultPbUserPhoneAddress.name = value;
  return self;
}
- (PbUserPhoneAddressBuilder*) clearName {
  resultPbUserPhoneAddress.hasName = NO;
  resultPbUserPhoneAddress.name = @"";
  return self;
}
- (BOOL) hasPhone {
  return resultPbUserPhoneAddress.hasPhone;
}
- (NSString*) phone {
  return resultPbUserPhoneAddress.phone;
}
- (PbUserPhoneAddressBuilder*) setPhone:(NSString*) value {
  resultPbUserPhoneAddress.hasPhone = YES;
  resultPbUserPhoneAddress.phone = value;
  return self;
}
- (PbUserPhoneAddressBuilder*) clearPhone {
  resultPbUserPhoneAddress.hasPhone = NO;
  resultPbUserPhoneAddress.phone = @"";
  return self;
}
@end

@interface PbUserImGroup ()
@property (strong) NSString* groupId;
@property SInt32 groupFlag;
@end

@implementation PbUserImGroup

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasGroupFlag {
  return !!hasGroupFlag_;
}
- (void) setHasGroupFlag:(BOOL) _value_ {
  hasGroupFlag_ = !!_value_;
}
@synthesize groupFlag;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.groupFlag = 0;
  }
  return self;
}
static PbUserImGroup* defaultPbUserImGroupInstance = nil;
+ (void) initialize {
  if (self == [PbUserImGroup class]) {
    defaultPbUserImGroupInstance = [[PbUserImGroup alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserImGroupInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserImGroupInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasGroupFlag) {
    [output writeInt32:2 value:self.groupFlag];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  if (self.hasGroupFlag) {
    size_ += computeInt32Size(2, self.groupFlag);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserImGroup*) parseFromData:(NSData*) data {
  return (PbUserImGroup*)[[[PbUserImGroup builder] mergeFromData:data] build];
}
+ (PbUserImGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserImGroup*)[[[PbUserImGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserImGroup*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserImGroup*)[[[PbUserImGroup builder] mergeFromInputStream:input] build];
}
+ (PbUserImGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserImGroup*)[[[PbUserImGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserImGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserImGroup*)[[[PbUserImGroup builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserImGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserImGroup*)[[[PbUserImGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserImGroupBuilder*) builder {
  return [[PbUserImGroupBuilder alloc] init];
}
+ (PbUserImGroupBuilder*) builderWithPrototype:(PbUserImGroup*) prototype {
  return [[PbUserImGroup builder] mergeFrom:prototype];
}
- (PbUserImGroupBuilder*) builder {
  return [PbUserImGroup builder];
}
- (PbUserImGroupBuilder*) toBuilder {
  return [PbUserImGroup builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupFlag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupFlag", [NSNumber numberWithInteger:self.groupFlag]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasGroupFlag) {
    [dictionary setObject: [NSNumber numberWithInteger:self.groupFlag] forKey: @"groupFlag"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserImGroup class]]) {
    return NO;
  }
  PbUserImGroup *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupFlag == otherMessage.hasGroupFlag &&
      (!self.hasGroupFlag || self.groupFlag == otherMessage.groupFlag) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupFlag) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupFlag] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserImGroupBuilder()
@property (strong) PbUserImGroup* resultPbUserImGroup;
@end

@implementation PbUserImGroupBuilder
@synthesize resultPbUserImGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserImGroup = [[PbUserImGroup alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserImGroup;
}
- (PbUserImGroupBuilder*) clear {
  self.resultPbUserImGroup = [[PbUserImGroup alloc] init];
  return self;
}
- (PbUserImGroupBuilder*) clone {
  return [PbUserImGroup builderWithPrototype:resultPbUserImGroup];
}
- (PbUserImGroup*) defaultInstance {
  return [PbUserImGroup defaultInstance];
}
- (PbUserImGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserImGroup*) buildPartial {
  PbUserImGroup* returnMe = resultPbUserImGroup;
  self.resultPbUserImGroup = nil;
  return returnMe;
}
- (PbUserImGroupBuilder*) mergeFrom:(PbUserImGroup*) other {
  if (other == [PbUserImGroup defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupFlag) {
    [self setGroupFlag:other.groupFlag];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserImGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserImGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 16: {
        [self setGroupFlag:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultPbUserImGroup.hasGroupId;
}
- (NSString*) groupId {
  return resultPbUserImGroup.groupId;
}
- (PbUserImGroupBuilder*) setGroupId:(NSString*) value {
  resultPbUserImGroup.hasGroupId = YES;
  resultPbUserImGroup.groupId = value;
  return self;
}
- (PbUserImGroupBuilder*) clearGroupId {
  resultPbUserImGroup.hasGroupId = NO;
  resultPbUserImGroup.groupId = @"";
  return self;
}
- (BOOL) hasGroupFlag {
  return resultPbUserImGroup.hasGroupFlag;
}
- (SInt32) groupFlag {
  return resultPbUserImGroup.groupFlag;
}
- (PbUserImGroupBuilder*) setGroupFlag:(SInt32) value {
  resultPbUserImGroup.hasGroupFlag = YES;
  resultPbUserImGroup.groupFlag = value;
  return self;
}
- (PbUserImGroupBuilder*) clearGroupFlag {
  resultPbUserImGroup.hasGroupFlag = NO;
  resultPbUserImGroup.groupFlag = 0;
  return self;
}
@end

@interface PbUserPrj ()
@property (strong) NSString* prjId;
@property (strong) NSString* groupId;
@end

@implementation PbUserPrj

- (BOOL) hasPrjId {
  return !!hasPrjId_;
}
- (void) setHasPrjId:(BOOL) _value_ {
  hasPrjId_ = !!_value_;
}
@synthesize prjId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (instancetype) init {
  if ((self = [super init])) {
    self.prjId = @"";
    self.groupId = @"";
  }
  return self;
}
static PbUserPrj* defaultPbUserPrjInstance = nil;
+ (void) initialize {
  if (self == [PbUserPrj class]) {
    defaultPbUserPrjInstance = [[PbUserPrj alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserPrjInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserPrjInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrjId) {
    [output writeString:1 value:self.prjId];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrjId) {
    size_ += computeStringSize(1, self.prjId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserPrj*) parseFromData:(NSData*) data {
  return (PbUserPrj*)[[[PbUserPrj builder] mergeFromData:data] build];
}
+ (PbUserPrj*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserPrj*)[[[PbUserPrj builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserPrj*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserPrj*)[[[PbUserPrj builder] mergeFromInputStream:input] build];
}
+ (PbUserPrj*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserPrj*)[[[PbUserPrj builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserPrj*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserPrj*)[[[PbUserPrj builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserPrj*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserPrj*)[[[PbUserPrj builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserPrjBuilder*) builder {
  return [[PbUserPrjBuilder alloc] init];
}
+ (PbUserPrjBuilder*) builderWithPrototype:(PbUserPrj*) prototype {
  return [[PbUserPrj builder] mergeFrom:prototype];
}
- (PbUserPrjBuilder*) builder {
  return [PbUserPrj builder];
}
- (PbUserPrjBuilder*) toBuilder {
  return [PbUserPrj builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prjId", self.prjId];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPrjId) {
    [dictionary setObject: self.prjId forKey: @"prjId"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserPrj class]]) {
    return NO;
  }
  PbUserPrj *otherMessage = other;
  return
      self.hasPrjId == otherMessage.hasPrjId &&
      (!self.hasPrjId || [self.prjId isEqual:otherMessage.prjId]) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrjId) {
    hashCode = hashCode * 31 + [self.prjId hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserPrjBuilder()
@property (strong) PbUserPrj* resultPbUserPrj;
@end

@implementation PbUserPrjBuilder
@synthesize resultPbUserPrj;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserPrj = [[PbUserPrj alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserPrj;
}
- (PbUserPrjBuilder*) clear {
  self.resultPbUserPrj = [[PbUserPrj alloc] init];
  return self;
}
- (PbUserPrjBuilder*) clone {
  return [PbUserPrj builderWithPrototype:resultPbUserPrj];
}
- (PbUserPrj*) defaultInstance {
  return [PbUserPrj defaultInstance];
}
- (PbUserPrj*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserPrj*) buildPartial {
  PbUserPrj* returnMe = resultPbUserPrj;
  self.resultPbUserPrj = nil;
  return returnMe;
}
- (PbUserPrjBuilder*) mergeFrom:(PbUserPrj*) other {
  if (other == [PbUserPrj defaultInstance]) {
    return self;
  }
  if (other.hasPrjId) {
    [self setPrjId:other.prjId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserPrjBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserPrjBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrjId:[input readString]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPrjId {
  return resultPbUserPrj.hasPrjId;
}
- (NSString*) prjId {
  return resultPbUserPrj.prjId;
}
- (PbUserPrjBuilder*) setPrjId:(NSString*) value {
  resultPbUserPrj.hasPrjId = YES;
  resultPbUserPrj.prjId = value;
  return self;
}
- (PbUserPrjBuilder*) clearPrjId {
  resultPbUserPrj.hasPrjId = NO;
  resultPbUserPrj.prjId = @"";
  return self;
}
- (BOOL) hasGroupId {
  return resultPbUserPrj.hasGroupId;
}
- (NSString*) groupId {
  return resultPbUserPrj.groupId;
}
- (PbUserPrjBuilder*) setGroupId:(NSString*) value {
  resultPbUserPrj.hasGroupId = YES;
  resultPbUserPrj.groupId = value;
  return self;
}
- (PbUserPrjBuilder*) clearGroupId {
  resultPbUserPrj.hasGroupId = NO;
  resultPbUserPrj.groupId = @"";
  return self;
}
@end

@interface PbUserCollection ()
@property (strong) NSString* collectionId;
@property (strong) PbImMsgItem* msg;
@property SInt32 time;
@property SInt32 type;
@end

@implementation PbUserCollection

- (BOOL) hasCollectionId {
  return !!hasCollectionId_;
}
- (void) setHasCollectionId:(BOOL) _value_ {
  hasCollectionId_ = !!_value_;
}
@synthesize collectionId;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) _value_ {
  hasMsg_ = !!_value_;
}
@synthesize msg;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.collectionId = @"";
    self.msg = [PbImMsgItem defaultInstance];
    self.time = 0;
    self.type = 0;
  }
  return self;
}
static PbUserCollection* defaultPbUserCollectionInstance = nil;
+ (void) initialize {
  if (self == [PbUserCollection class]) {
    defaultPbUserCollectionInstance = [[PbUserCollection alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserCollectionInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserCollectionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCollectionId) {
    [output writeString:1 value:self.collectionId];
  }
  if (self.hasMsg) {
    [output writeMessage:2 value:self.msg];
  }
  if (self.hasTime) {
    [output writeInt32:3 value:self.time];
  }
  if (self.hasType) {
    [output writeInt32:4 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCollectionId) {
    size_ += computeStringSize(1, self.collectionId);
  }
  if (self.hasMsg) {
    size_ += computeMessageSize(2, self.msg);
  }
  if (self.hasTime) {
    size_ += computeInt32Size(3, self.time);
  }
  if (self.hasType) {
    size_ += computeInt32Size(4, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserCollection*) parseFromData:(NSData*) data {
  return (PbUserCollection*)[[[PbUserCollection builder] mergeFromData:data] build];
}
+ (PbUserCollection*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserCollection*)[[[PbUserCollection builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserCollection*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserCollection*)[[[PbUserCollection builder] mergeFromInputStream:input] build];
}
+ (PbUserCollection*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserCollection*)[[[PbUserCollection builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserCollection*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserCollection*)[[[PbUserCollection builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserCollection*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserCollection*)[[[PbUserCollection builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserCollectionBuilder*) builder {
  return [[PbUserCollectionBuilder alloc] init];
}
+ (PbUserCollectionBuilder*) builderWithPrototype:(PbUserCollection*) prototype {
  return [[PbUserCollection builder] mergeFrom:prototype];
}
- (PbUserCollectionBuilder*) builder {
  return [PbUserCollection builder];
}
- (PbUserCollectionBuilder*) toBuilder {
  return [PbUserCollection builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCollectionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"collectionId", self.collectionId];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@ {\n", indent, @"msg"];
    [self.msg writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCollectionId) {
    [dictionary setObject: self.collectionId forKey: @"collectionId"];
  }
  if (self.hasMsg) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msg storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msg"];
  }
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserCollection class]]) {
    return NO;
  }
  PbUserCollection *otherMessage = other;
  return
      self.hasCollectionId == otherMessage.hasCollectionId &&
      (!self.hasCollectionId || [self.collectionId isEqual:otherMessage.collectionId]) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCollectionId) {
    hashCode = hashCode * 31 + [self.collectionId hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserCollectionBuilder()
@property (strong) PbUserCollection* resultPbUserCollection;
@end

@implementation PbUserCollectionBuilder
@synthesize resultPbUserCollection;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserCollection = [[PbUserCollection alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserCollection;
}
- (PbUserCollectionBuilder*) clear {
  self.resultPbUserCollection = [[PbUserCollection alloc] init];
  return self;
}
- (PbUserCollectionBuilder*) clone {
  return [PbUserCollection builderWithPrototype:resultPbUserCollection];
}
- (PbUserCollection*) defaultInstance {
  return [PbUserCollection defaultInstance];
}
- (PbUserCollection*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserCollection*) buildPartial {
  PbUserCollection* returnMe = resultPbUserCollection;
  self.resultPbUserCollection = nil;
  return returnMe;
}
- (PbUserCollectionBuilder*) mergeFrom:(PbUserCollection*) other {
  if (other == [PbUserCollection defaultInstance]) {
    return self;
  }
  if (other.hasCollectionId) {
    [self setCollectionId:other.collectionId];
  }
  if (other.hasMsg) {
    [self mergeMsg:other.msg];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserCollectionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserCollectionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCollectionId:[input readString]];
        break;
      }
      case 18: {
        PbImMsgItemBuilder* subBuilder = [PbImMsgItem builder];
        if (self.hasMsg) {
          [subBuilder mergeFrom:self.msg];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsg:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setTime:[input readInt32]];
        break;
      }
      case 32: {
        [self setType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCollectionId {
  return resultPbUserCollection.hasCollectionId;
}
- (NSString*) collectionId {
  return resultPbUserCollection.collectionId;
}
- (PbUserCollectionBuilder*) setCollectionId:(NSString*) value {
  resultPbUserCollection.hasCollectionId = YES;
  resultPbUserCollection.collectionId = value;
  return self;
}
- (PbUserCollectionBuilder*) clearCollectionId {
  resultPbUserCollection.hasCollectionId = NO;
  resultPbUserCollection.collectionId = @"";
  return self;
}
- (BOOL) hasMsg {
  return resultPbUserCollection.hasMsg;
}
- (PbImMsgItem*) msg {
  return resultPbUserCollection.msg;
}
- (PbUserCollectionBuilder*) setMsg:(PbImMsgItem*) value {
  resultPbUserCollection.hasMsg = YES;
  resultPbUserCollection.msg = value;
  return self;
}
- (PbUserCollectionBuilder*) setMsgBuilder:(PbImMsgItemBuilder*) builderForValue {
  return [self setMsg:[builderForValue build]];
}
- (PbUserCollectionBuilder*) mergeMsg:(PbImMsgItem*) value {
  if (resultPbUserCollection.hasMsg &&
      resultPbUserCollection.msg != [PbImMsgItem defaultInstance]) {
    resultPbUserCollection.msg =
      [[[PbImMsgItem builderWithPrototype:resultPbUserCollection.msg] mergeFrom:value] buildPartial];
  } else {
    resultPbUserCollection.msg = value;
  }
  resultPbUserCollection.hasMsg = YES;
  return self;
}
- (PbUserCollectionBuilder*) clearMsg {
  resultPbUserCollection.hasMsg = NO;
  resultPbUserCollection.msg = [PbImMsgItem defaultInstance];
  return self;
}
- (BOOL) hasTime {
  return resultPbUserCollection.hasTime;
}
- (SInt32) time {
  return resultPbUserCollection.time;
}
- (PbUserCollectionBuilder*) setTime:(SInt32) value {
  resultPbUserCollection.hasTime = YES;
  resultPbUserCollection.time = value;
  return self;
}
- (PbUserCollectionBuilder*) clearTime {
  resultPbUserCollection.hasTime = NO;
  resultPbUserCollection.time = 0;
  return self;
}
- (BOOL) hasType {
  return resultPbUserCollection.hasType;
}
- (SInt32) type {
  return resultPbUserCollection.type;
}
- (PbUserCollectionBuilder*) setType:(SInt32) value {
  resultPbUserCollection.hasType = YES;
  resultPbUserCollection.type = value;
  return self;
}
- (PbUserCollectionBuilder*) clearType {
  resultPbUserCollection.hasType = NO;
  resultPbUserCollection.type = 0;
  return self;
}
@end

@interface PbUserCollectionList ()
@property SInt32 updateType;
@property (strong) NSMutableArray * collectionsArray;
@property SInt32 collectionsCnt;
@end

@implementation PbUserCollectionList

- (BOOL) hasUpdateType {
  return !!hasUpdateType_;
}
- (void) setHasUpdateType:(BOOL) _value_ {
  hasUpdateType_ = !!_value_;
}
@synthesize updateType;
@synthesize collectionsArray;
@dynamic collections;
- (BOOL) hasCollectionsCnt {
  return !!hasCollectionsCnt_;
}
- (void) setHasCollectionsCnt:(BOOL) _value_ {
  hasCollectionsCnt_ = !!_value_;
}
@synthesize collectionsCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.updateType = 0;
    self.collectionsCnt = 0;
  }
  return self;
}
static PbUserCollectionList* defaultPbUserCollectionListInstance = nil;
+ (void) initialize {
  if (self == [PbUserCollectionList class]) {
    defaultPbUserCollectionListInstance = [[PbUserCollectionList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserCollectionListInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserCollectionListInstance;
}
- (NSArray *)collections {
  return collectionsArray;
}
- (PbUserCollection*)collectionsAtIndex:(NSUInteger)index {
  return [collectionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpdateType) {
    [output writeInt32:1 value:self.updateType];
  }
  [self.collectionsArray enumerateObjectsUsingBlock:^(PbUserCollection *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasCollectionsCnt) {
    [output writeInt32:3 value:self.collectionsCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpdateType) {
    size_ += computeInt32Size(1, self.updateType);
  }
  [self.collectionsArray enumerateObjectsUsingBlock:^(PbUserCollection *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasCollectionsCnt) {
    size_ += computeInt32Size(3, self.collectionsCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserCollectionList*) parseFromData:(NSData*) data {
  return (PbUserCollectionList*)[[[PbUserCollectionList builder] mergeFromData:data] build];
}
+ (PbUserCollectionList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserCollectionList*)[[[PbUserCollectionList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserCollectionList*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserCollectionList*)[[[PbUserCollectionList builder] mergeFromInputStream:input] build];
}
+ (PbUserCollectionList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserCollectionList*)[[[PbUserCollectionList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserCollectionList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserCollectionList*)[[[PbUserCollectionList builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserCollectionList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserCollectionList*)[[[PbUserCollectionList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserCollectionListBuilder*) builder {
  return [[PbUserCollectionListBuilder alloc] init];
}
+ (PbUserCollectionListBuilder*) builderWithPrototype:(PbUserCollectionList*) prototype {
  return [[PbUserCollectionList builder] mergeFrom:prototype];
}
- (PbUserCollectionListBuilder*) builder {
  return [PbUserCollectionList builder];
}
- (PbUserCollectionListBuilder*) toBuilder {
  return [PbUserCollectionList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpdateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateType", [NSNumber numberWithInteger:self.updateType]];
  }
  [self.collectionsArray enumerateObjectsUsingBlock:^(PbUserCollection *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"collections"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCollectionsCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"collectionsCnt", [NSNumber numberWithInteger:self.collectionsCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpdateType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateType] forKey: @"updateType"];
  }
  for (PbUserCollection* element in self.collectionsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"collections"];
  }
  if (self.hasCollectionsCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.collectionsCnt] forKey: @"collectionsCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserCollectionList class]]) {
    return NO;
  }
  PbUserCollectionList *otherMessage = other;
  return
      self.hasUpdateType == otherMessage.hasUpdateType &&
      (!self.hasUpdateType || self.updateType == otherMessage.updateType) &&
      [self.collectionsArray isEqualToArray:otherMessage.collectionsArray] &&
      self.hasCollectionsCnt == otherMessage.hasCollectionsCnt &&
      (!self.hasCollectionsCnt || self.collectionsCnt == otherMessage.collectionsCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpdateType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateType] hash];
  }
  [self.collectionsArray enumerateObjectsUsingBlock:^(PbUserCollection *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCollectionsCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.collectionsCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserCollectionListBuilder()
@property (strong) PbUserCollectionList* resultPbUserCollectionList;
@end

@implementation PbUserCollectionListBuilder
@synthesize resultPbUserCollectionList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserCollectionList = [[PbUserCollectionList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserCollectionList;
}
- (PbUserCollectionListBuilder*) clear {
  self.resultPbUserCollectionList = [[PbUserCollectionList alloc] init];
  return self;
}
- (PbUserCollectionListBuilder*) clone {
  return [PbUserCollectionList builderWithPrototype:resultPbUserCollectionList];
}
- (PbUserCollectionList*) defaultInstance {
  return [PbUserCollectionList defaultInstance];
}
- (PbUserCollectionList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserCollectionList*) buildPartial {
  PbUserCollectionList* returnMe = resultPbUserCollectionList;
  self.resultPbUserCollectionList = nil;
  return returnMe;
}
- (PbUserCollectionListBuilder*) mergeFrom:(PbUserCollectionList*) other {
  if (other == [PbUserCollectionList defaultInstance]) {
    return self;
  }
  if (other.hasUpdateType) {
    [self setUpdateType:other.updateType];
  }
  if (other.collectionsArray.count > 0) {
    if (resultPbUserCollectionList.collectionsArray == nil) {
      resultPbUserCollectionList.collectionsArray = [[NSMutableArray alloc] initWithArray:other.collectionsArray];
    } else {
      [resultPbUserCollectionList.collectionsArray addObjectsFromArray:other.collectionsArray];
    }
  }
  if (other.hasCollectionsCnt) {
    [self setCollectionsCnt:other.collectionsCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserCollectionListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserCollectionListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpdateType:[input readInt32]];
        break;
      }
      case 18: {
        PbUserCollectionBuilder* subBuilder = [PbUserCollection builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCollections:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setCollectionsCnt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUpdateType {
  return resultPbUserCollectionList.hasUpdateType;
}
- (SInt32) updateType {
  return resultPbUserCollectionList.updateType;
}
- (PbUserCollectionListBuilder*) setUpdateType:(SInt32) value {
  resultPbUserCollectionList.hasUpdateType = YES;
  resultPbUserCollectionList.updateType = value;
  return self;
}
- (PbUserCollectionListBuilder*) clearUpdateType {
  resultPbUserCollectionList.hasUpdateType = NO;
  resultPbUserCollectionList.updateType = 0;
  return self;
}
- (NSMutableArray *)collections {
  return resultPbUserCollectionList.collectionsArray;
}
- (PbUserCollection*)collectionsAtIndex:(NSUInteger)index {
  return [resultPbUserCollectionList collectionsAtIndex:index];
}
- (PbUserCollectionListBuilder *)addCollections:(PbUserCollection*)value {
  if (resultPbUserCollectionList.collectionsArray == nil) {
    resultPbUserCollectionList.collectionsArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserCollectionList.collectionsArray addObject:value];
  return self;
}
- (PbUserCollectionListBuilder *)setCollectionsArray:(NSArray *)array {
  resultPbUserCollectionList.collectionsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserCollectionListBuilder *)clearCollections {
  resultPbUserCollectionList.collectionsArray = nil;
  return self;
}
- (BOOL) hasCollectionsCnt {
  return resultPbUserCollectionList.hasCollectionsCnt;
}
- (SInt32) collectionsCnt {
  return resultPbUserCollectionList.collectionsCnt;
}
- (PbUserCollectionListBuilder*) setCollectionsCnt:(SInt32) value {
  resultPbUserCollectionList.hasCollectionsCnt = YES;
  resultPbUserCollectionList.collectionsCnt = value;
  return self;
}
- (PbUserCollectionListBuilder*) clearCollectionsCnt {
  resultPbUserCollectionList.hasCollectionsCnt = NO;
  resultPbUserCollectionList.collectionsCnt = 0;
  return self;
}
@end

@interface PbUserData ()
@property (strong) PbUserInfo* info;
@property (strong) PbUserExtra* extra;
@property (strong) NSMutableArray * friendListArray;
@property (strong) NSMutableArray * friendValidationListArray;
@property (strong) NSMutableArray * friendRecommendListArray;
@property (strong) NSMutableArray * imGroupArray;
@property (strong) PbUserInfo* otherInfo;
@property (strong) NSMutableArray * prjListArray;
@property (strong) NSMutableArray * recommendFriendsArray;
@property (strong) NSMutableArray * prjsArray;
@end

@implementation PbUserData

- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value_ {
  hasInfo_ = !!_value_;
}
@synthesize info;
- (BOOL) hasExtra {
  return !!hasExtra_;
}
- (void) setHasExtra:(BOOL) _value_ {
  hasExtra_ = !!_value_;
}
@synthesize extra;
@synthesize friendListArray;
@dynamic friendList;
@synthesize friendValidationListArray;
@dynamic friendValidationList;
@synthesize friendRecommendListArray;
@dynamic friendRecommendList;
@synthesize imGroupArray;
@dynamic imGroup;
- (BOOL) hasOtherInfo {
  return !!hasOtherInfo_;
}
- (void) setHasOtherInfo:(BOOL) _value_ {
  hasOtherInfo_ = !!_value_;
}
@synthesize otherInfo;
@synthesize prjListArray;
@dynamic prjList;
@synthesize recommendFriendsArray;
@dynamic recommendFriends;
@synthesize prjsArray;
@dynamic prjs;
- (instancetype) init {
  if ((self = [super init])) {
    self.info = [PbUserInfo defaultInstance];
    self.extra = [PbUserExtra defaultInstance];
    self.otherInfo = [PbUserInfo defaultInstance];
  }
  return self;
}
static PbUserData* defaultPbUserDataInstance = nil;
+ (void) initialize {
  if (self == [PbUserData class]) {
    defaultPbUserDataInstance = [[PbUserData alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbUserDataInstance;
}
- (instancetype) defaultInstance {
  return defaultPbUserDataInstance;
}
- (NSArray *)friendList {
  return friendListArray;
}
- (PbUserFriend*)friendListAtIndex:(NSUInteger)index {
  return [friendListArray objectAtIndex:index];
}
- (NSArray *)friendValidationList {
  return friendValidationListArray;
}
- (PbUserFriend*)friendValidationListAtIndex:(NSUInteger)index {
  return [friendValidationListArray objectAtIndex:index];
}
- (NSArray *)friendRecommendList {
  return friendRecommendListArray;
}
- (PbUserFriend*)friendRecommendListAtIndex:(NSUInteger)index {
  return [friendRecommendListArray objectAtIndex:index];
}
- (NSArray *)imGroup {
  return imGroupArray;
}
- (PbUserImGroup*)imGroupAtIndex:(NSUInteger)index {
  return [imGroupArray objectAtIndex:index];
}
- (NSArray *)prjList {
  return prjListArray;
}
- (PbUserPrj*)prjListAtIndex:(NSUInteger)index {
  return [prjListArray objectAtIndex:index];
}
- (NSArray *)recommendFriends {
  return recommendFriendsArray;
}
- (PbUserRecommendFriend*)recommendFriendsAtIndex:(NSUInteger)index {
  return [recommendFriendsArray objectAtIndex:index];
}
- (NSArray *)prjs {
  return prjsArray;
}
- (PbPrjRecommendInfo*)prjsAtIndex:(NSUInteger)index {
  return [prjsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInfo) {
    [output writeMessage:1 value:self.info];
  }
  if (self.hasExtra) {
    [output writeMessage:2 value:self.extra];
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.friendValidationListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.friendRecommendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbUserImGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  if (self.hasOtherInfo) {
    [output writeMessage:7 value:self.otherInfo];
  }
  [self.prjListArray enumerateObjectsUsingBlock:^(PbUserPrj *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:9 value:element];
  }];
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:10 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInfo) {
    size_ += computeMessageSize(1, self.info);
  }
  if (self.hasExtra) {
    size_ += computeMessageSize(2, self.extra);
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  [self.friendValidationListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  [self.friendRecommendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbUserImGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  if (self.hasOtherInfo) {
    size_ += computeMessageSize(7, self.otherInfo);
  }
  [self.prjListArray enumerateObjectsUsingBlock:^(PbUserPrj *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(9, element);
  }];
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(10, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbUserData*) parseFromData:(NSData*) data {
  return (PbUserData*)[[[PbUserData builder] mergeFromData:data] build];
}
+ (PbUserData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserData*)[[[PbUserData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbUserData*) parseFromInputStream:(NSInputStream*) input {
  return (PbUserData*)[[[PbUserData builder] mergeFromInputStream:input] build];
}
+ (PbUserData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserData*)[[[PbUserData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbUserData*)[[[PbUserData builder] mergeFromCodedInputStream:input] build];
}
+ (PbUserData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbUserData*)[[[PbUserData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbUserDataBuilder*) builder {
  return [[PbUserDataBuilder alloc] init];
}
+ (PbUserDataBuilder*) builderWithPrototype:(PbUserData*) prototype {
  return [[PbUserData builder] mergeFrom:prototype];
}
- (PbUserDataBuilder*) builder {
  return [PbUserData builder];
}
- (PbUserDataBuilder*) toBuilder {
  return [PbUserData builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"info"];
    [self.info writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasExtra) {
    [output appendFormat:@"%@%@ {\n", indent, @"extra"];
    [self.extra writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.friendValidationListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendValidationList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.friendRecommendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendRecommendList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbUserImGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"imGroup"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasOtherInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"otherInfo"];
    [self.otherInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.prjListArray enumerateObjectsUsingBlock:^(PbUserPrj *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"recommendFriends"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"prjs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.info storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"info"];
  }
  if (self.hasExtra) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.extra storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"extra"];
  }
  for (PbUserFriend* element in self.friendListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"friendList"];
  }
  for (PbUserFriend* element in self.friendValidationListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"friendValidationList"];
  }
  for (PbUserFriend* element in self.friendRecommendListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"friendRecommendList"];
  }
  for (PbUserImGroup* element in self.imGroupArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"imGroup"];
  }
  if (self.hasOtherInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.otherInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"otherInfo"];
  }
  for (PbUserPrj* element in self.prjListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjList"];
  }
  for (PbUserRecommendFriend* element in self.recommendFriendsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"recommendFriends"];
  }
  for (PbPrjRecommendInfo* element in self.prjsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"prjs"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbUserData class]]) {
    return NO;
  }
  PbUserData *otherMessage = other;
  return
      self.hasInfo == otherMessage.hasInfo &&
      (!self.hasInfo || [self.info isEqual:otherMessage.info]) &&
      self.hasExtra == otherMessage.hasExtra &&
      (!self.hasExtra || [self.extra isEqual:otherMessage.extra]) &&
      [self.friendListArray isEqualToArray:otherMessage.friendListArray] &&
      [self.friendValidationListArray isEqualToArray:otherMessage.friendValidationListArray] &&
      [self.friendRecommendListArray isEqualToArray:otherMessage.friendRecommendListArray] &&
      [self.imGroupArray isEqualToArray:otherMessage.imGroupArray] &&
      self.hasOtherInfo == otherMessage.hasOtherInfo &&
      (!self.hasOtherInfo || [self.otherInfo isEqual:otherMessage.otherInfo]) &&
      [self.prjListArray isEqualToArray:otherMessage.prjListArray] &&
      [self.recommendFriendsArray isEqualToArray:otherMessage.recommendFriendsArray] &&
      [self.prjsArray isEqualToArray:otherMessage.prjsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInfo) {
    hashCode = hashCode * 31 + [self.info hash];
  }
  if (self.hasExtra) {
    hashCode = hashCode * 31 + [self.extra hash];
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.friendValidationListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.friendRecommendListArray enumerateObjectsUsingBlock:^(PbUserFriend *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.imGroupArray enumerateObjectsUsingBlock:^(PbUserImGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasOtherInfo) {
    hashCode = hashCode * 31 + [self.otherInfo hash];
  }
  [self.prjListArray enumerateObjectsUsingBlock:^(PbUserPrj *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.recommendFriendsArray enumerateObjectsUsingBlock:^(PbUserRecommendFriend *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.prjsArray enumerateObjectsUsingBlock:^(PbPrjRecommendInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbUserDataBuilder()
@property (strong) PbUserData* resultPbUserData;
@end

@implementation PbUserDataBuilder
@synthesize resultPbUserData;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbUserData = [[PbUserData alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbUserData;
}
- (PbUserDataBuilder*) clear {
  self.resultPbUserData = [[PbUserData alloc] init];
  return self;
}
- (PbUserDataBuilder*) clone {
  return [PbUserData builderWithPrototype:resultPbUserData];
}
- (PbUserData*) defaultInstance {
  return [PbUserData defaultInstance];
}
- (PbUserData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbUserData*) buildPartial {
  PbUserData* returnMe = resultPbUserData;
  self.resultPbUserData = nil;
  return returnMe;
}
- (PbUserDataBuilder*) mergeFrom:(PbUserData*) other {
  if (other == [PbUserData defaultInstance]) {
    return self;
  }
  if (other.hasInfo) {
    [self mergeInfo:other.info];
  }
  if (other.hasExtra) {
    [self mergeExtra:other.extra];
  }
  if (other.friendListArray.count > 0) {
    if (resultPbUserData.friendListArray == nil) {
      resultPbUserData.friendListArray = [[NSMutableArray alloc] initWithArray:other.friendListArray];
    } else {
      [resultPbUserData.friendListArray addObjectsFromArray:other.friendListArray];
    }
  }
  if (other.friendValidationListArray.count > 0) {
    if (resultPbUserData.friendValidationListArray == nil) {
      resultPbUserData.friendValidationListArray = [[NSMutableArray alloc] initWithArray:other.friendValidationListArray];
    } else {
      [resultPbUserData.friendValidationListArray addObjectsFromArray:other.friendValidationListArray];
    }
  }
  if (other.friendRecommendListArray.count > 0) {
    if (resultPbUserData.friendRecommendListArray == nil) {
      resultPbUserData.friendRecommendListArray = [[NSMutableArray alloc] initWithArray:other.friendRecommendListArray];
    } else {
      [resultPbUserData.friendRecommendListArray addObjectsFromArray:other.friendRecommendListArray];
    }
  }
  if (other.imGroupArray.count > 0) {
    if (resultPbUserData.imGroupArray == nil) {
      resultPbUserData.imGroupArray = [[NSMutableArray alloc] initWithArray:other.imGroupArray];
    } else {
      [resultPbUserData.imGroupArray addObjectsFromArray:other.imGroupArray];
    }
  }
  if (other.hasOtherInfo) {
    [self mergeOtherInfo:other.otherInfo];
  }
  if (other.prjListArray.count > 0) {
    if (resultPbUserData.prjListArray == nil) {
      resultPbUserData.prjListArray = [[NSMutableArray alloc] initWithArray:other.prjListArray];
    } else {
      [resultPbUserData.prjListArray addObjectsFromArray:other.prjListArray];
    }
  }
  if (other.recommendFriendsArray.count > 0) {
    if (resultPbUserData.recommendFriendsArray == nil) {
      resultPbUserData.recommendFriendsArray = [[NSMutableArray alloc] initWithArray:other.recommendFriendsArray];
    } else {
      [resultPbUserData.recommendFriendsArray addObjectsFromArray:other.recommendFriendsArray];
    }
  }
  if (other.prjsArray.count > 0) {
    if (resultPbUserData.prjsArray == nil) {
      resultPbUserData.prjsArray = [[NSMutableArray alloc] initWithArray:other.prjsArray];
    } else {
      [resultPbUserData.prjsArray addObjectsFromArray:other.prjsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbUserDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbUserDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PbUserInfoBuilder* subBuilder = [PbUserInfo builder];
        if (self.hasInfo) {
          [subBuilder mergeFrom:self.info];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PbUserExtraBuilder* subBuilder = [PbUserExtra builder];
        if (self.hasExtra) {
          [subBuilder mergeFrom:self.extra];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExtra:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PbUserFriendBuilder* subBuilder = [PbUserFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFriendList:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        PbUserFriendBuilder* subBuilder = [PbUserFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFriendValidationList:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        PbUserFriendBuilder* subBuilder = [PbUserFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFriendRecommendList:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PbUserImGroupBuilder* subBuilder = [PbUserImGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addImGroup:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PbUserInfoBuilder* subBuilder = [PbUserInfo builder];
        if (self.hasOtherInfo) {
          [subBuilder mergeFrom:self.otherInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOtherInfo:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PbUserPrjBuilder* subBuilder = [PbUserPrj builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjList:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        PbUserRecommendFriendBuilder* subBuilder = [PbUserRecommendFriend builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecommendFriends:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        PbPrjRecommendInfoBuilder* subBuilder = [PbPrjRecommendInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrjs:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasInfo {
  return resultPbUserData.hasInfo;
}
- (PbUserInfo*) info {
  return resultPbUserData.info;
}
- (PbUserDataBuilder*) setInfo:(PbUserInfo*) value {
  resultPbUserData.hasInfo = YES;
  resultPbUserData.info = value;
  return self;
}
- (PbUserDataBuilder*) setInfoBuilder:(PbUserInfoBuilder*) builderForValue {
  return [self setInfo:[builderForValue build]];
}
- (PbUserDataBuilder*) mergeInfo:(PbUserInfo*) value {
  if (resultPbUserData.hasInfo &&
      resultPbUserData.info != [PbUserInfo defaultInstance]) {
    resultPbUserData.info =
      [[[PbUserInfo builderWithPrototype:resultPbUserData.info] mergeFrom:value] buildPartial];
  } else {
    resultPbUserData.info = value;
  }
  resultPbUserData.hasInfo = YES;
  return self;
}
- (PbUserDataBuilder*) clearInfo {
  resultPbUserData.hasInfo = NO;
  resultPbUserData.info = [PbUserInfo defaultInstance];
  return self;
}
- (BOOL) hasExtra {
  return resultPbUserData.hasExtra;
}
- (PbUserExtra*) extra {
  return resultPbUserData.extra;
}
- (PbUserDataBuilder*) setExtra:(PbUserExtra*) value {
  resultPbUserData.hasExtra = YES;
  resultPbUserData.extra = value;
  return self;
}
- (PbUserDataBuilder*) setExtraBuilder:(PbUserExtraBuilder*) builderForValue {
  return [self setExtra:[builderForValue build]];
}
- (PbUserDataBuilder*) mergeExtra:(PbUserExtra*) value {
  if (resultPbUserData.hasExtra &&
      resultPbUserData.extra != [PbUserExtra defaultInstance]) {
    resultPbUserData.extra =
      [[[PbUserExtra builderWithPrototype:resultPbUserData.extra] mergeFrom:value] buildPartial];
  } else {
    resultPbUserData.extra = value;
  }
  resultPbUserData.hasExtra = YES;
  return self;
}
- (PbUserDataBuilder*) clearExtra {
  resultPbUserData.hasExtra = NO;
  resultPbUserData.extra = [PbUserExtra defaultInstance];
  return self;
}
- (NSMutableArray *)friendList {
  return resultPbUserData.friendListArray;
}
- (PbUserFriend*)friendListAtIndex:(NSUInteger)index {
  return [resultPbUserData friendListAtIndex:index];
}
- (PbUserDataBuilder *)addFriendList:(PbUserFriend*)value {
  if (resultPbUserData.friendListArray == nil) {
    resultPbUserData.friendListArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.friendListArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setFriendListArray:(NSArray *)array {
  resultPbUserData.friendListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearFriendList {
  resultPbUserData.friendListArray = nil;
  return self;
}
- (NSMutableArray *)friendValidationList {
  return resultPbUserData.friendValidationListArray;
}
- (PbUserFriend*)friendValidationListAtIndex:(NSUInteger)index {
  return [resultPbUserData friendValidationListAtIndex:index];
}
- (PbUserDataBuilder *)addFriendValidationList:(PbUserFriend*)value {
  if (resultPbUserData.friendValidationListArray == nil) {
    resultPbUserData.friendValidationListArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.friendValidationListArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setFriendValidationListArray:(NSArray *)array {
  resultPbUserData.friendValidationListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearFriendValidationList {
  resultPbUserData.friendValidationListArray = nil;
  return self;
}
- (NSMutableArray *)friendRecommendList {
  return resultPbUserData.friendRecommendListArray;
}
- (PbUserFriend*)friendRecommendListAtIndex:(NSUInteger)index {
  return [resultPbUserData friendRecommendListAtIndex:index];
}
- (PbUserDataBuilder *)addFriendRecommendList:(PbUserFriend*)value {
  if (resultPbUserData.friendRecommendListArray == nil) {
    resultPbUserData.friendRecommendListArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.friendRecommendListArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setFriendRecommendListArray:(NSArray *)array {
  resultPbUserData.friendRecommendListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearFriendRecommendList {
  resultPbUserData.friendRecommendListArray = nil;
  return self;
}
- (NSMutableArray *)imGroup {
  return resultPbUserData.imGroupArray;
}
- (PbUserImGroup*)imGroupAtIndex:(NSUInteger)index {
  return [resultPbUserData imGroupAtIndex:index];
}
- (PbUserDataBuilder *)addImGroup:(PbUserImGroup*)value {
  if (resultPbUserData.imGroupArray == nil) {
    resultPbUserData.imGroupArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.imGroupArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setImGroupArray:(NSArray *)array {
  resultPbUserData.imGroupArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearImGroup {
  resultPbUserData.imGroupArray = nil;
  return self;
}
- (BOOL) hasOtherInfo {
  return resultPbUserData.hasOtherInfo;
}
- (PbUserInfo*) otherInfo {
  return resultPbUserData.otherInfo;
}
- (PbUserDataBuilder*) setOtherInfo:(PbUserInfo*) value {
  resultPbUserData.hasOtherInfo = YES;
  resultPbUserData.otherInfo = value;
  return self;
}
- (PbUserDataBuilder*) setOtherInfoBuilder:(PbUserInfoBuilder*) builderForValue {
  return [self setOtherInfo:[builderForValue build]];
}
- (PbUserDataBuilder*) mergeOtherInfo:(PbUserInfo*) value {
  if (resultPbUserData.hasOtherInfo &&
      resultPbUserData.otherInfo != [PbUserInfo defaultInstance]) {
    resultPbUserData.otherInfo =
      [[[PbUserInfo builderWithPrototype:resultPbUserData.otherInfo] mergeFrom:value] buildPartial];
  } else {
    resultPbUserData.otherInfo = value;
  }
  resultPbUserData.hasOtherInfo = YES;
  return self;
}
- (PbUserDataBuilder*) clearOtherInfo {
  resultPbUserData.hasOtherInfo = NO;
  resultPbUserData.otherInfo = [PbUserInfo defaultInstance];
  return self;
}
- (NSMutableArray *)prjList {
  return resultPbUserData.prjListArray;
}
- (PbUserPrj*)prjListAtIndex:(NSUInteger)index {
  return [resultPbUserData prjListAtIndex:index];
}
- (PbUserDataBuilder *)addPrjList:(PbUserPrj*)value {
  if (resultPbUserData.prjListArray == nil) {
    resultPbUserData.prjListArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.prjListArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setPrjListArray:(NSArray *)array {
  resultPbUserData.prjListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearPrjList {
  resultPbUserData.prjListArray = nil;
  return self;
}
- (NSMutableArray *)recommendFriends {
  return resultPbUserData.recommendFriendsArray;
}
- (PbUserRecommendFriend*)recommendFriendsAtIndex:(NSUInteger)index {
  return [resultPbUserData recommendFriendsAtIndex:index];
}
- (PbUserDataBuilder *)addRecommendFriends:(PbUserRecommendFriend*)value {
  if (resultPbUserData.recommendFriendsArray == nil) {
    resultPbUserData.recommendFriendsArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.recommendFriendsArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setRecommendFriendsArray:(NSArray *)array {
  resultPbUserData.recommendFriendsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearRecommendFriends {
  resultPbUserData.recommendFriendsArray = nil;
  return self;
}
- (NSMutableArray *)prjs {
  return resultPbUserData.prjsArray;
}
- (PbPrjRecommendInfo*)prjsAtIndex:(NSUInteger)index {
  return [resultPbUserData prjsAtIndex:index];
}
- (PbUserDataBuilder *)addPrjs:(PbPrjRecommendInfo*)value {
  if (resultPbUserData.prjsArray == nil) {
    resultPbUserData.prjsArray = [[NSMutableArray alloc]init];
  }
  [resultPbUserData.prjsArray addObject:value];
  return self;
}
- (PbUserDataBuilder *)setPrjsArray:(NSArray *)array {
  resultPbUserData.prjsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PbUserDataBuilder *)clearPrjs {
  resultPbUserData.prjsArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
