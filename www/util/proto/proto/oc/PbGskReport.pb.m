// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PbGskReport.pb.h"
// @@protoc_insertion_point(imports)

@implementation PbGskReportRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PbGskReportRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PbReportBaseInfo ()
@property UInt32 uin;
@property SInt32 clt;
@property (strong) NSString* phone;
@property SInt32 dye;
@property (strong) NSString* ip;
@property (strong) NSString* name;
@property (strong) NSString* province;
@property (strong) NSString* city;
@property (strong) NSString* companyType;
@property (strong) NSString* yearsOfWorking;
@property (strong) NSString* jobType;
@property (strong) NSString* jobTitle;
@property SInt32 inviterUid;
@property SInt32 friendNum;
@property SInt32 continuityDayNum;
@property SInt32 projectMembersNum;
@property (strong) NSString* company;
@end

@implementation PbReportBaseInfo

- (BOOL) hasUin {
  return !!hasUin_;
}
- (void) setHasUin:(BOOL) _value_ {
  hasUin_ = !!_value_;
}
@synthesize uin;
- (BOOL) hasClt {
  return !!hasClt_;
}
- (void) setHasClt:(BOOL) _value_ {
  hasClt_ = !!_value_;
}
@synthesize clt;
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (BOOL) hasDye {
  return !!hasDye_;
}
- (void) setHasDye:(BOOL) _value_ {
  hasDye_ = !!_value_;
}
@synthesize dye;
- (BOOL) hasIp {
  return !!hasIp_;
}
- (void) setHasIp:(BOOL) _value_ {
  hasIp_ = !!_value_;
}
@synthesize ip;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) _value_ {
  hasProvince_ = !!_value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (BOOL) hasCompanyType {
  return !!hasCompanyType_;
}
- (void) setHasCompanyType:(BOOL) _value_ {
  hasCompanyType_ = !!_value_;
}
@synthesize companyType;
- (BOOL) hasYearsOfWorking {
  return !!hasYearsOfWorking_;
}
- (void) setHasYearsOfWorking:(BOOL) _value_ {
  hasYearsOfWorking_ = !!_value_;
}
@synthesize yearsOfWorking;
- (BOOL) hasJobType {
  return !!hasJobType_;
}
- (void) setHasJobType:(BOOL) _value_ {
  hasJobType_ = !!_value_;
}
@synthesize jobType;
- (BOOL) hasJobTitle {
  return !!hasJobTitle_;
}
- (void) setHasJobTitle:(BOOL) _value_ {
  hasJobTitle_ = !!_value_;
}
@synthesize jobTitle;
- (BOOL) hasInviterUid {
  return !!hasInviterUid_;
}
- (void) setHasInviterUid:(BOOL) _value_ {
  hasInviterUid_ = !!_value_;
}
@synthesize inviterUid;
- (BOOL) hasFriendNum {
  return !!hasFriendNum_;
}
- (void) setHasFriendNum:(BOOL) _value_ {
  hasFriendNum_ = !!_value_;
}
@synthesize friendNum;
- (BOOL) hasContinuityDayNum {
  return !!hasContinuityDayNum_;
}
- (void) setHasContinuityDayNum:(BOOL) _value_ {
  hasContinuityDayNum_ = !!_value_;
}
@synthesize continuityDayNum;
- (BOOL) hasProjectMembersNum {
  return !!hasProjectMembersNum_;
}
- (void) setHasProjectMembersNum:(BOOL) _value_ {
  hasProjectMembersNum_ = !!_value_;
}
@synthesize projectMembersNum;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) _value_ {
  hasCompany_ = !!_value_;
}
@synthesize company;
- (instancetype) init {
  if ((self = [super init])) {
    self.uin = 0;
    self.clt = 0;
    self.phone = @"";
    self.dye = 0;
    self.ip = @"";
    self.name = @"";
    self.province = @"";
    self.city = @"";
    self.companyType = @"";
    self.yearsOfWorking = @"";
    self.jobType = @"";
    self.jobTitle = @"";
    self.inviterUid = 0;
    self.friendNum = 0;
    self.continuityDayNum = 0;
    self.projectMembersNum = 0;
    self.company = @"";
  }
  return self;
}
static PbReportBaseInfo* defaultPbReportBaseInfoInstance = nil;
+ (void) initialize {
  if (self == [PbReportBaseInfo class]) {
    defaultPbReportBaseInfoInstance = [[PbReportBaseInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReportBaseInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReportBaseInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUin) {
    [output writeUInt32:1 value:self.uin];
  }
  if (self.hasClt) {
    [output writeInt32:2 value:self.clt];
  }
  if (self.hasPhone) {
    [output writeString:3 value:self.phone];
  }
  if (self.hasDye) {
    [output writeInt32:4 value:self.dye];
  }
  if (self.hasIp) {
    [output writeString:5 value:self.ip];
  }
  if (self.hasName) {
    [output writeString:6 value:self.name];
  }
  if (self.hasProvince) {
    [output writeString:7 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:8 value:self.city];
  }
  if (self.hasCompanyType) {
    [output writeString:9 value:self.companyType];
  }
  if (self.hasYearsOfWorking) {
    [output writeString:10 value:self.yearsOfWorking];
  }
  if (self.hasJobType) {
    [output writeString:11 value:self.jobType];
  }
  if (self.hasJobTitle) {
    [output writeString:12 value:self.jobTitle];
  }
  if (self.hasInviterUid) {
    [output writeInt32:13 value:self.inviterUid];
  }
  if (self.hasFriendNum) {
    [output writeInt32:14 value:self.friendNum];
  }
  if (self.hasContinuityDayNum) {
    [output writeInt32:15 value:self.continuityDayNum];
  }
  if (self.hasProjectMembersNum) {
    [output writeInt32:16 value:self.projectMembersNum];
  }
  if (self.hasCompany) {
    [output writeString:17 value:self.company];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUin) {
    size_ += computeUInt32Size(1, self.uin);
  }
  if (self.hasClt) {
    size_ += computeInt32Size(2, self.clt);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(3, self.phone);
  }
  if (self.hasDye) {
    size_ += computeInt32Size(4, self.dye);
  }
  if (self.hasIp) {
    size_ += computeStringSize(5, self.ip);
  }
  if (self.hasName) {
    size_ += computeStringSize(6, self.name);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(7, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(8, self.city);
  }
  if (self.hasCompanyType) {
    size_ += computeStringSize(9, self.companyType);
  }
  if (self.hasYearsOfWorking) {
    size_ += computeStringSize(10, self.yearsOfWorking);
  }
  if (self.hasJobType) {
    size_ += computeStringSize(11, self.jobType);
  }
  if (self.hasJobTitle) {
    size_ += computeStringSize(12, self.jobTitle);
  }
  if (self.hasInviterUid) {
    size_ += computeInt32Size(13, self.inviterUid);
  }
  if (self.hasFriendNum) {
    size_ += computeInt32Size(14, self.friendNum);
  }
  if (self.hasContinuityDayNum) {
    size_ += computeInt32Size(15, self.continuityDayNum);
  }
  if (self.hasProjectMembersNum) {
    size_ += computeInt32Size(16, self.projectMembersNum);
  }
  if (self.hasCompany) {
    size_ += computeStringSize(17, self.company);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReportBaseInfo*) parseFromData:(NSData*) data {
  return (PbReportBaseInfo*)[[[PbReportBaseInfo builder] mergeFromData:data] build];
}
+ (PbReportBaseInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportBaseInfo*)[[[PbReportBaseInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReportBaseInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PbReportBaseInfo*)[[[PbReportBaseInfo builder] mergeFromInputStream:input] build];
}
+ (PbReportBaseInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportBaseInfo*)[[[PbReportBaseInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportBaseInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReportBaseInfo*)[[[PbReportBaseInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PbReportBaseInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportBaseInfo*)[[[PbReportBaseInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportBaseInfoBuilder*) builder {
  return [[PbReportBaseInfoBuilder alloc] init];
}
+ (PbReportBaseInfoBuilder*) builderWithPrototype:(PbReportBaseInfo*) prototype {
  return [[PbReportBaseInfo builder] mergeFrom:prototype];
}
- (PbReportBaseInfoBuilder*) builder {
  return [PbReportBaseInfo builder];
}
- (PbReportBaseInfoBuilder*) toBuilder {
  return [PbReportBaseInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uin", [NSNumber numberWithInteger:self.uin]];
  }
  if (self.hasClt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clt", [NSNumber numberWithInteger:self.clt]];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  if (self.hasDye) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dye", [NSNumber numberWithInteger:self.dye]];
  }
  if (self.hasIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ip", self.ip];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  if (self.hasCompanyType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyType", self.companyType];
  }
  if (self.hasYearsOfWorking) {
    [output appendFormat:@"%@%@: %@\n", indent, @"yearsOfWorking", self.yearsOfWorking];
  }
  if (self.hasJobType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobType", self.jobType];
  }
  if (self.hasJobTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobTitle", self.jobTitle];
  }
  if (self.hasInviterUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"inviterUid", [NSNumber numberWithInteger:self.inviterUid]];
  }
  if (self.hasFriendNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendNum", [NSNumber numberWithInteger:self.friendNum]];
  }
  if (self.hasContinuityDayNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"continuityDayNum", [NSNumber numberWithInteger:self.continuityDayNum]];
  }
  if (self.hasProjectMembersNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"projectMembersNum", [NSNumber numberWithInteger:self.projectMembersNum]];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@: %@\n", indent, @"company", self.company];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.uin] forKey: @"uin"];
  }
  if (self.hasClt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.clt] forKey: @"clt"];
  }
  if (self.hasPhone) {
    [dictionary setObject: self.phone forKey: @"phone"];
  }
  if (self.hasDye) {
    [dictionary setObject: [NSNumber numberWithInteger:self.dye] forKey: @"dye"];
  }
  if (self.hasIp) {
    [dictionary setObject: self.ip forKey: @"ip"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasProvince) {
    [dictionary setObject: self.province forKey: @"province"];
  }
  if (self.hasCity) {
    [dictionary setObject: self.city forKey: @"city"];
  }
  if (self.hasCompanyType) {
    [dictionary setObject: self.companyType forKey: @"companyType"];
  }
  if (self.hasYearsOfWorking) {
    [dictionary setObject: self.yearsOfWorking forKey: @"yearsOfWorking"];
  }
  if (self.hasJobType) {
    [dictionary setObject: self.jobType forKey: @"jobType"];
  }
  if (self.hasJobTitle) {
    [dictionary setObject: self.jobTitle forKey: @"jobTitle"];
  }
  if (self.hasInviterUid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.inviterUid] forKey: @"inviterUid"];
  }
  if (self.hasFriendNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.friendNum] forKey: @"friendNum"];
  }
  if (self.hasContinuityDayNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.continuityDayNum] forKey: @"continuityDayNum"];
  }
  if (self.hasProjectMembersNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.projectMembersNum] forKey: @"projectMembersNum"];
  }
  if (self.hasCompany) {
    [dictionary setObject: self.company forKey: @"company"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReportBaseInfo class]]) {
    return NO;
  }
  PbReportBaseInfo *otherMessage = other;
  return
      self.hasUin == otherMessage.hasUin &&
      (!self.hasUin || self.uin == otherMessage.uin) &&
      self.hasClt == otherMessage.hasClt &&
      (!self.hasClt || self.clt == otherMessage.clt) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      self.hasDye == otherMessage.hasDye &&
      (!self.hasDye || self.dye == otherMessage.dye) &&
      self.hasIp == otherMessage.hasIp &&
      (!self.hasIp || [self.ip isEqual:otherMessage.ip]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      self.hasCompanyType == otherMessage.hasCompanyType &&
      (!self.hasCompanyType || [self.companyType isEqual:otherMessage.companyType]) &&
      self.hasYearsOfWorking == otherMessage.hasYearsOfWorking &&
      (!self.hasYearsOfWorking || [self.yearsOfWorking isEqual:otherMessage.yearsOfWorking]) &&
      self.hasJobType == otherMessage.hasJobType &&
      (!self.hasJobType || [self.jobType isEqual:otherMessage.jobType]) &&
      self.hasJobTitle == otherMessage.hasJobTitle &&
      (!self.hasJobTitle || [self.jobTitle isEqual:otherMessage.jobTitle]) &&
      self.hasInviterUid == otherMessage.hasInviterUid &&
      (!self.hasInviterUid || self.inviterUid == otherMessage.inviterUid) &&
      self.hasFriendNum == otherMessage.hasFriendNum &&
      (!self.hasFriendNum || self.friendNum == otherMessage.friendNum) &&
      self.hasContinuityDayNum == otherMessage.hasContinuityDayNum &&
      (!self.hasContinuityDayNum || self.continuityDayNum == otherMessage.continuityDayNum) &&
      self.hasProjectMembersNum == otherMessage.hasProjectMembersNum &&
      (!self.hasProjectMembersNum || self.projectMembersNum == otherMessage.projectMembersNum) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.uin] hash];
  }
  if (self.hasClt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clt] hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  if (self.hasDye) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.dye] hash];
  }
  if (self.hasIp) {
    hashCode = hashCode * 31 + [self.ip hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  if (self.hasCompanyType) {
    hashCode = hashCode * 31 + [self.companyType hash];
  }
  if (self.hasYearsOfWorking) {
    hashCode = hashCode * 31 + [self.yearsOfWorking hash];
  }
  if (self.hasJobType) {
    hashCode = hashCode * 31 + [self.jobType hash];
  }
  if (self.hasJobTitle) {
    hashCode = hashCode * 31 + [self.jobTitle hash];
  }
  if (self.hasInviterUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.inviterUid] hash];
  }
  if (self.hasFriendNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.friendNum] hash];
  }
  if (self.hasContinuityDayNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.continuityDayNum] hash];
  }
  if (self.hasProjectMembersNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.projectMembersNum] hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReportBaseInfoBuilder()
@property (strong) PbReportBaseInfo* resultPbReportBaseInfo;
@end

@implementation PbReportBaseInfoBuilder
@synthesize resultPbReportBaseInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReportBaseInfo = [[PbReportBaseInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReportBaseInfo;
}
- (PbReportBaseInfoBuilder*) clear {
  self.resultPbReportBaseInfo = [[PbReportBaseInfo alloc] init];
  return self;
}
- (PbReportBaseInfoBuilder*) clone {
  return [PbReportBaseInfo builderWithPrototype:resultPbReportBaseInfo];
}
- (PbReportBaseInfo*) defaultInstance {
  return [PbReportBaseInfo defaultInstance];
}
- (PbReportBaseInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReportBaseInfo*) buildPartial {
  PbReportBaseInfo* returnMe = resultPbReportBaseInfo;
  self.resultPbReportBaseInfo = nil;
  return returnMe;
}
- (PbReportBaseInfoBuilder*) mergeFrom:(PbReportBaseInfo*) other {
  if (other == [PbReportBaseInfo defaultInstance]) {
    return self;
  }
  if (other.hasUin) {
    [self setUin:other.uin];
  }
  if (other.hasClt) {
    [self setClt:other.clt];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  if (other.hasDye) {
    [self setDye:other.dye];
  }
  if (other.hasIp) {
    [self setIp:other.ip];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasCompanyType) {
    [self setCompanyType:other.companyType];
  }
  if (other.hasYearsOfWorking) {
    [self setYearsOfWorking:other.yearsOfWorking];
  }
  if (other.hasJobType) {
    [self setJobType:other.jobType];
  }
  if (other.hasJobTitle) {
    [self setJobTitle:other.jobTitle];
  }
  if (other.hasInviterUid) {
    [self setInviterUid:other.inviterUid];
  }
  if (other.hasFriendNum) {
    [self setFriendNum:other.friendNum];
  }
  if (other.hasContinuityDayNum) {
    [self setContinuityDayNum:other.continuityDayNum];
  }
  if (other.hasProjectMembersNum) {
    [self setProjectMembersNum:other.projectMembersNum];
  }
  if (other.hasCompany) {
    [self setCompany:other.company];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReportBaseInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReportBaseInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUin:[input readUInt32]];
        break;
      }
      case 16: {
        [self setClt:[input readInt32]];
        break;
      }
      case 26: {
        [self setPhone:[input readString]];
        break;
      }
      case 32: {
        [self setDye:[input readInt32]];
        break;
      }
      case 42: {
        [self setIp:[input readString]];
        break;
      }
      case 50: {
        [self setName:[input readString]];
        break;
      }
      case 58: {
        [self setProvince:[input readString]];
        break;
      }
      case 66: {
        [self setCity:[input readString]];
        break;
      }
      case 74: {
        [self setCompanyType:[input readString]];
        break;
      }
      case 82: {
        [self setYearsOfWorking:[input readString]];
        break;
      }
      case 90: {
        [self setJobType:[input readString]];
        break;
      }
      case 98: {
        [self setJobTitle:[input readString]];
        break;
      }
      case 104: {
        [self setInviterUid:[input readInt32]];
        break;
      }
      case 112: {
        [self setFriendNum:[input readInt32]];
        break;
      }
      case 120: {
        [self setContinuityDayNum:[input readInt32]];
        break;
      }
      case 128: {
        [self setProjectMembersNum:[input readInt32]];
        break;
      }
      case 138: {
        [self setCompany:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUin {
  return resultPbReportBaseInfo.hasUin;
}
- (UInt32) uin {
  return resultPbReportBaseInfo.uin;
}
- (PbReportBaseInfoBuilder*) setUin:(UInt32) value {
  resultPbReportBaseInfo.hasUin = YES;
  resultPbReportBaseInfo.uin = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearUin {
  resultPbReportBaseInfo.hasUin = NO;
  resultPbReportBaseInfo.uin = 0;
  return self;
}
- (BOOL) hasClt {
  return resultPbReportBaseInfo.hasClt;
}
- (SInt32) clt {
  return resultPbReportBaseInfo.clt;
}
- (PbReportBaseInfoBuilder*) setClt:(SInt32) value {
  resultPbReportBaseInfo.hasClt = YES;
  resultPbReportBaseInfo.clt = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearClt {
  resultPbReportBaseInfo.hasClt = NO;
  resultPbReportBaseInfo.clt = 0;
  return self;
}
- (BOOL) hasPhone {
  return resultPbReportBaseInfo.hasPhone;
}
- (NSString*) phone {
  return resultPbReportBaseInfo.phone;
}
- (PbReportBaseInfoBuilder*) setPhone:(NSString*) value {
  resultPbReportBaseInfo.hasPhone = YES;
  resultPbReportBaseInfo.phone = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearPhone {
  resultPbReportBaseInfo.hasPhone = NO;
  resultPbReportBaseInfo.phone = @"";
  return self;
}
- (BOOL) hasDye {
  return resultPbReportBaseInfo.hasDye;
}
- (SInt32) dye {
  return resultPbReportBaseInfo.dye;
}
- (PbReportBaseInfoBuilder*) setDye:(SInt32) value {
  resultPbReportBaseInfo.hasDye = YES;
  resultPbReportBaseInfo.dye = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearDye {
  resultPbReportBaseInfo.hasDye = NO;
  resultPbReportBaseInfo.dye = 0;
  return self;
}
- (BOOL) hasIp {
  return resultPbReportBaseInfo.hasIp;
}
- (NSString*) ip {
  return resultPbReportBaseInfo.ip;
}
- (PbReportBaseInfoBuilder*) setIp:(NSString*) value {
  resultPbReportBaseInfo.hasIp = YES;
  resultPbReportBaseInfo.ip = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearIp {
  resultPbReportBaseInfo.hasIp = NO;
  resultPbReportBaseInfo.ip = @"";
  return self;
}
- (BOOL) hasName {
  return resultPbReportBaseInfo.hasName;
}
- (NSString*) name {
  return resultPbReportBaseInfo.name;
}
- (PbReportBaseInfoBuilder*) setName:(NSString*) value {
  resultPbReportBaseInfo.hasName = YES;
  resultPbReportBaseInfo.name = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearName {
  resultPbReportBaseInfo.hasName = NO;
  resultPbReportBaseInfo.name = @"";
  return self;
}
- (BOOL) hasProvince {
  return resultPbReportBaseInfo.hasProvince;
}
- (NSString*) province {
  return resultPbReportBaseInfo.province;
}
- (PbReportBaseInfoBuilder*) setProvince:(NSString*) value {
  resultPbReportBaseInfo.hasProvince = YES;
  resultPbReportBaseInfo.province = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearProvince {
  resultPbReportBaseInfo.hasProvince = NO;
  resultPbReportBaseInfo.province = @"";
  return self;
}
- (BOOL) hasCity {
  return resultPbReportBaseInfo.hasCity;
}
- (NSString*) city {
  return resultPbReportBaseInfo.city;
}
- (PbReportBaseInfoBuilder*) setCity:(NSString*) value {
  resultPbReportBaseInfo.hasCity = YES;
  resultPbReportBaseInfo.city = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearCity {
  resultPbReportBaseInfo.hasCity = NO;
  resultPbReportBaseInfo.city = @"";
  return self;
}
- (BOOL) hasCompanyType {
  return resultPbReportBaseInfo.hasCompanyType;
}
- (NSString*) companyType {
  return resultPbReportBaseInfo.companyType;
}
- (PbReportBaseInfoBuilder*) setCompanyType:(NSString*) value {
  resultPbReportBaseInfo.hasCompanyType = YES;
  resultPbReportBaseInfo.companyType = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearCompanyType {
  resultPbReportBaseInfo.hasCompanyType = NO;
  resultPbReportBaseInfo.companyType = @"";
  return self;
}
- (BOOL) hasYearsOfWorking {
  return resultPbReportBaseInfo.hasYearsOfWorking;
}
- (NSString*) yearsOfWorking {
  return resultPbReportBaseInfo.yearsOfWorking;
}
- (PbReportBaseInfoBuilder*) setYearsOfWorking:(NSString*) value {
  resultPbReportBaseInfo.hasYearsOfWorking = YES;
  resultPbReportBaseInfo.yearsOfWorking = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearYearsOfWorking {
  resultPbReportBaseInfo.hasYearsOfWorking = NO;
  resultPbReportBaseInfo.yearsOfWorking = @"";
  return self;
}
- (BOOL) hasJobType {
  return resultPbReportBaseInfo.hasJobType;
}
- (NSString*) jobType {
  return resultPbReportBaseInfo.jobType;
}
- (PbReportBaseInfoBuilder*) setJobType:(NSString*) value {
  resultPbReportBaseInfo.hasJobType = YES;
  resultPbReportBaseInfo.jobType = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearJobType {
  resultPbReportBaseInfo.hasJobType = NO;
  resultPbReportBaseInfo.jobType = @"";
  return self;
}
- (BOOL) hasJobTitle {
  return resultPbReportBaseInfo.hasJobTitle;
}
- (NSString*) jobTitle {
  return resultPbReportBaseInfo.jobTitle;
}
- (PbReportBaseInfoBuilder*) setJobTitle:(NSString*) value {
  resultPbReportBaseInfo.hasJobTitle = YES;
  resultPbReportBaseInfo.jobTitle = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearJobTitle {
  resultPbReportBaseInfo.hasJobTitle = NO;
  resultPbReportBaseInfo.jobTitle = @"";
  return self;
}
- (BOOL) hasInviterUid {
  return resultPbReportBaseInfo.hasInviterUid;
}
- (SInt32) inviterUid {
  return resultPbReportBaseInfo.inviterUid;
}
- (PbReportBaseInfoBuilder*) setInviterUid:(SInt32) value {
  resultPbReportBaseInfo.hasInviterUid = YES;
  resultPbReportBaseInfo.inviterUid = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearInviterUid {
  resultPbReportBaseInfo.hasInviterUid = NO;
  resultPbReportBaseInfo.inviterUid = 0;
  return self;
}
- (BOOL) hasFriendNum {
  return resultPbReportBaseInfo.hasFriendNum;
}
- (SInt32) friendNum {
  return resultPbReportBaseInfo.friendNum;
}
- (PbReportBaseInfoBuilder*) setFriendNum:(SInt32) value {
  resultPbReportBaseInfo.hasFriendNum = YES;
  resultPbReportBaseInfo.friendNum = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearFriendNum {
  resultPbReportBaseInfo.hasFriendNum = NO;
  resultPbReportBaseInfo.friendNum = 0;
  return self;
}
- (BOOL) hasContinuityDayNum {
  return resultPbReportBaseInfo.hasContinuityDayNum;
}
- (SInt32) continuityDayNum {
  return resultPbReportBaseInfo.continuityDayNum;
}
- (PbReportBaseInfoBuilder*) setContinuityDayNum:(SInt32) value {
  resultPbReportBaseInfo.hasContinuityDayNum = YES;
  resultPbReportBaseInfo.continuityDayNum = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearContinuityDayNum {
  resultPbReportBaseInfo.hasContinuityDayNum = NO;
  resultPbReportBaseInfo.continuityDayNum = 0;
  return self;
}
- (BOOL) hasProjectMembersNum {
  return resultPbReportBaseInfo.hasProjectMembersNum;
}
- (SInt32) projectMembersNum {
  return resultPbReportBaseInfo.projectMembersNum;
}
- (PbReportBaseInfoBuilder*) setProjectMembersNum:(SInt32) value {
  resultPbReportBaseInfo.hasProjectMembersNum = YES;
  resultPbReportBaseInfo.projectMembersNum = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearProjectMembersNum {
  resultPbReportBaseInfo.hasProjectMembersNum = NO;
  resultPbReportBaseInfo.projectMembersNum = 0;
  return self;
}
- (BOOL) hasCompany {
  return resultPbReportBaseInfo.hasCompany;
}
- (NSString*) company {
  return resultPbReportBaseInfo.company;
}
- (PbReportBaseInfoBuilder*) setCompany:(NSString*) value {
  resultPbReportBaseInfo.hasCompany = YES;
  resultPbReportBaseInfo.company = value;
  return self;
}
- (PbReportBaseInfoBuilder*) clearCompany {
  resultPbReportBaseInfo.hasCompany = NO;
  resultPbReportBaseInfo.company = @"";
  return self;
}
@end

@interface PbReportMsgItem ()
@property (strong) NSString* msgId;
@property UInt32 msgType;
@property (strong) NSString* msgBody;
@property SInt32 senderId;
@property (strong) NSString* senderName;
@property (strong) NSString* senderRemark;
@property (strong) NSString* senderAvatar;
@property (strong) NSString* groupId;
@property UInt32 groupType;
@property (strong) NSString* groupName;
@property (strong) NSString* groupDesc;
@property SInt32 sendTime;
@property SInt32 msgSeqId;
@end

@implementation PbReportMsgItem

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasMsgBody {
  return !!hasMsgBody_;
}
- (void) setHasMsgBody:(BOOL) _value_ {
  hasMsgBody_ = !!_value_;
}
@synthesize msgBody;
- (BOOL) hasSenderId {
  return !!hasSenderId_;
}
- (void) setHasSenderId:(BOOL) _value_ {
  hasSenderId_ = !!_value_;
}
@synthesize senderId;
- (BOOL) hasSenderName {
  return !!hasSenderName_;
}
- (void) setHasSenderName:(BOOL) _value_ {
  hasSenderName_ = !!_value_;
}
@synthesize senderName;
- (BOOL) hasSenderRemark {
  return !!hasSenderRemark_;
}
- (void) setHasSenderRemark:(BOOL) _value_ {
  hasSenderRemark_ = !!_value_;
}
@synthesize senderRemark;
- (BOOL) hasSenderAvatar {
  return !!hasSenderAvatar_;
}
- (void) setHasSenderAvatar:(BOOL) _value_ {
  hasSenderAvatar_ = !!_value_;
}
@synthesize senderAvatar;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasGroupType {
  return !!hasGroupType_;
}
- (void) setHasGroupType:(BOOL) _value_ {
  hasGroupType_ = !!_value_;
}
@synthesize groupType;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) _value_ {
  hasGroupName_ = !!_value_;
}
@synthesize groupName;
- (BOOL) hasGroupDesc {
  return !!hasGroupDesc_;
}
- (void) setHasGroupDesc:(BOOL) _value_ {
  hasGroupDesc_ = !!_value_;
}
@synthesize groupDesc;
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) _value_ {
  hasSendTime_ = !!_value_;
}
@synthesize sendTime;
- (BOOL) hasMsgSeqId {
  return !!hasMsgSeqId_;
}
- (void) setHasMsgSeqId:(BOOL) _value_ {
  hasMsgSeqId_ = !!_value_;
}
@synthesize msgSeqId;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = @"";
    self.msgType = 0;
    self.msgBody = @"";
    self.senderId = 0;
    self.senderName = @"";
    self.senderRemark = @"";
    self.senderAvatar = @"";
    self.groupId = @"";
    self.groupType = 0;
    self.groupName = @"";
    self.groupDesc = @"";
    self.sendTime = 0;
    self.msgSeqId = 0;
  }
  return self;
}
static PbReportMsgItem* defaultPbReportMsgItemInstance = nil;
+ (void) initialize {
  if (self == [PbReportMsgItem class]) {
    defaultPbReportMsgItemInstance = [[PbReportMsgItem alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReportMsgItemInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReportMsgItemInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeString:1 value:self.msgId];
  }
  if (self.hasMsgType) {
    [output writeUInt32:2 value:self.msgType];
  }
  if (self.hasMsgBody) {
    [output writeString:3 value:self.msgBody];
  }
  if (self.hasSenderId) {
    [output writeInt32:4 value:self.senderId];
  }
  if (self.hasSenderName) {
    [output writeString:5 value:self.senderName];
  }
  if (self.hasSenderRemark) {
    [output writeString:6 value:self.senderRemark];
  }
  if (self.hasSenderAvatar) {
    [output writeString:7 value:self.senderAvatar];
  }
  if (self.hasGroupId) {
    [output writeString:8 value:self.groupId];
  }
  if (self.hasGroupType) {
    [output writeUInt32:9 value:self.groupType];
  }
  if (self.hasGroupName) {
    [output writeString:10 value:self.groupName];
  }
  if (self.hasGroupDesc) {
    [output writeString:11 value:self.groupDesc];
  }
  if (self.hasSendTime) {
    [output writeInt32:12 value:self.sendTime];
  }
  if (self.hasMsgSeqId) {
    [output writeInt32:13 value:self.msgSeqId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeStringSize(1, self.msgId);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(2, self.msgType);
  }
  if (self.hasMsgBody) {
    size_ += computeStringSize(3, self.msgBody);
  }
  if (self.hasSenderId) {
    size_ += computeInt32Size(4, self.senderId);
  }
  if (self.hasSenderName) {
    size_ += computeStringSize(5, self.senderName);
  }
  if (self.hasSenderRemark) {
    size_ += computeStringSize(6, self.senderRemark);
  }
  if (self.hasSenderAvatar) {
    size_ += computeStringSize(7, self.senderAvatar);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(8, self.groupId);
  }
  if (self.hasGroupType) {
    size_ += computeUInt32Size(9, self.groupType);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(10, self.groupName);
  }
  if (self.hasGroupDesc) {
    size_ += computeStringSize(11, self.groupDesc);
  }
  if (self.hasSendTime) {
    size_ += computeInt32Size(12, self.sendTime);
  }
  if (self.hasMsgSeqId) {
    size_ += computeInt32Size(13, self.msgSeqId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReportMsgItem*) parseFromData:(NSData*) data {
  return (PbReportMsgItem*)[[[PbReportMsgItem builder] mergeFromData:data] build];
}
+ (PbReportMsgItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportMsgItem*)[[[PbReportMsgItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReportMsgItem*) parseFromInputStream:(NSInputStream*) input {
  return (PbReportMsgItem*)[[[PbReportMsgItem builder] mergeFromInputStream:input] build];
}
+ (PbReportMsgItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportMsgItem*)[[[PbReportMsgItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportMsgItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReportMsgItem*)[[[PbReportMsgItem builder] mergeFromCodedInputStream:input] build];
}
+ (PbReportMsgItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportMsgItem*)[[[PbReportMsgItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportMsgItemBuilder*) builder {
  return [[PbReportMsgItemBuilder alloc] init];
}
+ (PbReportMsgItemBuilder*) builderWithPrototype:(PbReportMsgItem*) prototype {
  return [[PbReportMsgItem builder] mergeFrom:prototype];
}
- (PbReportMsgItemBuilder*) builder {
  return [PbReportMsgItem builder];
}
- (PbReportMsgItemBuilder*) toBuilder {
  return [PbReportMsgItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", self.msgId];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasMsgBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgBody", self.msgBody];
  }
  if (self.hasSenderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderId", [NSNumber numberWithInteger:self.senderId]];
  }
  if (self.hasSenderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderName", self.senderName];
  }
  if (self.hasSenderRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderRemark", self.senderRemark];
  }
  if (self.hasSenderAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderAvatar", self.senderAvatar];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupType", [NSNumber numberWithInteger:self.groupType]];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupDesc", self.groupDesc];
  }
  if (self.hasSendTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendTime", [NSNumber numberWithInteger:self.sendTime]];
  }
  if (self.hasMsgSeqId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgSeqId", [NSNumber numberWithInteger:self.msgSeqId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: self.msgId forKey: @"msgId"];
  }
  if (self.hasMsgType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.msgType] forKey: @"msgType"];
  }
  if (self.hasMsgBody) {
    [dictionary setObject: self.msgBody forKey: @"msgBody"];
  }
  if (self.hasSenderId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.senderId] forKey: @"senderId"];
  }
  if (self.hasSenderName) {
    [dictionary setObject: self.senderName forKey: @"senderName"];
  }
  if (self.hasSenderRemark) {
    [dictionary setObject: self.senderRemark forKey: @"senderRemark"];
  }
  if (self.hasSenderAvatar) {
    [dictionary setObject: self.senderAvatar forKey: @"senderAvatar"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasGroupType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.groupType] forKey: @"groupType"];
  }
  if (self.hasGroupName) {
    [dictionary setObject: self.groupName forKey: @"groupName"];
  }
  if (self.hasGroupDesc) {
    [dictionary setObject: self.groupDesc forKey: @"groupDesc"];
  }
  if (self.hasSendTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sendTime] forKey: @"sendTime"];
  }
  if (self.hasMsgSeqId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.msgSeqId] forKey: @"msgSeqId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReportMsgItem class]]) {
    return NO;
  }
  PbReportMsgItem *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || [self.msgId isEqual:otherMessage.msgId]) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasMsgBody == otherMessage.hasMsgBody &&
      (!self.hasMsgBody || [self.msgBody isEqual:otherMessage.msgBody]) &&
      self.hasSenderId == otherMessage.hasSenderId &&
      (!self.hasSenderId || self.senderId == otherMessage.senderId) &&
      self.hasSenderName == otherMessage.hasSenderName &&
      (!self.hasSenderName || [self.senderName isEqual:otherMessage.senderName]) &&
      self.hasSenderRemark == otherMessage.hasSenderRemark &&
      (!self.hasSenderRemark || [self.senderRemark isEqual:otherMessage.senderRemark]) &&
      self.hasSenderAvatar == otherMessage.hasSenderAvatar &&
      (!self.hasSenderAvatar || [self.senderAvatar isEqual:otherMessage.senderAvatar]) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupType == otherMessage.hasGroupType &&
      (!self.hasGroupType || self.groupType == otherMessage.groupType) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupDesc == otherMessage.hasGroupDesc &&
      (!self.hasGroupDesc || [self.groupDesc isEqual:otherMessage.groupDesc]) &&
      self.hasSendTime == otherMessage.hasSendTime &&
      (!self.hasSendTime || self.sendTime == otherMessage.sendTime) &&
      self.hasMsgSeqId == otherMessage.hasMsgSeqId &&
      (!self.hasMsgSeqId || self.msgSeqId == otherMessage.msgSeqId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [self.msgId hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasMsgBody) {
    hashCode = hashCode * 31 + [self.msgBody hash];
  }
  if (self.hasSenderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.senderId] hash];
  }
  if (self.hasSenderName) {
    hashCode = hashCode * 31 + [self.senderName hash];
  }
  if (self.hasSenderRemark) {
    hashCode = hashCode * 31 + [self.senderRemark hash];
  }
  if (self.hasSenderAvatar) {
    hashCode = hashCode * 31 + [self.senderAvatar hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupType] hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupDesc) {
    hashCode = hashCode * 31 + [self.groupDesc hash];
  }
  if (self.hasSendTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sendTime] hash];
  }
  if (self.hasMsgSeqId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgSeqId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReportMsgItemBuilder()
@property (strong) PbReportMsgItem* resultPbReportMsgItem;
@end

@implementation PbReportMsgItemBuilder
@synthesize resultPbReportMsgItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReportMsgItem = [[PbReportMsgItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReportMsgItem;
}
- (PbReportMsgItemBuilder*) clear {
  self.resultPbReportMsgItem = [[PbReportMsgItem alloc] init];
  return self;
}
- (PbReportMsgItemBuilder*) clone {
  return [PbReportMsgItem builderWithPrototype:resultPbReportMsgItem];
}
- (PbReportMsgItem*) defaultInstance {
  return [PbReportMsgItem defaultInstance];
}
- (PbReportMsgItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReportMsgItem*) buildPartial {
  PbReportMsgItem* returnMe = resultPbReportMsgItem;
  self.resultPbReportMsgItem = nil;
  return returnMe;
}
- (PbReportMsgItemBuilder*) mergeFrom:(PbReportMsgItem*) other {
  if (other == [PbReportMsgItem defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasMsgBody) {
    [self setMsgBody:other.msgBody];
  }
  if (other.hasSenderId) {
    [self setSenderId:other.senderId];
  }
  if (other.hasSenderName) {
    [self setSenderName:other.senderName];
  }
  if (other.hasSenderRemark) {
    [self setSenderRemark:other.senderRemark];
  }
  if (other.hasSenderAvatar) {
    [self setSenderAvatar:other.senderAvatar];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupType) {
    [self setGroupType:other.groupType];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupDesc) {
    [self setGroupDesc:other.groupDesc];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  if (other.hasMsgSeqId) {
    [self setMsgSeqId:other.msgSeqId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReportMsgItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReportMsgItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMsgId:[input readString]];
        break;
      }
      case 16: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 26: {
        [self setMsgBody:[input readString]];
        break;
      }
      case 32: {
        [self setSenderId:[input readInt32]];
        break;
      }
      case 42: {
        [self setSenderName:[input readString]];
        break;
      }
      case 50: {
        [self setSenderRemark:[input readString]];
        break;
      }
      case 58: {
        [self setSenderAvatar:[input readString]];
        break;
      }
      case 66: {
        [self setGroupId:[input readString]];
        break;
      }
      case 72: {
        [self setGroupType:[input readUInt32]];
        break;
      }
      case 82: {
        [self setGroupName:[input readString]];
        break;
      }
      case 90: {
        [self setGroupDesc:[input readString]];
        break;
      }
      case 96: {
        [self setSendTime:[input readInt32]];
        break;
      }
      case 104: {
        [self setMsgSeqId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultPbReportMsgItem.hasMsgId;
}
- (NSString*) msgId {
  return resultPbReportMsgItem.msgId;
}
- (PbReportMsgItemBuilder*) setMsgId:(NSString*) value {
  resultPbReportMsgItem.hasMsgId = YES;
  resultPbReportMsgItem.msgId = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearMsgId {
  resultPbReportMsgItem.hasMsgId = NO;
  resultPbReportMsgItem.msgId = @"";
  return self;
}
- (BOOL) hasMsgType {
  return resultPbReportMsgItem.hasMsgType;
}
- (UInt32) msgType {
  return resultPbReportMsgItem.msgType;
}
- (PbReportMsgItemBuilder*) setMsgType:(UInt32) value {
  resultPbReportMsgItem.hasMsgType = YES;
  resultPbReportMsgItem.msgType = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearMsgType {
  resultPbReportMsgItem.hasMsgType = NO;
  resultPbReportMsgItem.msgType = 0;
  return self;
}
- (BOOL) hasMsgBody {
  return resultPbReportMsgItem.hasMsgBody;
}
- (NSString*) msgBody {
  return resultPbReportMsgItem.msgBody;
}
- (PbReportMsgItemBuilder*) setMsgBody:(NSString*) value {
  resultPbReportMsgItem.hasMsgBody = YES;
  resultPbReportMsgItem.msgBody = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearMsgBody {
  resultPbReportMsgItem.hasMsgBody = NO;
  resultPbReportMsgItem.msgBody = @"";
  return self;
}
- (BOOL) hasSenderId {
  return resultPbReportMsgItem.hasSenderId;
}
- (SInt32) senderId {
  return resultPbReportMsgItem.senderId;
}
- (PbReportMsgItemBuilder*) setSenderId:(SInt32) value {
  resultPbReportMsgItem.hasSenderId = YES;
  resultPbReportMsgItem.senderId = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearSenderId {
  resultPbReportMsgItem.hasSenderId = NO;
  resultPbReportMsgItem.senderId = 0;
  return self;
}
- (BOOL) hasSenderName {
  return resultPbReportMsgItem.hasSenderName;
}
- (NSString*) senderName {
  return resultPbReportMsgItem.senderName;
}
- (PbReportMsgItemBuilder*) setSenderName:(NSString*) value {
  resultPbReportMsgItem.hasSenderName = YES;
  resultPbReportMsgItem.senderName = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearSenderName {
  resultPbReportMsgItem.hasSenderName = NO;
  resultPbReportMsgItem.senderName = @"";
  return self;
}
- (BOOL) hasSenderRemark {
  return resultPbReportMsgItem.hasSenderRemark;
}
- (NSString*) senderRemark {
  return resultPbReportMsgItem.senderRemark;
}
- (PbReportMsgItemBuilder*) setSenderRemark:(NSString*) value {
  resultPbReportMsgItem.hasSenderRemark = YES;
  resultPbReportMsgItem.senderRemark = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearSenderRemark {
  resultPbReportMsgItem.hasSenderRemark = NO;
  resultPbReportMsgItem.senderRemark = @"";
  return self;
}
- (BOOL) hasSenderAvatar {
  return resultPbReportMsgItem.hasSenderAvatar;
}
- (NSString*) senderAvatar {
  return resultPbReportMsgItem.senderAvatar;
}
- (PbReportMsgItemBuilder*) setSenderAvatar:(NSString*) value {
  resultPbReportMsgItem.hasSenderAvatar = YES;
  resultPbReportMsgItem.senderAvatar = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearSenderAvatar {
  resultPbReportMsgItem.hasSenderAvatar = NO;
  resultPbReportMsgItem.senderAvatar = @"";
  return self;
}
- (BOOL) hasGroupId {
  return resultPbReportMsgItem.hasGroupId;
}
- (NSString*) groupId {
  return resultPbReportMsgItem.groupId;
}
- (PbReportMsgItemBuilder*) setGroupId:(NSString*) value {
  resultPbReportMsgItem.hasGroupId = YES;
  resultPbReportMsgItem.groupId = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearGroupId {
  resultPbReportMsgItem.hasGroupId = NO;
  resultPbReportMsgItem.groupId = @"";
  return self;
}
- (BOOL) hasGroupType {
  return resultPbReportMsgItem.hasGroupType;
}
- (UInt32) groupType {
  return resultPbReportMsgItem.groupType;
}
- (PbReportMsgItemBuilder*) setGroupType:(UInt32) value {
  resultPbReportMsgItem.hasGroupType = YES;
  resultPbReportMsgItem.groupType = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearGroupType {
  resultPbReportMsgItem.hasGroupType = NO;
  resultPbReportMsgItem.groupType = 0;
  return self;
}
- (BOOL) hasGroupName {
  return resultPbReportMsgItem.hasGroupName;
}
- (NSString*) groupName {
  return resultPbReportMsgItem.groupName;
}
- (PbReportMsgItemBuilder*) setGroupName:(NSString*) value {
  resultPbReportMsgItem.hasGroupName = YES;
  resultPbReportMsgItem.groupName = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearGroupName {
  resultPbReportMsgItem.hasGroupName = NO;
  resultPbReportMsgItem.groupName = @"";
  return self;
}
- (BOOL) hasGroupDesc {
  return resultPbReportMsgItem.hasGroupDesc;
}
- (NSString*) groupDesc {
  return resultPbReportMsgItem.groupDesc;
}
- (PbReportMsgItemBuilder*) setGroupDesc:(NSString*) value {
  resultPbReportMsgItem.hasGroupDesc = YES;
  resultPbReportMsgItem.groupDesc = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearGroupDesc {
  resultPbReportMsgItem.hasGroupDesc = NO;
  resultPbReportMsgItem.groupDesc = @"";
  return self;
}
- (BOOL) hasSendTime {
  return resultPbReportMsgItem.hasSendTime;
}
- (SInt32) sendTime {
  return resultPbReportMsgItem.sendTime;
}
- (PbReportMsgItemBuilder*) setSendTime:(SInt32) value {
  resultPbReportMsgItem.hasSendTime = YES;
  resultPbReportMsgItem.sendTime = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearSendTime {
  resultPbReportMsgItem.hasSendTime = NO;
  resultPbReportMsgItem.sendTime = 0;
  return self;
}
- (BOOL) hasMsgSeqId {
  return resultPbReportMsgItem.hasMsgSeqId;
}
- (SInt32) msgSeqId {
  return resultPbReportMsgItem.msgSeqId;
}
- (PbReportMsgItemBuilder*) setMsgSeqId:(SInt32) value {
  resultPbReportMsgItem.hasMsgSeqId = YES;
  resultPbReportMsgItem.msgSeqId = value;
  return self;
}
- (PbReportMsgItemBuilder*) clearMsgSeqId {
  resultPbReportMsgItem.hasMsgSeqId = NO;
  resultPbReportMsgItem.msgSeqId = 0;
  return self;
}
@end

@interface PbReportClient ()
@property (strong) NSString* phoneInfo;
@property (strong) NSString* os;
@property (strong) NSString* sp;
@property (strong) NSString* network;
@property SInt32 version;
@property SInt32 clientId;
@property SInt32 channelId;
@end

@implementation PbReportClient

- (BOOL) hasPhoneInfo {
  return !!hasPhoneInfo_;
}
- (void) setHasPhoneInfo:(BOOL) _value_ {
  hasPhoneInfo_ = !!_value_;
}
@synthesize phoneInfo;
- (BOOL) hasOs {
  return !!hasOs_;
}
- (void) setHasOs:(BOOL) _value_ {
  hasOs_ = !!_value_;
}
@synthesize os;
- (BOOL) hasSp {
  return !!hasSp_;
}
- (void) setHasSp:(BOOL) _value_ {
  hasSp_ = !!_value_;
}
@synthesize sp;
- (BOOL) hasNetwork {
  return !!hasNetwork_;
}
- (void) setHasNetwork:(BOOL) _value_ {
  hasNetwork_ = !!_value_;
}
@synthesize network;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (BOOL) hasClientId {
  return !!hasClientId_;
}
- (void) setHasClientId:(BOOL) _value_ {
  hasClientId_ = !!_value_;
}
@synthesize clientId;
- (BOOL) hasChannelId {
  return !!hasChannelId_;
}
- (void) setHasChannelId:(BOOL) _value_ {
  hasChannelId_ = !!_value_;
}
@synthesize channelId;
- (instancetype) init {
  if ((self = [super init])) {
    self.phoneInfo = @"";
    self.os = @"";
    self.sp = @"";
    self.network = @"";
    self.version = 0;
    self.clientId = 0;
    self.channelId = 0;
  }
  return self;
}
static PbReportClient* defaultPbReportClientInstance = nil;
+ (void) initialize {
  if (self == [PbReportClient class]) {
    defaultPbReportClientInstance = [[PbReportClient alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReportClientInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReportClientInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneInfo) {
    [output writeString:1 value:self.phoneInfo];
  }
  if (self.hasOs) {
    [output writeString:2 value:self.os];
  }
  if (self.hasSp) {
    [output writeString:3 value:self.sp];
  }
  if (self.hasNetwork) {
    [output writeString:4 value:self.network];
  }
  if (self.hasVersion) {
    [output writeInt32:5 value:self.version];
  }
  if (self.hasClientId) {
    [output writeInt32:6 value:self.clientId];
  }
  if (self.hasChannelId) {
    [output writeInt32:7 value:self.channelId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPhoneInfo) {
    size_ += computeStringSize(1, self.phoneInfo);
  }
  if (self.hasOs) {
    size_ += computeStringSize(2, self.os);
  }
  if (self.hasSp) {
    size_ += computeStringSize(3, self.sp);
  }
  if (self.hasNetwork) {
    size_ += computeStringSize(4, self.network);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(5, self.version);
  }
  if (self.hasClientId) {
    size_ += computeInt32Size(6, self.clientId);
  }
  if (self.hasChannelId) {
    size_ += computeInt32Size(7, self.channelId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReportClient*) parseFromData:(NSData*) data {
  return (PbReportClient*)[[[PbReportClient builder] mergeFromData:data] build];
}
+ (PbReportClient*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportClient*)[[[PbReportClient builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReportClient*) parseFromInputStream:(NSInputStream*) input {
  return (PbReportClient*)[[[PbReportClient builder] mergeFromInputStream:input] build];
}
+ (PbReportClient*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportClient*)[[[PbReportClient builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportClient*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReportClient*)[[[PbReportClient builder] mergeFromCodedInputStream:input] build];
}
+ (PbReportClient*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportClient*)[[[PbReportClient builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportClientBuilder*) builder {
  return [[PbReportClientBuilder alloc] init];
}
+ (PbReportClientBuilder*) builderWithPrototype:(PbReportClient*) prototype {
  return [[PbReportClient builder] mergeFrom:prototype];
}
- (PbReportClientBuilder*) builder {
  return [PbReportClient builder];
}
- (PbReportClientBuilder*) toBuilder {
  return [PbReportClient builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPhoneInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneInfo", self.phoneInfo];
  }
  if (self.hasOs) {
    [output appendFormat:@"%@%@: %@\n", indent, @"os", self.os];
  }
  if (self.hasSp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sp", self.sp];
  }
  if (self.hasNetwork) {
    [output appendFormat:@"%@%@: %@\n", indent, @"network", self.network];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInteger:self.version]];
  }
  if (self.hasClientId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientId", [NSNumber numberWithInteger:self.clientId]];
  }
  if (self.hasChannelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelId", [NSNumber numberWithInteger:self.channelId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPhoneInfo) {
    [dictionary setObject: self.phoneInfo forKey: @"phoneInfo"];
  }
  if (self.hasOs) {
    [dictionary setObject: self.os forKey: @"os"];
  }
  if (self.hasSp) {
    [dictionary setObject: self.sp forKey: @"sp"];
  }
  if (self.hasNetwork) {
    [dictionary setObject: self.network forKey: @"network"];
  }
  if (self.hasVersion) {
    [dictionary setObject: [NSNumber numberWithInteger:self.version] forKey: @"version"];
  }
  if (self.hasClientId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.clientId] forKey: @"clientId"];
  }
  if (self.hasChannelId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.channelId] forKey: @"channelId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReportClient class]]) {
    return NO;
  }
  PbReportClient *otherMessage = other;
  return
      self.hasPhoneInfo == otherMessage.hasPhoneInfo &&
      (!self.hasPhoneInfo || [self.phoneInfo isEqual:otherMessage.phoneInfo]) &&
      self.hasOs == otherMessage.hasOs &&
      (!self.hasOs || [self.os isEqual:otherMessage.os]) &&
      self.hasSp == otherMessage.hasSp &&
      (!self.hasSp || [self.sp isEqual:otherMessage.sp]) &&
      self.hasNetwork == otherMessage.hasNetwork &&
      (!self.hasNetwork || [self.network isEqual:otherMessage.network]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      self.hasClientId == otherMessage.hasClientId &&
      (!self.hasClientId || self.clientId == otherMessage.clientId) &&
      self.hasChannelId == otherMessage.hasChannelId &&
      (!self.hasChannelId || self.channelId == otherMessage.channelId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPhoneInfo) {
    hashCode = hashCode * 31 + [self.phoneInfo hash];
  }
  if (self.hasOs) {
    hashCode = hashCode * 31 + [self.os hash];
  }
  if (self.hasSp) {
    hashCode = hashCode * 31 + [self.sp hash];
  }
  if (self.hasNetwork) {
    hashCode = hashCode * 31 + [self.network hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.version] hash];
  }
  if (self.hasClientId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clientId] hash];
  }
  if (self.hasChannelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.channelId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReportClientBuilder()
@property (strong) PbReportClient* resultPbReportClient;
@end

@implementation PbReportClientBuilder
@synthesize resultPbReportClient;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReportClient = [[PbReportClient alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReportClient;
}
- (PbReportClientBuilder*) clear {
  self.resultPbReportClient = [[PbReportClient alloc] init];
  return self;
}
- (PbReportClientBuilder*) clone {
  return [PbReportClient builderWithPrototype:resultPbReportClient];
}
- (PbReportClient*) defaultInstance {
  return [PbReportClient defaultInstance];
}
- (PbReportClient*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReportClient*) buildPartial {
  PbReportClient* returnMe = resultPbReportClient;
  self.resultPbReportClient = nil;
  return returnMe;
}
- (PbReportClientBuilder*) mergeFrom:(PbReportClient*) other {
  if (other == [PbReportClient defaultInstance]) {
    return self;
  }
  if (other.hasPhoneInfo) {
    [self setPhoneInfo:other.phoneInfo];
  }
  if (other.hasOs) {
    [self setOs:other.os];
  }
  if (other.hasSp) {
    [self setSp:other.sp];
  }
  if (other.hasNetwork) {
    [self setNetwork:other.network];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasClientId) {
    [self setClientId:other.clientId];
  }
  if (other.hasChannelId) {
    [self setChannelId:other.channelId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReportClientBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReportClientBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneInfo:[input readString]];
        break;
      }
      case 18: {
        [self setOs:[input readString]];
        break;
      }
      case 26: {
        [self setSp:[input readString]];
        break;
      }
      case 34: {
        [self setNetwork:[input readString]];
        break;
      }
      case 40: {
        [self setVersion:[input readInt32]];
        break;
      }
      case 48: {
        [self setClientId:[input readInt32]];
        break;
      }
      case 56: {
        [self setChannelId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPhoneInfo {
  return resultPbReportClient.hasPhoneInfo;
}
- (NSString*) phoneInfo {
  return resultPbReportClient.phoneInfo;
}
- (PbReportClientBuilder*) setPhoneInfo:(NSString*) value {
  resultPbReportClient.hasPhoneInfo = YES;
  resultPbReportClient.phoneInfo = value;
  return self;
}
- (PbReportClientBuilder*) clearPhoneInfo {
  resultPbReportClient.hasPhoneInfo = NO;
  resultPbReportClient.phoneInfo = @"";
  return self;
}
- (BOOL) hasOs {
  return resultPbReportClient.hasOs;
}
- (NSString*) os {
  return resultPbReportClient.os;
}
- (PbReportClientBuilder*) setOs:(NSString*) value {
  resultPbReportClient.hasOs = YES;
  resultPbReportClient.os = value;
  return self;
}
- (PbReportClientBuilder*) clearOs {
  resultPbReportClient.hasOs = NO;
  resultPbReportClient.os = @"";
  return self;
}
- (BOOL) hasSp {
  return resultPbReportClient.hasSp;
}
- (NSString*) sp {
  return resultPbReportClient.sp;
}
- (PbReportClientBuilder*) setSp:(NSString*) value {
  resultPbReportClient.hasSp = YES;
  resultPbReportClient.sp = value;
  return self;
}
- (PbReportClientBuilder*) clearSp {
  resultPbReportClient.hasSp = NO;
  resultPbReportClient.sp = @"";
  return self;
}
- (BOOL) hasNetwork {
  return resultPbReportClient.hasNetwork;
}
- (NSString*) network {
  return resultPbReportClient.network;
}
- (PbReportClientBuilder*) setNetwork:(NSString*) value {
  resultPbReportClient.hasNetwork = YES;
  resultPbReportClient.network = value;
  return self;
}
- (PbReportClientBuilder*) clearNetwork {
  resultPbReportClient.hasNetwork = NO;
  resultPbReportClient.network = @"";
  return self;
}
- (BOOL) hasVersion {
  return resultPbReportClient.hasVersion;
}
- (SInt32) version {
  return resultPbReportClient.version;
}
- (PbReportClientBuilder*) setVersion:(SInt32) value {
  resultPbReportClient.hasVersion = YES;
  resultPbReportClient.version = value;
  return self;
}
- (PbReportClientBuilder*) clearVersion {
  resultPbReportClient.hasVersion = NO;
  resultPbReportClient.version = 0;
  return self;
}
- (BOOL) hasClientId {
  return resultPbReportClient.hasClientId;
}
- (SInt32) clientId {
  return resultPbReportClient.clientId;
}
- (PbReportClientBuilder*) setClientId:(SInt32) value {
  resultPbReportClient.hasClientId = YES;
  resultPbReportClient.clientId = value;
  return self;
}
- (PbReportClientBuilder*) clearClientId {
  resultPbReportClient.hasClientId = NO;
  resultPbReportClient.clientId = 0;
  return self;
}
- (BOOL) hasChannelId {
  return resultPbReportClient.hasChannelId;
}
- (SInt32) channelId {
  return resultPbReportClient.channelId;
}
- (PbReportClientBuilder*) setChannelId:(SInt32) value {
  resultPbReportClient.hasChannelId = YES;
  resultPbReportClient.channelId = value;
  return self;
}
- (PbReportClientBuilder*) clearChannelId {
  resultPbReportClient.hasChannelId = NO;
  resultPbReportClient.channelId = 0;
  return self;
}
@end

@interface PbReportReport ()
@property SInt32 msgType;
@property SInt32 icmd;
@property (strong) NSString* scmd;
@property SInt32 time;
@property (strong) NSString* log;
@property (strong) PbReportBaseInfo* info;
@property (strong) PbReportClient* client;
@property (strong) PbReportMsgItem* msgItem;
@end

@implementation PbReportReport

- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasIcmd {
  return !!hasIcmd_;
}
- (void) setHasIcmd:(BOOL) _value_ {
  hasIcmd_ = !!_value_;
}
@synthesize icmd;
- (BOOL) hasScmd {
  return !!hasScmd_;
}
- (void) setHasScmd:(BOOL) _value_ {
  hasScmd_ = !!_value_;
}
@synthesize scmd;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasLog {
  return !!hasLog_;
}
- (void) setHasLog:(BOOL) _value_ {
  hasLog_ = !!_value_;
}
@synthesize log;
- (BOOL) hasInfo {
  return !!hasInfo_;
}
- (void) setHasInfo:(BOOL) _value_ {
  hasInfo_ = !!_value_;
}
@synthesize info;
- (BOOL) hasClient {
  return !!hasClient_;
}
- (void) setHasClient:(BOOL) _value_ {
  hasClient_ = !!_value_;
}
@synthesize client;
- (BOOL) hasMsgItem {
  return !!hasMsgItem_;
}
- (void) setHasMsgItem:(BOOL) _value_ {
  hasMsgItem_ = !!_value_;
}
@synthesize msgItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgType = 0;
    self.icmd = 0;
    self.scmd = @"";
    self.time = 0;
    self.log = @"";
    self.info = [PbReportBaseInfo defaultInstance];
    self.client = [PbReportClient defaultInstance];
    self.msgItem = [PbReportMsgItem defaultInstance];
  }
  return self;
}
static PbReportReport* defaultPbReportReportInstance = nil;
+ (void) initialize {
  if (self == [PbReportReport class]) {
    defaultPbReportReportInstance = [[PbReportReport alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPbReportReportInstance;
}
- (instancetype) defaultInstance {
  return defaultPbReportReportInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgType) {
    [output writeInt32:1 value:self.msgType];
  }
  if (self.hasIcmd) {
    [output writeInt32:2 value:self.icmd];
  }
  if (self.hasScmd) {
    [output writeString:3 value:self.scmd];
  }
  if (self.hasTime) {
    [output writeInt32:4 value:self.time];
  }
  if (self.hasLog) {
    [output writeString:5 value:self.log];
  }
  if (self.hasInfo) {
    [output writeMessage:6 value:self.info];
  }
  if (self.hasClient) {
    [output writeMessage:7 value:self.client];
  }
  if (self.hasMsgItem) {
    [output writeMessage:8 value:self.msgItem];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgType) {
    size_ += computeInt32Size(1, self.msgType);
  }
  if (self.hasIcmd) {
    size_ += computeInt32Size(2, self.icmd);
  }
  if (self.hasScmd) {
    size_ += computeStringSize(3, self.scmd);
  }
  if (self.hasTime) {
    size_ += computeInt32Size(4, self.time);
  }
  if (self.hasLog) {
    size_ += computeStringSize(5, self.log);
  }
  if (self.hasInfo) {
    size_ += computeMessageSize(6, self.info);
  }
  if (self.hasClient) {
    size_ += computeMessageSize(7, self.client);
  }
  if (self.hasMsgItem) {
    size_ += computeMessageSize(8, self.msgItem);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PbReportReport*) parseFromData:(NSData*) data {
  return (PbReportReport*)[[[PbReportReport builder] mergeFromData:data] build];
}
+ (PbReportReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportReport*)[[[PbReportReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PbReportReport*) parseFromInputStream:(NSInputStream*) input {
  return (PbReportReport*)[[[PbReportReport builder] mergeFromInputStream:input] build];
}
+ (PbReportReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportReport*)[[[PbReportReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PbReportReport*)[[[PbReportReport builder] mergeFromCodedInputStream:input] build];
}
+ (PbReportReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PbReportReport*)[[[PbReportReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PbReportReportBuilder*) builder {
  return [[PbReportReportBuilder alloc] init];
}
+ (PbReportReportBuilder*) builderWithPrototype:(PbReportReport*) prototype {
  return [[PbReportReport builder] mergeFrom:prototype];
}
- (PbReportReportBuilder*) builder {
  return [PbReportReport builder];
}
- (PbReportReportBuilder*) toBuilder {
  return [PbReportReport builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasIcmd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"icmd", [NSNumber numberWithInteger:self.icmd]];
  }
  if (self.hasScmd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scmd", self.scmd];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasLog) {
    [output appendFormat:@"%@%@: %@\n", indent, @"log", self.log];
  }
  if (self.hasInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"info"];
    [self.info writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClient) {
    [output appendFormat:@"%@%@ {\n", indent, @"client"];
    [self.client writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsgItem) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgItem"];
    [self.msgItem writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.msgType] forKey: @"msgType"];
  }
  if (self.hasIcmd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.icmd] forKey: @"icmd"];
  }
  if (self.hasScmd) {
    [dictionary setObject: self.scmd forKey: @"scmd"];
  }
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasLog) {
    [dictionary setObject: self.log forKey: @"log"];
  }
  if (self.hasInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.info storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"info"];
  }
  if (self.hasClient) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.client storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"client"];
  }
  if (self.hasMsgItem) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.msgItem storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"msgItem"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PbReportReport class]]) {
    return NO;
  }
  PbReportReport *otherMessage = other;
  return
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasIcmd == otherMessage.hasIcmd &&
      (!self.hasIcmd || self.icmd == otherMessage.icmd) &&
      self.hasScmd == otherMessage.hasScmd &&
      (!self.hasScmd || [self.scmd isEqual:otherMessage.scmd]) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasLog == otherMessage.hasLog &&
      (!self.hasLog || [self.log isEqual:otherMessage.log]) &&
      self.hasInfo == otherMessage.hasInfo &&
      (!self.hasInfo || [self.info isEqual:otherMessage.info]) &&
      self.hasClient == otherMessage.hasClient &&
      (!self.hasClient || [self.client isEqual:otherMessage.client]) &&
      self.hasMsgItem == otherMessage.hasMsgItem &&
      (!self.hasMsgItem || [self.msgItem isEqual:otherMessage.msgItem]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasIcmd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.icmd] hash];
  }
  if (self.hasScmd) {
    hashCode = hashCode * 31 + [self.scmd hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasLog) {
    hashCode = hashCode * 31 + [self.log hash];
  }
  if (self.hasInfo) {
    hashCode = hashCode * 31 + [self.info hash];
  }
  if (self.hasClient) {
    hashCode = hashCode * 31 + [self.client hash];
  }
  if (self.hasMsgItem) {
    hashCode = hashCode * 31 + [self.msgItem hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PbReportReportBuilder()
@property (strong) PbReportReport* resultPbReportReport;
@end

@implementation PbReportReportBuilder
@synthesize resultPbReportReport;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbReportReport = [[PbReportReport alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbReportReport;
}
- (PbReportReportBuilder*) clear {
  self.resultPbReportReport = [[PbReportReport alloc] init];
  return self;
}
- (PbReportReportBuilder*) clone {
  return [PbReportReport builderWithPrototype:resultPbReportReport];
}
- (PbReportReport*) defaultInstance {
  return [PbReportReport defaultInstance];
}
- (PbReportReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PbReportReport*) buildPartial {
  PbReportReport* returnMe = resultPbReportReport;
  self.resultPbReportReport = nil;
  return returnMe;
}
- (PbReportReportBuilder*) mergeFrom:(PbReportReport*) other {
  if (other == [PbReportReport defaultInstance]) {
    return self;
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasIcmd) {
    [self setIcmd:other.icmd];
  }
  if (other.hasScmd) {
    [self setScmd:other.scmd];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasLog) {
    [self setLog:other.log];
  }
  if (other.hasInfo) {
    [self mergeInfo:other.info];
  }
  if (other.hasClient) {
    [self mergeClient:other.client];
  }
  if (other.hasMsgItem) {
    [self mergeMsgItem:other.msgItem];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PbReportReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PbReportReportBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgType:[input readInt32]];
        break;
      }
      case 16: {
        [self setIcmd:[input readInt32]];
        break;
      }
      case 26: {
        [self setScmd:[input readString]];
        break;
      }
      case 32: {
        [self setTime:[input readInt32]];
        break;
      }
      case 42: {
        [self setLog:[input readString]];
        break;
      }
      case 50: {
        PbReportBaseInfoBuilder* subBuilder = [PbReportBaseInfo builder];
        if (self.hasInfo) {
          [subBuilder mergeFrom:self.info];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInfo:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PbReportClientBuilder* subBuilder = [PbReportClient builder];
        if (self.hasClient) {
          [subBuilder mergeFrom:self.client];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClient:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PbReportMsgItemBuilder* subBuilder = [PbReportMsgItem builder];
        if (self.hasMsgItem) {
          [subBuilder mergeFrom:self.msgItem];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsgItem:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgType {
  return resultPbReportReport.hasMsgType;
}
- (SInt32) msgType {
  return resultPbReportReport.msgType;
}
- (PbReportReportBuilder*) setMsgType:(SInt32) value {
  resultPbReportReport.hasMsgType = YES;
  resultPbReportReport.msgType = value;
  return self;
}
- (PbReportReportBuilder*) clearMsgType {
  resultPbReportReport.hasMsgType = NO;
  resultPbReportReport.msgType = 0;
  return self;
}
- (BOOL) hasIcmd {
  return resultPbReportReport.hasIcmd;
}
- (SInt32) icmd {
  return resultPbReportReport.icmd;
}
- (PbReportReportBuilder*) setIcmd:(SInt32) value {
  resultPbReportReport.hasIcmd = YES;
  resultPbReportReport.icmd = value;
  return self;
}
- (PbReportReportBuilder*) clearIcmd {
  resultPbReportReport.hasIcmd = NO;
  resultPbReportReport.icmd = 0;
  return self;
}
- (BOOL) hasScmd {
  return resultPbReportReport.hasScmd;
}
- (NSString*) scmd {
  return resultPbReportReport.scmd;
}
- (PbReportReportBuilder*) setScmd:(NSString*) value {
  resultPbReportReport.hasScmd = YES;
  resultPbReportReport.scmd = value;
  return self;
}
- (PbReportReportBuilder*) clearScmd {
  resultPbReportReport.hasScmd = NO;
  resultPbReportReport.scmd = @"";
  return self;
}
- (BOOL) hasTime {
  return resultPbReportReport.hasTime;
}
- (SInt32) time {
  return resultPbReportReport.time;
}
- (PbReportReportBuilder*) setTime:(SInt32) value {
  resultPbReportReport.hasTime = YES;
  resultPbReportReport.time = value;
  return self;
}
- (PbReportReportBuilder*) clearTime {
  resultPbReportReport.hasTime = NO;
  resultPbReportReport.time = 0;
  return self;
}
- (BOOL) hasLog {
  return resultPbReportReport.hasLog;
}
- (NSString*) log {
  return resultPbReportReport.log;
}
- (PbReportReportBuilder*) setLog:(NSString*) value {
  resultPbReportReport.hasLog = YES;
  resultPbReportReport.log = value;
  return self;
}
- (PbReportReportBuilder*) clearLog {
  resultPbReportReport.hasLog = NO;
  resultPbReportReport.log = @"";
  return self;
}
- (BOOL) hasInfo {
  return resultPbReportReport.hasInfo;
}
- (PbReportBaseInfo*) info {
  return resultPbReportReport.info;
}
- (PbReportReportBuilder*) setInfo:(PbReportBaseInfo*) value {
  resultPbReportReport.hasInfo = YES;
  resultPbReportReport.info = value;
  return self;
}
- (PbReportReportBuilder*) setInfoBuilder:(PbReportBaseInfoBuilder*) builderForValue {
  return [self setInfo:[builderForValue build]];
}
- (PbReportReportBuilder*) mergeInfo:(PbReportBaseInfo*) value {
  if (resultPbReportReport.hasInfo &&
      resultPbReportReport.info != [PbReportBaseInfo defaultInstance]) {
    resultPbReportReport.info =
      [[[PbReportBaseInfo builderWithPrototype:resultPbReportReport.info] mergeFrom:value] buildPartial];
  } else {
    resultPbReportReport.info = value;
  }
  resultPbReportReport.hasInfo = YES;
  return self;
}
- (PbReportReportBuilder*) clearInfo {
  resultPbReportReport.hasInfo = NO;
  resultPbReportReport.info = [PbReportBaseInfo defaultInstance];
  return self;
}
- (BOOL) hasClient {
  return resultPbReportReport.hasClient;
}
- (PbReportClient*) client {
  return resultPbReportReport.client;
}
- (PbReportReportBuilder*) setClient:(PbReportClient*) value {
  resultPbReportReport.hasClient = YES;
  resultPbReportReport.client = value;
  return self;
}
- (PbReportReportBuilder*) setClientBuilder:(PbReportClientBuilder*) builderForValue {
  return [self setClient:[builderForValue build]];
}
- (PbReportReportBuilder*) mergeClient:(PbReportClient*) value {
  if (resultPbReportReport.hasClient &&
      resultPbReportReport.client != [PbReportClient defaultInstance]) {
    resultPbReportReport.client =
      [[[PbReportClient builderWithPrototype:resultPbReportReport.client] mergeFrom:value] buildPartial];
  } else {
    resultPbReportReport.client = value;
  }
  resultPbReportReport.hasClient = YES;
  return self;
}
- (PbReportReportBuilder*) clearClient {
  resultPbReportReport.hasClient = NO;
  resultPbReportReport.client = [PbReportClient defaultInstance];
  return self;
}
- (BOOL) hasMsgItem {
  return resultPbReportReport.hasMsgItem;
}
- (PbReportMsgItem*) msgItem {
  return resultPbReportReport.msgItem;
}
- (PbReportReportBuilder*) setMsgItem:(PbReportMsgItem*) value {
  resultPbReportReport.hasMsgItem = YES;
  resultPbReportReport.msgItem = value;
  return self;
}
- (PbReportReportBuilder*) setMsgItemBuilder:(PbReportMsgItemBuilder*) builderForValue {
  return [self setMsgItem:[builderForValue build]];
}
- (PbReportReportBuilder*) mergeMsgItem:(PbReportMsgItem*) value {
  if (resultPbReportReport.hasMsgItem &&
      resultPbReportReport.msgItem != [PbReportMsgItem defaultInstance]) {
    resultPbReportReport.msgItem =
      [[[PbReportMsgItem builderWithPrototype:resultPbReportReport.msgItem] mergeFrom:value] buildPartial];
  } else {
    resultPbReportReport.msgItem = value;
  }
  resultPbReportReport.hasMsgItem = YES;
  return self;
}
- (PbReportReportBuilder*) clearMsgItem {
  resultPbReportReport.hasMsgItem = NO;
  resultPbReportReport.msgItem = [PbReportMsgItem defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
